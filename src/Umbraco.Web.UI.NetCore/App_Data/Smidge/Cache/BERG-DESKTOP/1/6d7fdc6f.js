(function(){'use strict';angular.module('umbraco.services',['umbraco.interceptors','umbraco.resources']);'use strict';function angularHelper($q){var requiredFormProps=['$error','$name','$dirty','$pristine','$valid','$submitted','$pending'];function collectAllFormErrorsRecursively(formCtrl,allErrors){var keys=Object.keys(formCtrl.$error);if(keys.length===0){return;}
keys.forEach(function(validationKey){var ctrls=formCtrl.$error[validationKey];ctrls.forEach(function(ctrl){if(!ctrl){allErrors.push(formCtrl);}else if(isForm(ctrl)){if(ctrl===formCtrl){allErrors.push(ctrl);return;}
collectAllFormErrorsRecursively(ctrl,allErrors);}else{allErrors.push(ctrl);}});});}
function isForm(obj){function allPropertiesExist(objectPropNames){return _.every(requiredFormProps,function(item){return _.contains(objectPropNames,item);});}
var props=_.keys(obj);if(props.length<requiredFormProps.length){return false;}
return allPropertiesExist(props);}
return{countAllFormErrors:function countAllFormErrors(formCtrl){var allErrors=[];collectAllFormErrorsRecursively(formCtrl,allErrors);return allErrors.length;},traverseScopeChain:function traverseScopeChain(scope,predicate){var s=scope.$parent;while(s){var result=predicate(s);if(result===true){return s;}
s=s.$parent;}
return null;},revalidateNgModel:function revalidateNgModel(scope,ngModel){this.safeApply(scope,function(){angular.forEach(ngModel.$parsers,function(parser){parser(ngModel.$viewValue);});});},executeSequentialPromises:function executeSequentialPromises(promises){if(!Utilities.isArray(promises)){throw'promises must be an array';}
var j=0;function pExec(promise){j++;return promise.then(function(data){if(j===promises.length){return $q.when(data);}else{return pExec(promises[j]);}});}
if(promises.length>0){return pExec(promises[0]);}else{return $q.when(true);}},safeApply:function safeApply(scope,fn){if(scope.$$phase||scope.$root&&scope.$root.$$phase){if(angular.isFunction(fn)){fn();}}else{if(angular.isFunction(fn)){scope.$apply(fn);}else{scope.$apply();}}},isForm:isForm,getCurrentForm:function getCurrentForm(scope){var form=null;for(var p in scope){if(_.isObject(scope[p])&&p!=='this'&&p.substr(0,1)!=='$'){if(this.isForm(scope[p])){form=scope[p];break;}}}
return form;},getRequiredCurrentForm:function getRequiredCurrentForm(scope){var currentForm=this.getCurrentForm(scope);if(!currentForm||!currentForm.$name){throw'The current scope requires a current form object (or ng-form) with a name assigned to it';}
return currentForm;},getNullForm:function getNullForm(formName){return{$error:{},$dirty:false,$pristine:true,$valid:true,$submitted:false,$pending:undefined,$addControl:Utilities.noop,$removeControl:Utilities.noop,$setValidity:Utilities.noop,$setDirty:Utilities.noop,$setPristine:Utilities.noop,$name:formName};}};}
angular.module('umbraco.services').factory('angularHelper',angularHelper);'use strict';function appState(eventsService){var globalState={showNavigation:null,touchDevice:null,showTray:null,stickyNavigation:null,navMode:null,isReady:null,isTablet:null};var sectionState={currentSection:null,showSearchResults:null};var treeState={selectedNode:null,currentRootNode:null};var menuState={menuActions:null,dialogTitle:null,currentNode:null,showMenuDialog:null,allowHideMenuDialog:true,dialogTemplateUrl:null,showMenu:null};var searchState={show:null};var drawerState={view:null,model:null,showDrawer:null};function setState(stateObj,key,value,stateObjName){if(!_.has(stateObj,key)){throw'The variable '+key+' does not exist in '+stateObjName;}
var changed=stateObj[key]!==value;stateObj[key]=value;if(changed){eventsService.emit('appState.'+stateObjName+'.changed',{key:key,value:value});}}
function getState(stateObj,key,stateObjName){if(!_.has(stateObj,key)){throw'The variable '+key+' does not exist in '+stateObjName;}
return stateObj[key];}
return{getGlobalState:function getGlobalState(key){return getState(globalState,key,'globalState');},setGlobalState:function setGlobalState(key,value){setState(globalState,key,value,'globalState');},getSectionState:function getSectionState(key){return getState(sectionState,key,'sectionState');},setSectionState:function setSectionState(key,value){setState(sectionState,key,value,'sectionState');},getTreeState:function getTreeState(key){return getState(treeState,key,'treeState');},setTreeState:function setTreeState(key,value){setState(treeState,key,value,'treeState');},getMenuState:function getMenuState(key){return getState(menuState,key,'menuState');},setMenuState:function setMenuState(key,value){setState(menuState,key,value,'menuState');},getSearchState:function getSearchState(key){return getState(searchState,key,'searchState');},setSearchState:function setSearchState(key,value){setState(searchState,key,value,'searchState');},getDrawerState:function getDrawerState(key){return getState(drawerState,key,'drawerState');},setDrawerState:function setDrawerState(key,value){setState(drawerState,key,value,'drawerState');}};}
angular.module('umbraco.services').factory('appState',appState);'use strict';angular.module('umbraco.services').factory('assetsService',function($q,$log,angularHelper,umbRequestHelper,$rootScope,$http,userService,javascriptLibraryResource){var initAssetsLoaded=false;function appendRnd(url){if(!Umbraco.Sys.ServerVariables.application){return url;}
var rnd=Umbraco.Sys.ServerVariables.application.cacheBuster;var _op=url.indexOf('?')>0?'&':'?';url=url+_op+'umb__rnd='+rnd;return url;};function convertVirtualPath(path){if(path.startsWith('~/')){path=umbRequestHelper.convertVirtualToAbsolutePath(path);}
return path;}
function getMomentLocales(locales,supportedLocales){return getLocales(locales,supportedLocales,'lib/moment/');}
function getFlatpickrLocales(locales,supportedLocales){return getLocales(locales,supportedLocales,'lib/flatpickr/l10n/');}
function getLocales(locales,supportedLocales,path){var localeUrls=[];var locales=locales.split(',');for(var i=0;i<locales.length;i++){var locale=locales[i].toString().toLowerCase();if(locale!=='en-us'){if(supportedLocales.indexOf(locale+'.js')>-1){localeUrls.push(path+locale+'.js');}
if(locale.indexOf('-')>-1){var majorLocale=locale.split('-')[0]+'.js';if(supportedLocales.indexOf(majorLocale)>-1){localeUrls.push(path+majorLocale);}}}}
return localeUrls;}
function loadLocales(locales,supportedLocales){var localeUrls=getMomentLocales(locales,supportedLocales.moment);localeUrls=localeUrls.concat(getFlatpickrLocales(locales,supportedLocales.flatpickr));if(localeUrls.length>=1){return service.load(localeUrls,$rootScope);}else{$q.when(true);}}
function loadLocaleForCurrentUser(){userService.getCurrentUser().then(function(currentUser){return javascriptLibraryResource.getSupportedLocales().then(function(supportedLocales){return loadLocales(currentUser.locale,supportedLocales);});});}
var service={loadedAssets:{},_getAssetPromise:function _getAssetPromise(path){if(this.loadedAssets[path]){return this.loadedAssets[path];}else{var deferred=$q.defer();this.loadedAssets[path]={deferred:deferred,state:'new',path:path};return this.loadedAssets[path];}},_loadInitAssets:function _loadInitAssets(){if(initAssetsLoaded===false){var self=this;return self.loadJs(umbRequestHelper.getApiUrl('serverVarsJs','',''),$rootScope).then(function(){initAssetsLoaded=true;return loadLocaleForCurrentUser();});}else{return $q.when(true);}},loadLocales:loadLocales,loadCss:function loadCss(path,scope,attributes,timeout){path=convertVirtualPath(path);var asset=this._getAssetPromise(path);var t=timeout||5000;var a=attributes||undefined;if(asset.state==='new'){asset.state='loading';LazyLoad.css(appendRnd(path),function(){if(!scope){scope=$rootScope;}
asset.state='loaded';angularHelper.safeApply(scope,function(){asset.deferred.resolve(true);});});}else if(asset.state==='loaded'){asset.deferred.resolve(true);}
return asset.deferred.promise;},loadJs:function loadJs(path,scope,attributes,timeout){path=convertVirtualPath(path);var asset=this._getAssetPromise(path);var t=timeout||5000;var a=attributes||undefined;if(asset.state==='new'){asset.state='loading';LazyLoad.js(appendRnd(path),function(){if(!scope){scope=$rootScope;}
asset.state='loaded';angularHelper.safeApply(scope,function(){asset.deferred.resolve(true);});});}else if(asset.state==='loaded'){asset.deferred.resolve(true);}
return asset.deferred.promise;},load:function load(pathArray,scope,defaultAssetType){var promise;if(!Utilities.isArray(pathArray)){throw'pathArray must be an array';}
var nonEmpty=_.reject(pathArray,function(item){return item===undefined||item==='';});if(nonEmpty.length===0){var deferred=$q.defer();promise=deferred.promise;deferred.resolve(true);return promise;}
var promises=[];var assets=[];_.each(nonEmpty,function(path){path=convertVirtualPath(path);var asset=service._getAssetPromise(path);if(asset.state!=='loaded'){if(asset.state==='new'){asset.state='loading';assets.push(asset);}
promises.push(asset.deferred.promise);}});promise=$q.all(promises);var cssAssets=[];var jsAssets=[];for(var i=0;i<assets.length;i++){var asset=assets[i];if(asset.path.match(/(\.css$|\.css\?)/ig)){cssAssets.push(asset);}else if(asset.path.match(/(\.js$|\.js\?)/ig)){jsAssets.push(asset);}else{switch(defaultAssetType){case'css':cssAssets.push(asset);break;case'js':jsAssets.push(asset);break;default:throw'Found unknown asset without a valid defaultAssetType specified';}}}
function assetLoaded(asset){asset.state='loaded';if(!scope){scope=$rootScope;}
angularHelper.safeApply(scope,function(){asset.deferred.resolve(true);});}
if(cssAssets.length>0){var cssPaths=_.map(cssAssets,function(asset){return appendRnd(asset.path);});LazyLoad.css(cssPaths,function(){_.each(cssAssets,assetLoaded);});}
if(jsAssets.length>0){var jsPaths=_.map(jsAssets,function(asset){return appendRnd(asset.path);});LazyLoad.js(jsPaths,function(){_.each(jsAssets,assetLoaded);});}
return promise;}};return service;});'use strict';(function(){'use strict';function backdropService(eventsService){var args={opacity:null,element:null,elementPreventClick:false,disableEventsOnClick:false,show:false};function open(options){if(options&&options.element){args.element=options.element;}
if(options&&options.disableEventsOnClick){args.disableEventsOnClick=options.disableEventsOnClick;}
args.show=true;eventsService.emit('appState.backdrop',args);}
function close(){args.opacity=null,args.element=null,args.elementPreventClick=false,args.disableEventsOnClick=false,args.show=false;eventsService.emit('appState.backdrop',args);}
function setOpacity(opacity){args.opacity=opacity;eventsService.emit('appState.backdrop',args);}
function setHighlight(element,preventClick){args.element=element;args.elementPreventClick=preventClick;eventsService.emit('appState.backdrop',args);}
var service={open:open,close:close,setOpacity:setOpacity,setHighlight:setHighlight};return service;}
angular.module('umbraco.services').factory('backdropService',backdropService);}());'use strict';(function(){'use strict';function blockEditorService(blockEditorModelObject){function createModelObject(propertyModelValue,propertyEditorAlias,blockConfigurations,scopeOfExistance,propertyEditorScope){return new blockEditorModelObject(propertyModelValue,propertyEditorAlias,blockConfigurations,scopeOfExistance,propertyEditorScope);}
return{createModelObject:createModelObject};}
angular.module('umbraco.services').service('blockEditorService',blockEditorService);}());'use strict';(function(){'use strict';function blockEditorModelObjectFactory($interpolate,$q,udiService,contentResource,localizationService){function mapToElementModel(elementModel,dataModel){if(!elementModel||!elementModel.variants||!elementModel.variants.length){return;}
var variant=elementModel.variants[0];for(var t=0;t<variant.tabs.length;t++){var tab=variant.tabs[t];for(var p=0;p<tab.properties.length;p++){var prop=tab.properties[p];if(dataModel[prop.alias]){prop.value=dataModel[prop.alias];}}}}
function mapToPropertyModel(elementModel,dataModel){if(!elementModel||!elementModel.variants||!elementModel.variants.length){return;}
var variant=elementModel.variants[0];for(var t=0;t<variant.tabs.length;t++){var tab=variant.tabs[t];for(var p=0;p<tab.properties.length;p++){var prop=tab.properties[p];if(prop.value){dataModel[prop.alias]=prop.value;}}}}
function mapElementValues(fromModel,toModel){if(!fromModel||!fromModel.variants){toModel.variants=null;return;}
if(!fromModel.variants.length){toModel.variants=[];return;}
var fromVariant=fromModel.variants[0];if(!fromVariant){toModel.variants=[null];return;}
var toVariant=toModel.variants[0];for(var t=0;t<fromVariant.tabs.length;t++){var fromTab=fromVariant.tabs[t];var toTab=toVariant.tabs[t];for(var p=0;p<fromTab.properties.length;p++){var fromProp=fromTab.properties[p];var toProp=toTab.properties[p];toProp.value=fromProp.value;}}}
function getBlockLabel(blockObject){if(blockObject.labelInterpolator!==undefined){return blockObject.labelInterpolator(blockObject.data);}
return blockObject.content.contentTypeName;}
function addWatchers(blockObject,isolatedScope,forSettings){var model=forSettings?blockObject.settings:blockObject.content;if(!model||!model.variants||!model.variants.length){return;}
var variant=model.variants[0];var field=forSettings?'settings':'content';var watcherCreator=forSettings?createSettingsModelPropWatcher:createContentModelPropWatcher;for(var t=0;t<variant.tabs.length;t++){var tab=variant.tabs[t];for(var p=0;p<tab.properties.length;p++){var prop=tab.properties[p];blockObject.__watchers.push(isolatedScope.$watch('blockObjects._'+blockObject.key+'.'+field+'.variants[0].tabs['+t+'].properties['+p+'].value',watcherCreator(blockObject,prop)));if(forSettings===true){blockObject.__watchers.push(isolatedScope.$watch('blockObjects._'+blockObject.key+'.'+'settingsData'+'.'+prop.alias,createLayoutSettingsModelWatcher(blockObject,prop)));}else{blockObject.__watchers.push(isolatedScope.$watch('blockObjects._'+blockObject.key+'.'+'data'+'.'+prop.alias,createDataModelWatcher(blockObject,prop)));}}}
if(blockObject.__watchers.length===0){blockObject.updateLabel();}}
function createDataModelWatcher(blockObject,prop){return function(){if(prop.value!==blockObject.data[prop.alias]){prop.value=blockObject.data[prop.alias];blockObject.updateLabel();}};}
function createLayoutSettingsModelWatcher(blockObject,prop){return function(){if(prop.value!==blockObject.settingsData[prop.alias]){prop.value=blockObject.settingsData[prop.alias];}};}
function createContentModelPropWatcher(blockObject,prop){return function(){if(blockObject.data[prop.alias]!==prop.value){blockObject.data[prop.alias]=prop.value;}
blockObject.updateLabel();};}
function createSettingsModelPropWatcher(blockObject,prop){return function(){if(blockObject.settingsData[prop.alias]!==prop.value){blockObject.settingsData[prop.alias]=prop.value;}};}
function createDataEntry(elementTypeKey,dataItems){var data={contentTypeKey:elementTypeKey,udi:udiService.create('element')};dataItems.push(data);return data.udi;}
function getDataByUdi(udi,dataItems){return dataItems.find(function(entry){return entry.udi===udi;})||null;}
function ensureUdiAndKey(contentData,udi){contentData.udi=udi;contentData.key=udiService.getKey(udi);}
var notSupportedProperties=['Umbraco.Tags','Umbraco.UploadField','Umbraco.ImageCropper'];function formatScaffoldData(scaffold){scaffold.variants.forEach(function(variant){variant.tabs.forEach(function(tab){tab.properties.forEach(function(property){if(notSupportedProperties.indexOf(property.editor)!==-1){property.view='notsupported';}});});});if(!scaffold.apps){console.warn('No content apps found in scaffold');return $q.resolve(scaffold);}
var contentApp=scaffold.apps.find(function(entry){return entry.alias==='umbContent';});if(contentApp){contentApp.view='views/common/infiniteeditors/blockeditor/blockeditor.content.html';}
var infoAppIndex=scaffold.apps.findIndex(function(entry){return entry.alias==='umbInfo';});if(infoAppIndex>=0){scaffold.apps.splice(infoAppIndex,1);}
return localizationService.localize('blockEditor_tabBlockSettings').then(function(settingsName){var settingsTab={'name':settingsName,'alias':'settings','icon':'icon-settings','view':'views/common/infiniteeditors/blockeditor/blockeditor.settings.html','hasError':false};scaffold.apps.push(settingsTab);return scaffold;});}
function BlockEditorModelObject(propertyModelValue,propertyEditorAlias,blockConfigurations,scopeOfExistance,propertyEditorScope){if(!propertyModelValue){throw new Error('propertyModelValue cannot be undefined, to ensure we keep the binding to the angular model we need minimum an empty object.');}
this.__watchers=[];this.value=propertyModelValue;this.value.layout=this.value.layout||{};this.value.contentData=this.value.contentData||[];this.value.settingsData=this.value.settingsData||[];this.propertyEditorAlias=propertyEditorAlias;this.blockConfigurations=blockConfigurations;this.scaffolds=[];this.isolatedScope=scopeOfExistance.$new(true);this.isolatedScope.blockObjects={};this.__watchers.push(this.isolatedScope.$on('$destroy',this.destroy.bind(this)));this.__watchers.push(propertyEditorScope.$on('postFormSubmitting',this.sync.bind(this)));};BlockEditorModelObject.prototype={update:function update(propertyModelValue,propertyEditorScope){this.__watchers.forEach(function(w){w();});delete this.__watchers;for(var key in this.isolatedScope.blockObjects){this.destroyBlockObject(this.isolatedScope.blockObjects[key]);}
this.isolatedScope.blockObjects={};this.value=propertyModelValue;this.value.layout=this.value.layout||{};this.value.data=this.value.data||[];this.__watchers=[];this.__watchers.push(this.isolatedScope.$on('$destroy',this.destroy.bind(this)));this.__watchers.push(propertyEditorScope.$on('postFormSubmitting',this.sync.bind(this)));},getBlockConfiguration:function getBlockConfiguration(key){return this.blockConfigurations.find(function(bc){return bc.contentTypeKey===key;})||null;},load:function load(){var tasks=[];var scaffoldKeys=[];this.blockConfigurations.forEach(function(blockConfiguration){scaffoldKeys.push(blockConfiguration.contentTypeKey);if(blockConfiguration.settingsElementTypeKey!=null){scaffoldKeys.push(blockConfiguration.settingsElementTypeKey);}});scaffoldKeys=scaffoldKeys.filter(function(value,index,self){return self.indexOf(value)===index;});var self=this;scaffoldKeys.forEach(function(contentTypeKey){tasks.push(contentResource.getScaffoldByKey(-20,contentTypeKey).then(function(scaffold){if(self.scaffolds){return formatScaffoldData(scaffold).then(function(s){self.scaffolds.push(s);return s;});}else{return $q.resolve(scaffold);}}));});return $q.all(tasks);},getAvailableAliasesForBlockContent:function getAvailableAliasesForBlockContent(){var _this=this;return this.blockConfigurations.map(function(blockConfiguration){return _this.getScaffoldFromKey(blockConfiguration.contentTypeKey).contentTypeAlias;});},getAvailableBlocksForBlockPicker:function getAvailableBlocksForBlockPicker(){var _this2=this;var blocks=[];this.blockConfigurations.forEach(function(blockConfiguration){var scaffold=_this2.getScaffoldFromKey(blockConfiguration.contentTypeKey);if(scaffold){blocks.push({blockConfigModel:blockConfiguration,elementTypeModel:scaffold.documentType});}});return blocks;},getScaffoldFromKey:function getScaffoldFromKey(contentTypeKey){return this.scaffolds.find(function(o){return o.contentTypeKey===contentTypeKey;});},getScaffoldFromAlias:function getScaffoldFromAlias(contentTypeAlias){return this.scaffolds.find(function(o){return o.contentTypeAlias===contentTypeAlias;});},getBlockObject:function getBlockObject(layoutEntry){var contentUdi=layoutEntry.contentUdi;var dataModel=getDataByUdi(contentUdi,this.value.contentData);if(dataModel===null){console.error('Couldn\'t find content model of '+contentUdi);return null;}
var blockConfiguration=this.getBlockConfiguration(dataModel.contentTypeKey);var contentScaffold;if(blockConfiguration===null){console.error('The block entry of '+contentUdi+' is not being initialized because its contentTypeKey is not allowed for this PropertyEditor');}else{contentScaffold=this.getScaffoldFromKey(blockConfiguration.contentTypeKey);if(contentScaffold===null){console.error('The block entry of '+contentUdi+' is not begin initialized cause its Element Type was not loaded.');}}
if(blockConfiguration===null||contentScaffold===null){blockConfiguration={label:'Unsupported Block',unsupported:true};contentScaffold={};}
var blockObject={};blockObject.cloneNode=function(){return null;};blockObject.key=String.CreateGuid().replace(/-/g,'');blockObject.config=Utilities.copy(blockConfiguration);if(blockObject.config.label&&blockObject.config.label!==''){blockObject.labelInterpolator=$interpolate(blockObject.config.label);}
blockObject.__scope=this.isolatedScope;blockObject.updateLabel=_.debounce(function(){if(this.__scope){this.label=getBlockLabel(this);this.__scope.$evalAsync();}}.bind(blockObject),10);blockObject.content=Utilities.copy(contentScaffold);ensureUdiAndKey(blockObject.content,contentUdi);mapToElementModel(blockObject.content,dataModel);blockObject.data=dataModel;blockObject.layout=layoutEntry;blockObject.__watchers=[];if(blockConfiguration.settingsElementTypeKey){var settingsScaffold=this.getScaffoldFromKey(blockConfiguration.settingsElementTypeKey);if(settingsScaffold!==null){if(!layoutEntry.settingsUdi){layoutEntry.settingsUdi=createDataEntry(blockConfiguration.settingsElementTypeKey,this.value.settingsData);}
var settingsUdi=layoutEntry.settingsUdi;var settingsData=getDataByUdi(settingsUdi,this.value.settingsData);if(settingsData===null){console.error('Couldnt find content settings data of '+settingsUdi);return null;}
blockObject.settingsData=settingsData;blockObject.settings=Utilities.copy(settingsScaffold);ensureUdiAndKey(blockObject.settings,settingsUdi);mapToElementModel(blockObject.settings,settingsData);}}
blockObject.retrieveValuesFrom=function(content,settings){if(this.content!==null){mapElementValues(content,this.content);}
if(this.config.settingsElementTypeKey!==null){mapElementValues(settings,this.settings);}};blockObject.sync=function(){if(this.content!==null){mapToPropertyModel(this.content,this.data);}
if(this.config.settingsElementTypeKey!==null){mapToPropertyModel(this.settings,this.settingsData);}};blockObject.label=getBlockLabel(blockObject);this.isolatedScope.blockObjects['_'+blockObject.key]=blockObject;addWatchers(blockObject,this.isolatedScope);addWatchers(blockObject,this.isolatedScope,true);blockObject.destroy=function(){this.__watchers.forEach(function(w){w();});delete this.__watchers;delete this.config;delete this.layout;delete this.data;delete this.settingsData;delete this.content;delete this.settings;delete this.__scope.blockObjects['_'+this.key];delete this.__scope;delete this.destroy;delete this.key;};return blockObject;},removeDataAndDestroyModel:function removeDataAndDestroyModel(blockObject){var udi=blockObject.content.udi;var settingsUdi=null;if(blockObject.settings){settingsUdi=blockObject.settings.udi;}
this.destroyBlockObject(blockObject);this.removeDataByUdi(udi);if(settingsUdi){this.removeSettingsByUdi(settingsUdi);}},destroyBlockObject:function destroyBlockObject(blockObject){blockObject.destroy();},getLayout:function getLayout(defaultStructure){if(!this.value.layout[this.propertyEditorAlias]){this.value.layout[this.propertyEditorAlias]=defaultStructure;}
return this.value.layout[this.propertyEditorAlias];},create:function create(contentTypeKey){var blockConfiguration=this.getBlockConfiguration(contentTypeKey);if(blockConfiguration===null){return null;}
var entry={contentUdi:createDataEntry(contentTypeKey,this.value.contentData)};if(blockConfiguration.settingsElementTypeKey!=null){entry.settingsUdi=createDataEntry(blockConfiguration.settingsElementTypeKey,this.value.settingsData);}
return entry;},createFromElementType:function createFromElementType(elementTypeDataModel){elementTypeDataModel=Utilities.copy(elementTypeDataModel);var contentTypeKey=elementTypeDataModel.contentTypeKey;var layoutEntry=this.create(contentTypeKey);if(layoutEntry===null){return null;}
var dataModel=getDataByUdi(layoutEntry.udi,this.value.contentData);if(dataModel===null){return null;}
mapToPropertyModel(elementTypeDataModel,dataModel);return layoutEntry;},sync:function sync(){for(var key in this.isolatedScope.blockObjects){this.isolatedScope.blockObjects[key].sync();}},removeDataByUdi:function removeDataByUdi(udi){var index=this.value.contentData.findIndex(function(o){return o.udi===udi;});if(index!==-1){this.value.contentData.splice(index,1);}},removeSettingsByUdi:function removeSettingsByUdi(udi){var index=this.value.settingsData.findIndex(function(o){return o.udi===udi;});if(index!==-1){this.value.settingsData.splice(index,1);}},destroy:function destroy(){this.__watchers.forEach(function(w){w();});for(var key in this.isolatedScope.blockObjects){this.destroyBlockObject(this.isolatedScope.blockObjects[key]);}
delete this.__watchers;delete this.value;delete this.propertyEditorAlias;delete this.blockConfigurations;delete this.scaffolds;this.isolatedScope.$destroy();delete this.isolatedScope;delete this.destroy;}};return BlockEditorModelObject;}
angular.module('umbraco.services').service('blockEditorModelObject',blockEditorModelObjectFactory);}());'use strict';function clipboardService(notificationsService,eventsService,localStorageService,iconHelper){var clearPropertyResolvers=[];var STORAGE_KEY='umbClipboardService';var retriveStorage=function retriveStorage(){if(localStorageService.isSupported===false){return null;}
var dataJSON;var dataString=localStorageService.get(STORAGE_KEY);if(dataString!=null){dataJSON=JSON.parse(dataString);}
if(dataJSON==null){dataJSON=new Object();}
if(dataJSON.entries===undefined){dataJSON.entries=[];}
return dataJSON;};var saveStorage=function saveStorage(storage){var storageString=JSON.stringify(storage);try{var storageJSON=JSON.parse(storageString);localStorageService.set(STORAGE_KEY,storageString);eventsService.emit('clipboardService.storageUpdate');return true;}catch(e){return false;}
return false;};function clearPropertyForStorage(prop){for(var i=0;i<clearPropertyResolvers.length;i++){clearPropertyResolvers[i](prop,clearPropertyForStorage);}}
var prepareEntryForStorage=function prepareEntryForStorage(entryData,firstLevelClearupMethod){var cloneData=Utilities.copy(entryData);if(firstLevelClearupMethod!=undefined){firstLevelClearupMethod(cloneData);}
for(var t=0;t<cloneData.variants[0].tabs.length;t++){var tab=cloneData.variants[0].tabs[t];for(var p=0;p<tab.properties.length;p++){var prop=tab.properties[p];clearPropertyForStorage(prop);}}
return cloneData;};var isEntryCompatible=function isEntryCompatible(entry,type,allowedAliases){return entry.type===type&&(entry.alias&&allowedAliases.filter(function(allowedAlias){return allowedAlias===entry.alias;}).length>0||entry.aliases&&entry.aliases.filter(function(entryAlias){return allowedAliases.filter(function(allowedAlias){return allowedAlias===entryAlias;}).length>0;}).length===entry.aliases.length);};var service={};service.registrerClearPropertyResolver=function(resolver){this.registerClearPropertyResolver(resolver);};service.registerClearPropertyResolver=function(resolver){clearPropertyResolvers.push(resolver);};service.registrerClearPropertyResolver=function(resolver){clearPropertyResolvers.push(resolver);};service.copy=function(type,alias,data,displayLabel,displayIcon,uniqueKey,firstLevelClearupMethod){var storage=retriveStorage();displayLabel=displayLabel||data.name;displayIcon=displayIcon||iconHelper.convertFromLegacyIcon(data.icon);uniqueKey=uniqueKey||data.key||console.error('missing unique key for this content');storage.entries=storage.entries.filter(function(entry){return entry.unique!==uniqueKey;});var entry={unique:uniqueKey,type:type,alias:alias,data:prepareEntryForStorage(data,firstLevelClearupMethod),label:displayLabel,icon:displayIcon};storage.entries.push(entry);if(saveStorage(storage)===true){notificationsService.success('Clipboard','Copied to clipboard.');}else{notificationsService.error('Clipboard','Couldnt copy this data to clipboard.');}};service.copyArray=function(type,aliases,datas,displayLabel,displayIcon,uniqueKey,firstLevelClearupMethod){var storage=retriveStorage();var copiedDatas=datas.map(function(data){return prepareEntryForStorage(data,firstLevelClearupMethod);});storage.entries=storage.entries.filter(function(entry){return entry.unique!==uniqueKey;});var entry={unique:uniqueKey,type:type,aliases:aliases,data:copiedDatas,label:displayLabel,icon:displayIcon};storage.entries.push(entry);if(saveStorage(storage)===true){notificationsService.success('Clipboard','Copied to clipboard.');}else{notificationsService.error('Clipboard','Couldnt copy this data to clipboard.');}};service.isSupported=function(){return localStorageService.isSupported;};service.hasEntriesOfType=function(type,aliases){if(service.retriveEntriesOfType(type,aliases).length>0){return true;}
return false;};service.retriveEntriesOfType=function(type,allowedAliases){var storage=retriveStorage();var filteretEntries=storage.entries.filter(function(entry){return isEntryCompatible(entry,type,allowedAliases);});return filteretEntries;};service.retriveDataOfType=function(type,aliases){return service.retriveEntriesOfType(type,aliases).map(function(x){return x.data;});};service.clearEntriesOfType=function(type,allowedAliases){var storage=retriveStorage();var filteretEntries=storage.entries.filter(function(entry){return!isEntryCompatible(entry,type,allowedAliases);});storage.entries=filteretEntries;saveStorage(storage);};return service;}
angular.module('umbraco.services').factory('clipboardService',clipboardService);'use strict';function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest();}
function _nonIterableRest(){throw new TypeError('Invalid attempt to destructure non-iterable instance');}
function _iterableToArrayLimit(arr,i){if(!(Symbol.iterator in Object(arr)||Object.prototype.toString.call(arr)==='[object Arguments]')){return;}
var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)
break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i['return']!=null)
_i['return']();}finally{if(_d)
throw _e;}}
return _arr;}
function _arrayWithHoles(arr){if(Array.isArray(arr))
return arr;}
function contentEditingHelper(fileManager,$q,$location,$routeParams,editorState,notificationsService,navigationService,localizationService,serverValidationManager,formHelper){function isValidIdentifier(id){if(Utilities.isNumber(id)){if(id===0){return false;}
if(id>0){return true;}}
if(id==='00000000-0000-0000-0000-000000000000'){return false;}
if(id===''){return false;}
return true;}
function showNotificationsForModelsState(ms){for(var _i=0,_Object$entries=Object.entries(ms);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];var errorMsg=value[0];if(Utilities.isString(errorMsg)&&errorMsg.startsWith('[')||Utilities.isArray(errorMsg)){var idsToErrors=serverValidationManager.parseComplexEditorError(errorMsg,'');idsToErrors.forEach(function(x){if(x.modelState){showNotificationsForModelsState(x.modelState);}});}else if(value[0]){notificationsService.error('Validation',value[0]);}}}
return{contentEditorPerformSave:function contentEditorPerformSave(args){if(!Utilities.isObject(args)){throw'args must be an object';}
if(!args.scope){throw'args.scope is not defined';}
if(!args.content){throw'args.content is not defined';}
if(!args.saveMethod){throw'args.saveMethod is not defined';}
if(args.showNotifications===undefined){args.showNotifications=true;}
if(args.create===undefined){if($routeParams.create){args.create=true;}}
if(args.softRedirect===undefined){args.softRedirect=false;}
var self=this;var _rebindCallback=args.rebindCallback===undefined?self.reBindChangedProperties:args.rebindCallback;if(formHelper.submitForm({scope:args.scope,action:args.action})){return args.saveMethod(args.content,args.create,fileManager.getFiles(),args.showNotifications).then(function(data){formHelper.resetForm({scope:args.scope});if(!args.infiniteMode){self.handleSuccessfulSave({scope:args.scope,savedContent:data,softRedirect:args.softRedirect,rebindCallback:function rebindCallback(){_rebindCallback.apply(self,[args.content,data]);}});editorState.set(args.content);}
return $q.resolve(data);},function(err){self.handleSaveError({showNotifications:args.showNotifications,softRedirect:args.softRedirect,err:err,rebindCallback:function rebindCallback(){_rebindCallback.apply(self,[args.content,err.data]);}});editorState.set(args.content);return $q.reject(err);});}else{return $q.reject();}},addInfoTab:function addInfoTab(tabs){var infoTab={'alias':'_umb_infoTab','id':-1,'label':'Info','properties':[]};var foundInfoTab=false;angular.forEach(tabs,function(tab){if(tab.id===infoTab.id&&tab.alias===infoTab.alias){foundInfoTab=true;}});if(!foundInfoTab){localizationService.localize('general_info').then(function(value){infoTab.label=value;tabs.push(infoTab);});}},configureContentEditorButtons:function configureContentEditorButtons(args){if(!Utilities.isObject(args)){throw'args must be an object';}
if(!args.content){throw'args.content is not defined';}
if(!args.methods){throw'args.methods is not defined';}
if(!args.methods.saveAndPublish||!args.methods.sendToPublish||!args.methods.unpublish||!args.methods.schedulePublish||!args.methods.publishDescendants){throw'args.methods does not contain all required defined methods';}
var buttons={defaultButton:null,subButtons:[]};function createButtonDefinition(ch){switch(ch){case'U':return{letter:ch,labelKey:'buttons_saveAndPublish',handler:args.methods.saveAndPublish,hotKey:'ctrl+p',hotKeyWhenHidden:true,alias:'saveAndPublish',addEllipsis:args.content.variants&&args.content.variants.length>1?'true':'false'};case'H':return{letter:ch,labelKey:'buttons_saveToPublish',handler:args.methods.sendToPublish,hotKey:'ctrl+p',hotKeyWhenHidden:true,alias:'sendToPublish',addEllipsis:args.content.variants&&args.content.variants.length>1?'true':'false'};case'Z':return{letter:ch,labelKey:'content_unpublish',handler:args.methods.unpublish,hotKey:'ctrl+u',hotKeyWhenHidden:true,alias:'unpublish',addEllipsis:'true'};case'SCHEDULE':return{letter:ch,labelKey:'buttons_schedulePublish',handler:args.methods.schedulePublish,hotKey:'alt+shift+s',hotKeyWhenHidden:true,alias:'schedulePublish',addEllipsis:'true'};case'PUBLISH_DESCENDANTS':return{letter:ch,labelKey:'buttons_publishDescendants',handler:args.methods.publishDescendants,hotKey:'alt+shift+p',hotKeyWhenHidden:true,alias:'publishDescendant',addEllipsis:'true'};default:return null;}}
buttons.subButtons=[];var buttonOrder=['U','H','SCHEDULE','PUBLISH_DESCENDANTS'];if(!args.create||_.contains(args.content.allowedActions,'C')){for(var b in buttonOrder){if(_.contains(args.content.allowedActions,buttonOrder[b])){buttons.defaultButton=createButtonDefinition(buttonOrder[b]);break;}}
if(!buttons.defaultButton&&args.create&&_.contains(args.content.allowedActions,'C')){buttons.defaultButton=createButtonDefinition('A');}}
if(buttons.defaultButton){var lastIndex=_.indexOf(buttonOrder,buttons.defaultButton.letter);for(var i=lastIndex+1;i<buttonOrder.length;i++){if(_.contains(args.content.allowedActions,buttonOrder[i])){buttons.subButtons.push(createButtonDefinition(buttonOrder[i]));}}
if(_.contains(args.content.allowedActions,'U')){buttons.subButtons.push(createButtonDefinition('SCHEDULE'));buttons.subButtons.push(createButtonDefinition('PUBLISH_DESCENDANTS'));}
if(!args.create){var hasPublishedVariant=args.content.variants.filter(function(variant){return variant.state==='Published'||variant.state==='PublishedPendingChanges';}).length>0;if(hasPublishedVariant&&_.contains(args.content.allowedActions,'U')&&_.contains(args.content.allowedActions,'Z')){buttons.subButtons.push(createButtonDefinition('Z'));}}}
return buttons;},getAllProps:function getAllProps(content){var allProps=[];for(var i=0;i<content.tabs.length;i++){for(var p=0;p<content.tabs[i].properties.length;p++){allProps.push(content.tabs[i].properties[p]);}}
return allProps;},buildCompositeVariantId:function buildCompositeVariantId(variant){return(variant.language?variant.language.culture:'invariant')+'_'+(variant.segment?variant.segment:'null');},getAllowedActions:function getAllowedActions(content,creating){var actionOrder=['U','H','A'];var defaultActions;var actions=[];if(!creating||_.contains(content.allowedActions,'C')){for(var b in actionOrder){if(_.contains(content.allowedActions,actionOrder[b])){defaultAction=actionOrder[b];break;}}}
actions.push(defaultAction);if(defaultAction){var lastIndex=_.indexOf(actionOrder,defaultAction);for(var i=lastIndex+1;i<actionOrder.length;i++){if(_.contains(content.allowedActions,actionOrder[i])){actions.push(actionOrder[i]);}}
if(!creating){if(content.publishDate&&_.contains(content.allowedActions,'U')){actions.push('Z');}}}
return actions;},getButtonFromAction:function getButtonFromAction(ch){switch(ch){case'U':return{letter:ch,labelKey:'buttons_saveAndPublish',handler:'saveAndPublish',hotKey:'ctrl+p'};case'H':return{letter:ch,labelKey:'buttons_saveToPublish',handler:'sendToPublish',hotKey:'ctrl+p'};case'A':return{letter:ch,labelKey:'buttons_save',handler:'save',hotKey:'ctrl+s'};case'Z':return{letter:ch,labelKey:'content_unpublish',handler:'unpublish'};default:return null;}},reBindChangedProperties:function reBindChangedProperties(origContent,savedContent){var shouldIgnore=function shouldIgnore(propName){return _.some(['variants','tabs','properties','apps','createDateFormatted','releaseDateFormatted','expireDateFormatted','releaseDate','expireDate'],function(i){return i===propName;});};for(var o in savedContent){if(shouldIgnore(o)){continue;}
if(!_.isEqual(origContent[o],savedContent[o])){origContent[o]=savedContent[o];}}
var isContent=false;var origVariants=[];var savedVariants=[];if(origContent.variants){isContent=true;origVariants=origContent.variants;savedVariants=savedContent.variants;}else{origVariants.push(origContent);savedVariants.push(savedContent);}
var changed=[];function getNewProp(alias,allNewProps){return _.find(allNewProps,function(item){return item.alias===alias;});}
for(var j=0;j<origVariants.length;j++){var origVariant=origVariants[j];var savedVariant=savedVariants[j];if(isContent&&!origVariant.save){continue;}
if(origContent.variants){var variantPropertiesSync=['state'];for(var b in savedVariant){var shouldCompare=_.some(variantPropertiesSync,function(e){return e===b;});if(shouldCompare||!shouldIgnore(b)){if(!_.isEqual(origVariant[b],savedVariant[b])){origVariant[b]=savedVariant[b];}}}}
var allOrigProps=this.getAllProps(origVariant);var allNewProps=this.getAllProps(savedVariant);for(var k=0;k<allOrigProps.length;k++){var origProp=allOrigProps[k];var alias=origProp.alias;var newProp=getNewProp(alias,allNewProps);if(newProp&&!_.isEqual(origProp.value,newProp.value)){var origVal=origProp.value;origProp.value=newProp.value;if(angular.isFunction(origProp.onValueChanged)){origProp.onValueChanged(origProp.value,origVal);}
changed.push(origProp);}}}
return changed;},handleSaveError:function handleSaveError(args){if(!args.err){throw'args.err cannot be null';}
if(args.err.status===400){if(args.err.data&&args.err.data.ModelState){formHelper.handleServerValidation(args.err.data.ModelState);if(args.showNotifications){showNotificationsForModelsState(args.err.data.ModelState);}
if(!this.redirectToCreatedContent(args.err.data.id,args.softRedirect)||args.softRedirect){if(args.rebindCallback&&angular.isFunction(args.rebindCallback)){args.rebindCallback();}
serverValidationManager.notify();}
return true;}}
return false;},handleSuccessfulSave:function handleSuccessfulSave(args){if(!args){throw'args cannot be null';}
if(!args.savedContent){throw'args.savedContent cannot be null';}
if(!this.redirectToCreatedContent(args.redirectId?args.redirectId:args.savedContent.id,args.softRedirect)||args.softRedirect){if(args.rebindCallback&&angular.isFunction(args.rebindCallback)){args.rebindCallback();}}},redirectToCreatedContent:function redirectToCreatedContent(id,softRedirect){if($routeParams.create&&isValidIdentifier(id)){navigationService.clearSearch(['cculture','csegment']);if(softRedirect){navigationService.setSoftRedirect();}
$location.path('/'+$routeParams.section+'/'+$routeParams.tree+'/'+$routeParams.method+'/'+id);$location.replace();return true;}
return false;},redirectToRenamedContent:function redirectToRenamedContent(id){navigationService.clearSearch();$location.path('/'+$routeParams.section+'/'+$routeParams.tree+'/'+$routeParams.method+'/'+id);$location.replace();return true;}};}
angular.module('umbraco.services').factory('contentEditingHelper',contentEditingHelper);'use strict';function contentTypeHelper(contentTypeResource,dataTypeResource,$filter,$injector,$q){var contentTypeHelperService={createIdArray:function createIdArray(array){var newArray=[];angular.forEach(array,function(arrayItem){if(Utilities.isObject(arrayItem)){newArray.push(arrayItem.id);}else{newArray.push(arrayItem);}});return newArray;},generateModels:function generateModels(){var deferred=$q.defer();var modelsResource=$injector.has('modelsBuilderManagementResource')?$injector.get('modelsBuilderManagementResource'):null;var modelsBuilderEnabled=Umbraco.Sys.ServerVariables.umbracoPlugins.modelsBuilder.enabled;if(modelsBuilderEnabled&&modelsResource){modelsResource.buildModels().then(function(result){deferred.resolve(result);modelsResource.getModelsOutOfDateStatus();},function(e){deferred.reject(e);});}else{deferred.resolve(false);}
return deferred.promise;},checkModelsBuilderStatus:function checkModelsBuilderStatus(){var deferred=$q.defer();var modelsResource=$injector.has('modelsBuilderManagementResource')?$injector.get('modelsBuilderManagementResource'):null;var modelsBuilderEnabled=Umbraco&&Umbraco.Sys&&Umbraco.Sys.ServerVariables&&Umbraco.Sys.ServerVariables.umbracoPlugins&&Umbraco.Sys.ServerVariables.umbracoPlugins.modelsBuilder&&Umbraco.Sys.ServerVariables.umbracoPlugins.modelsBuilder.enabled===true;if(modelsBuilderEnabled&&modelsResource){modelsResource.getModelsOutOfDateStatus().then(function(result){deferred.resolve(result.status===0);});}else{deferred.resolve(false);}
return deferred.promise;},makeObjectArrayFromId:function makeObjectArrayFromId(idArray,objectArray){var newArray=[];for(var idIndex=0;idArray.length>idIndex;idIndex++){var id=idArray[idIndex];for(var objectIndex=0;objectArray.length>objectIndex;objectIndex++){var object=objectArray[objectIndex];if(id===object.id){newArray.push(object);}}}
return newArray;},validateAddingComposition:function validateAddingComposition(contentType,compositeContentType){var propertiesAdding=_.flatten(_.map(compositeContentType.groups,function(g){return _.map(g.properties,function(p){return p.alias;});}));var propAliasesExisting=_.filter(_.flatten(_.map(contentType.groups,function(g){return _.map(g.properties,function(p){return p.alias;});})),function(f){return f!==null&&f!==undefined;});var intersec=_.intersection(propertiesAdding,propAliasesExisting);if(intersec.length>0){return intersec;}
return[];},mergeCompositeContentType:function mergeCompositeContentType(contentType,compositeContentType){var overlappingAliases=this.validateAddingComposition(contentType,compositeContentType);if(overlappingAliases.length>0){throw new Error('Cannot add this composition, these properties already exist on the content type: '+overlappingAliases.join());}
angular.forEach(compositeContentType.groups,function(compositionGroup){compositionGroup.properties=$filter('orderBy')(compositionGroup.properties,'sortOrder');angular.forEach(compositionGroup.properties,function(property){dataTypeResource.getById(property.dataTypeId).then(function(dataType){property.dataTypeIcon=dataType.icon;property.dataTypeName=dataType.name;});});compositionGroup.inherited=true;angular.forEach(compositionGroup.properties,function(compositionProperty){compositionProperty.inherited=true;});compositionGroup.tabState='inActive';angular.forEach(contentType.groups,function(contentTypeGroup){if(contentTypeGroup.name===compositionGroup.name){compositionGroup.groupIsMerged=true;contentTypeGroup.inherited=true;contentTypeGroup.properties=compositionGroup.properties.concat(contentTypeGroup.properties);contentTypeGroup.properties=contentTypeHelperService.updatePropertiesSortOrder(contentTypeGroup.properties);if(contentTypeGroup.parentTabContentTypeNames===null||contentTypeGroup.parentTabContentTypeNames===undefined){contentTypeGroup.parentTabContentTypeNames=[];}
contentTypeGroup.parentTabContentTypeNames.push(compositeContentType.name);if(contentTypeGroup.parentTabContentTypes===null||contentTypeGroup.parentTabContentTypes===undefined){contentTypeGroup.parentTabContentTypes=[];}
contentTypeGroup.parentTabContentTypes.push(compositeContentType.id);contentTypeGroup.sortOrder=compositionGroup.sortOrder;var contentTypeGroupCopy=Utilities.copy(contentTypeGroup);var index=contentType.groups.indexOf(contentTypeGroup);contentType.groups.splice(index,1);contentType.groups.unshift(contentTypeGroupCopy);}});if(compositionGroup.groupIsMerged===false||compositionGroup.groupIsMerged===undefined){if(compositionGroup.parentTabContentTypeNames===null||compositionGroup.parentTabContentTypeNames===undefined){compositionGroup.parentTabContentTypeNames=[];}
compositionGroup.parentTabContentTypeNames.push(compositeContentType.name);if(compositionGroup.parentTabContentTypes===null||compositionGroup.parentTabContentTypes===undefined){compositionGroup.parentTabContentTypes=[];}
compositionGroup.parentTabContentTypes.push(compositeContentType.id);contentType.groups.unshift(compositionGroup);}});contentType.groups=$filter('orderBy')(contentType.groups,'sortOrder');return contentType;},splitCompositeContentType:function splitCompositeContentType(contentType,compositeContentType){var groups=[];angular.forEach(contentType.groups,function(contentTypeGroup){if(contentTypeGroup.tabState!=='init'){var idIndex=contentTypeGroup.parentTabContentTypes.indexOf(compositeContentType.id);var nameIndex=contentTypeGroup.parentTabContentTypeNames.indexOf(compositeContentType.name);var groupIndex=contentType.groups.indexOf(contentTypeGroup);if(idIndex!==-1){var properties=[];angular.forEach(contentTypeGroup.properties,function(property){if(property.contentTypeId!==compositeContentType.id){properties.push(property);}});contentTypeGroup.properties=properties;contentTypeGroup.parentTabContentTypes.splice(idIndex,1);contentTypeGroup.parentTabContentTypeNames.splice(nameIndex,1);if(contentTypeGroup.parentTabContentTypes.length===0){contentTypeGroup.inherited=false;}
if(contentTypeGroup.properties.length>1){groups.push(contentTypeGroup);}}else{groups.push(contentTypeGroup);}}else{groups.push(contentTypeGroup);}
contentTypeGroup.properties=contentTypeHelperService.updatePropertiesSortOrder(contentTypeGroup.properties);});contentType.groups=groups;},updatePropertiesSortOrder:function updatePropertiesSortOrder(properties){var sortOrder=0;angular.forEach(properties,function(property){if(!property.inherited&&property.propertyState!=='init'){property.sortOrder=sortOrder;}
sortOrder++;});return properties;},getTemplatePlaceholder:function getTemplatePlaceholder(){var templatePlaceholder={'name':'','icon':'icon-layout','alias':'templatePlaceholder','placeholder':true};return templatePlaceholder;},insertDefaultTemplatePlaceholder:function insertDefaultTemplatePlaceholder(defaultTemplate){var templatePlaceholder=contentTypeHelperService.getTemplatePlaceholder();defaultTemplate=templatePlaceholder;return defaultTemplate;},insertTemplatePlaceholder:function insertTemplatePlaceholder(array){var templatePlaceholder=contentTypeHelperService.getTemplatePlaceholder();array.push(templatePlaceholder);return array;},insertChildNodePlaceholder:function insertChildNodePlaceholder(array,name,icon,id){var placeholder={'name':name,'icon':icon,'id':id};array.push(placeholder);}};return contentTypeHelperService;}
angular.module('umbraco.services').factory('contentTypeHelper',contentTypeHelper);'use strict';function cropperHelper(umbRequestHelper,$http){var service={configuration:function configuration(mediaTypeAlias){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl('imageCropperApiBaseUrl','GetConfiguration',[{mediaTypeAlias:mediaTypeAlias}])),'Failed to retrieve tinymce configuration');},calculateAspectRatioFit:function calculateAspectRatioFit(srcWidth,srcHeight,maxWidth,maxHeight,maximize){var ratio=[maxWidth/srcWidth,maxHeight/srcHeight];if(maximize){ratio=Math.max(ratio[0],ratio[1]);}else{ratio=Math.min(ratio[0],ratio[1]);}
return{width:srcWidth*ratio,height:srcHeight*ratio,ratio:ratio};},calculateSizeToRatio:function calculateSizeToRatio(srcWidth,srcHeight,ratio){return{width:srcWidth*ratio,height:srcHeight*ratio,ratio:ratio};},scaleToMaxSize:function scaleToMaxSize(srcWidth,srcHeight,maxSize){var retVal={height:srcHeight,width:srcWidth};if(srcWidth>maxSize||srcHeight>maxSize){var ratio=[maxSize/srcWidth,maxSize/srcHeight];ratio=Math.min(ratio[0],ratio[1]);retVal.height=srcHeight*ratio;retVal.width=srcWidth*ratio;}
return retVal;},convertToStyle:function convertToStyle(coordinates,originalSize,viewPort,offset){var coordinates_px=service.coordinatesToPixels(coordinates,originalSize,offset);var _offset=offset||0;var x=1-(coordinates.x1+Math.abs(coordinates.x2));var left_of_x=originalSize.width*x;var ratio=viewPort.width/left_of_x;var style={position:'absolute',top:-(coordinates_px.y1*ratio)+_offset,left:-(coordinates_px.x1*ratio)+_offset,width:Math.floor(originalSize.width*ratio),height:Math.floor(originalSize.height*ratio),originalWidth:originalSize.width,originalHeight:originalSize.height,ratio:ratio};return style;},coordinatesToPixels:function coordinatesToPixels(coordinates,originalSize,offset){var coordinates_px={x1:Math.floor(coordinates.x1*originalSize.width),y1:Math.floor(coordinates.y1*originalSize.height),x2:Math.floor(coordinates.x2*originalSize.width),y2:Math.floor(coordinates.y2*originalSize.height)};return coordinates_px;},pixelsToCoordinates:function pixelsToCoordinates(image,width,height,offset){var x1_px=Math.abs(image.left-offset);var y1_px=Math.abs(image.top-offset);var x2_px=image.width-(x1_px+width);var y2_px=image.height-(y1_px+height);var crop={};crop.x1=x1_px/image.width;crop.y1=y1_px/image.height;crop.x2=x2_px/image.width;crop.y2=y2_px/image.height;for(var coord in crop){if(crop[coord]<0){crop[coord]=0;}}
return crop;},alignToCoordinates:function alignToCoordinates(image,center,viewport){var min_left=image.width-viewport.width;var min_top=image.height-viewport.height;var c_top=-(center.top*image.height)+viewport.height/2;var c_left=-(center.left*image.width)+viewport.width/2;if(c_top<-min_top){c_top=-min_top;}
if(c_top>0){c_top=0;}
if(c_left<-min_left){c_left=-min_left;}
if(c_left>0){c_left=0;}
return{left:c_left,top:c_top};},syncElements:function syncElements(source,target){target.height(source.height());target.width(source.width());target.css({'top':source[0].offsetTop,'left':source[0].offsetLeft});}};return service;}
angular.module('umbraco.services').factory('cropperHelper',cropperHelper);'use strict';function dataTypeHelper(){var dataTypeHelperService={createPreValueProps:function createPreValueProps(preVals){var preValues=[];for(var i=0;i<preVals.length;i++){preValues.push({hideLabel:preVals[i].hideLabel,alias:preVals[i].key,description:preVals[i].description,label:preVals[i].label,view:preVals[i].view,value:preVals[i].value});}
return preValues;},rebindChangedProperties:function rebindChangedProperties(origContent,savedContent){var shouldIgnore=function shouldIgnore(propName){return _.some(['notifications','ModelState'],function(i){return i===propName;});};for(var o in origContent){if(shouldIgnore(o)){continue;}
if(!_.isEqual(origContent[o],savedContent[o])){origContent[o]=savedContent[o];}}}};return dataTypeHelperService;}
angular.module('umbraco.services').factory('dataTypeHelper',dataTypeHelper);'use strict';function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest();}
function _nonIterableRest(){throw new TypeError('Invalid attempt to destructure non-iterable instance');}
function _iterableToArrayLimit(arr,i){if(!(Symbol.iterator in Object(arr)||Object.prototype.toString.call(arr)==='[object Arguments]')){return;}
var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)
break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i['return']!=null)
_i['return']();}finally{if(_d)
throw _e;}}
return _arr;}
function _arrayWithHoles(arr){if(Array.isArray(arr))
return arr;}
(function(){'use strict';function editorService(eventsService,keyboardService,$timeout){var editorsKeyboardShorcuts=[];var editors=[];var isEnabled=true;var lastElementInFocus=null;eventsService.on('appState.backdrop',function(name,args){if(args.show===true){blur();}else{focus();}});function getEditors(){return editors;};function getNumberOfEditors(){return editors.length;};function blur(){unbindKeyboardShortcuts();isEnabled=false;}
function focus(){if(isEnabled===false){rebindKeyboardShortcuts();isEnabled=true;}}
function open(editor){unbindKeyboardShortcuts();if(editors.length===0){lastElementInFocus=document.activeElement;}
editor.infiniteMode=true;editors.push(editor);var args={editors:editors,editor:editor};eventsService.emit('appState.editors.open',args);}
function close(){var closedEditor=editors[editors.length-1];editors.splice(-1,1);var args={editors:editors,editor:closedEditor};eventsService.emit('appState.editors.close',args);$timeout(function(){rebindKeyboardShortcuts();if(editors.length===0&&lastElementInFocus){lastElementInFocus.focus();}},0);}
function closeAll(){editors=[];var args={editors:editors,editor:null};eventsService.emit('appState.editors.close',args);}
function contentEditor(editor){editor.view='views/content/edit.html';open(editor);}
function contentPicker(editor){editor.view='views/common/infiniteeditors/treepicker/treepicker.html';if(!editor.size)
editor.size='small';editor.section='content';editor.treeAlias='content';open(editor);}
function contentTypePicker(editor){editor.view='views/common/infiniteeditors/treepicker/treepicker.html';if(!editor.size)
editor.size='small';editor.section='settings';editor.treeAlias='documentTypes';open(editor);}
function mediaTypePicker(editor){editor.view='views/common/infiniteeditors/treepicker/treepicker.html';if(!editor.size)
editor.size='small';editor.section='settings';editor.treeAlias='mediaTypes';open(editor);}
function memberTypePicker(editor){editor.view='views/common/infiniteeditors/treepicker/treepicker.html';if(!editor.size)
editor.size='small';editor.section='settings';editor.treeAlias='memberTypes';open(editor);}
function copy(editor){editor.view='views/common/infiniteeditors/copy/copy.html';if(!editor.size)
editor.size='small';open(editor);}
function move(editor){editor.view='views/common/infiniteeditors/move/move.html';if(!editor.size)
editor.size='small';open(editor);}
function embed(editor){editor.view='views/common/infiniteeditors/embed/embed.html';if(!editor.size)
editor.size='small';open(editor);}
function rollback(editor){editor.view='views/common/infiniteeditors/rollback/rollback.html';if(!editor.size)
editor.size='medium';open(editor);}
function linkPicker(editor){editor.view='views/common/infiniteeditors/linkpicker/linkpicker.html';if(!editor.size)
editor.size='small';open(editor);}
function mediaEditor(editor){editor.view='views/media/edit.html';open(editor);}
function mediaPicker(editor){editor.view='views/common/infiniteeditors/mediapicker/mediapicker.html';if(!editor.size)
editor.size='medium';editor.updatedMediaNodes=[];open(editor);}
function iconPicker(editor){editor.view='views/common/infiniteeditors/iconpicker/iconpicker.html';if(!editor.size)
editor.size='small';open(editor);}
function documentTypeEditor(editor){editor.view='views/documenttypes/edit.html';open(editor);}
function mediaTypeEditor(editor){editor.view='views/mediatypes/edit.html';open(editor);}
function memberTypeEditor(editor){editor.view='views/membertypes/edit.html';open(editor);}
function memberTypeEditor(editor){editor.view='views/membertypes/edit.html';open(editor);}
function queryBuilder(editor){editor.view='views/common/infiniteeditors/querybuilder/querybuilder.html';open(editor);}
function treePicker(editor){editor.view='views/common/infiniteeditors/treepicker/treepicker.html';if(!editor.size)
editor.size='small';open(editor);}
function nodePermissions(editor){editor.view='views/common/infiniteeditors/nodepermissions/nodepermissions.html';if(!editor.size)
editor.size='small';open(editor);}
function insertCodeSnippet(editor){editor.view='views/common/infiniteeditors/insertcodesnippet/insertcodesnippet.html';if(!editor.size)
editor.size='small';open(editor);}
function userGroupPicker(editor){editor.view='views/common/infiniteeditors/usergrouppicker/usergrouppicker.html';if(!editor.size)
editor.size='small';open(editor);}
function templateEditor(editor){editor.view='views/templates/edit.html';open(editor);}
function sectionPicker(editor){editor.view='views/common/infiniteeditors/sectionpicker/sectionpicker.html';if(!editor.size)
editor.size='small';open(editor);}
function insertField(editor){editor.view='views/common/infiniteeditors/insertfield/insertfield.html';if(!editor.size)
editor.size='small';open(editor);}
function templateSections(editor){editor.view='views/common/infiniteeditors/templatesections/templatesections.html';if(!editor.size)
editor.size='small';open(editor);}
function userPicker(editor){editor.view='views/common/infiniteeditors/userpicker/userpicker.html';if(!editor.size)
editor.size='small';open(editor);}
function itemPicker(editor){editor.view='views/common/infiniteeditors/itempicker/itempicker.html';if(!editor.size)
editor.size='small';open(editor);}
function macroPicker(editor){editor.view='views/common/infiniteeditors/macropicker/macropicker.html';if(!editor.size)
editor.size='small';open(editor);}
function memberGroupPicker(editor){editor.view='views/common/infiniteeditors/membergrouppicker/membergrouppicker.html';if(!editor.size)
editor.size='small';open(editor);}
function memberPicker(editor){editor.view='views/common/infiniteeditors/treepicker/treepicker.html';if(!editor.size)
editor.size='small';editor.section='member';editor.treeAlias='member';open(editor);}
function memberEditor(editor){editor.view='views/member/edit.html';open(editor);}
function unbindKeyboardShortcuts(){var shortcuts=Utilities.copy(keyboardService.keyboardEvent);editorsKeyboardShorcuts.push(shortcuts);for(var _i=0,_Object$entries=Object.entries(shortcuts);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];keyboardService.unbind(key);}}
function rebindKeyboardShortcuts(){var lastSetOfShortcutsIndex=editorsKeyboardShorcuts.length-1;var lastSetOfShortcuts=editorsKeyboardShorcuts[lastSetOfShortcutsIndex];for(var _i2=0,_Object$entries2=Object.entries(lastSetOfShortcuts);_i2<_Object$entries2.length;_i2++){var _Object$entries2$_i=_slicedToArray(_Object$entries2[_i2],2),key=_Object$entries2$_i[0],value=_Object$entries2$_i[1];keyboardService.bind(key,value.callback,value.opt);}
editorsKeyboardShorcuts.splice(lastSetOfShortcutsIndex,1);}
var service={getEditors:getEditors,getNumberOfEditors:getNumberOfEditors,open:open,close:close,closeAll:closeAll,mediaEditor:mediaEditor,contentEditor:contentEditor,contentPicker:contentPicker,contentTypePicker:contentTypePicker,mediaTypePicker:mediaTypePicker,memberTypePicker:memberTypePicker,copy:copy,move:move,embed:embed,rollback:rollback,linkPicker:linkPicker,mediaPicker:mediaPicker,iconPicker:iconPicker,documentTypeEditor:documentTypeEditor,mediaTypeEditor:mediaTypeEditor,memberTypeEditor:memberTypeEditor,queryBuilder:queryBuilder,treePicker:treePicker,nodePermissions:nodePermissions,insertCodeSnippet:insertCodeSnippet,userGroupPicker:userGroupPicker,templateEditor:templateEditor,sectionPicker:sectionPicker,insertField:insertField,templateSections:templateSections,userPicker:userPicker,itemPicker:itemPicker,macroPicker:macroPicker,memberGroupPicker:memberGroupPicker,memberPicker:memberPicker,memberEditor:memberEditor};return service;}
angular.module('umbraco.services').factory('editorService',editorService);}());'use strict';angular.module('umbraco.services').factory('editorState',function($rootScope,eventsService){var current=null;var state={set:function set(entity){current=entity;eventsService.emit('editorState.changed',{entity:entity});},reset:function reset(){current=null;},getCurrent:function getCurrent(){return current;}};Object.defineProperty(state,'current',{get:function get(){return current;},set:function set(value){throw'Use editorState.set to set the value of the current entity';}});$rootScope.$on('$routeChangeSuccess',function(event,current,previous){state.reset();});return state;});'use strict';(function(){'use strict';function entityHelper(){function getEntityTypeFromSection(section){if(section==='member'){return'Member';}else if(section==='media'){return'Media';}else{return'Document';}}
var service={getEntityTypeFromSection:getEntityTypeFromSection};return service;}
angular.module('umbraco.services').factory('entityHelper',entityHelper);}());'use strict';function eventsService($q,$rootScope){return{emit:function emit(name,args){if(!$rootScope.$$listeners[name]){return;}
$rootScope.$emit(name,args);},on:function on(name,callback){return $rootScope.$on(name,callback);},unsubscribe:function unsubscribe(handle){if(angular.isFunction(handle)){handle();}}};}
angular.module('umbraco.services').factory('eventsService',eventsService);'use strict';function fileManager($rootScope){var fileCollection=[];var mgr={setFiles:function setFiles(args){if(!Utilities.isString(args.propertyAlias)){throw'args.propertyAlias must be a non empty string';}
if(!Utilities.isObject(args.files)){throw'args.files must be an object';}
if(!args.culture){args.culture=null;}
if(!args.segment){args.segment=null;}
var metaData=[];if(Utilities.isArray(args.metaData)){metaData=args.metaData;}
fileCollection=_.reject(fileCollection,function(item){return item.alias===args.propertyAlias&&(!args.culture||args.culture===item.culture)&&(!args.segment||args.segment===item.segment);});for(var i=0;i<args.files.length;i++){fileCollection.push({alias:args.propertyAlias,file:args.files[i],culture:args.culture,segment:args.segment,metaData:metaData});}},getFiles:function getFiles(){return fileCollection;},clearFiles:function clearFiles(){fileCollection=[];}};$rootScope.$on('$routeChangeSuccess',function(event,current,previous){mgr.clearFiles();});return mgr;}
angular.module('umbraco.services').factory('fileManager',fileManager);'use strict';(function(){'use strict';function focusService(){var currentFocus=null;var lastKnownFocus=null;function focusInApp(e){currentFocus=e.target;}
document.addEventListener('focusin',focusInApp);var service={getLastKnownFocus:function getLastKnownFocus(){return lastKnownFocus;},rememberFocus:function rememberFocus(){lastKnownFocus=currentFocus;},setLastKnownFocus:function setLastKnownFocus(element){lastKnownFocus=element;}};return service;}
angular.module('umbraco.services').factory('focusService',focusService);}());'use strict';function formHelper(angularHelper,serverValidationManager,notificationsService,overlayService){return{submitForm:function submitForm(args){var currentForm;if(!args){throw'args cannot be null';}
if(!args.scope){throw'args.scope cannot be null';}
if(!args.formCtrl){currentForm=angularHelper.getRequiredCurrentForm(args.scope);}else{currentForm=args.formCtrl;}
args.scope.$broadcast('formSubmitting',{scope:args.scope,action:args.action});args.scope.$broadcast('postFormSubmitting',{scope:args.scope,action:args.action});if(!args.skipValidation){if(currentForm.$invalid){return false;}}
if(!args.keepServerValidation){serverValidationManager.reset();}else{serverValidationManager.notify();}
return true;},resetForm:function resetForm(args){if(!args){throw'args cannot be null';}
if(!args.scope){throw'args.scope cannot be null';}
args.scope.$broadcast('formSubmitted',{scope:args.scope});},showNotifications:function showNotifications(args){if(!args||!args.notifications){return false;}
if(Utilities.isArray(args.notifications)){for(var i=0;i<args.notifications.length;i++){notificationsService.showNotification(args.notifications[i]);}
return true;}
return false;},handleError:function handleError(err){if(err.status===400){if(err.data&&err.data.ModelState){this.handleServerValidation(err.data.ModelState);serverValidationManager.notifyAndClearAllSubscriptions();}}else{overlayService.ysod(err);}},handleServerValidation:function handleServerValidation(modelState){serverValidationManager.addErrorsForModelState(modelState);}};}
angular.module('umbraco.services').factory('formHelper',formHelper);'use strict';angular.module('umbraco.services').factory('gridService',function($http,$q){var configPath=Umbraco.Sys.ServerVariables.umbracoUrls.gridConfig;var service={getGridEditors:function getGridEditors(){return $http.get(configPath);}};return service;});'use strict';angular.module('umbraco.services').factory('helpService',function($http,$q,umbRequestHelper,dashboardResource){var helpTopics={};var defaultUrl='rss/help';var tvUrl='feeds/help';function getCachedHelp(url){if(helpTopics[url]){return helpTopics[cacheKey];}else{return null;}}
function setCachedHelp(url,data){helpTopics[url]=data;}
function fetchUrl(site,url){var deferred=$q.defer();var found=getCachedHelp(url);if(found){deferred.resolve(found);}else{dashboardResource.getRemoteXmlData(site,url).then(function(data){var feed=$(data.data);var topics=[];$('item',feed).each(function(i,item){var topic={};topic.thumbnail=$(item).find('thumbnail').attr('url');topic.title=$('title',item).text();topic.link=$('guid',item).text();topic.description=$('description',item).text();topics.push(topic);});setCachedHelp(topics);deferred.resolve(topics);},function(exception){console.error('ex from remote data',exception);});}
return deferred.promise;}
var service={findHelp:function findHelp(args){var url=service.getUrl(defaultUrl,args);return fetchUrl('OUR',url);},findVideos:function findVideos(args){var url=service.getUrl(tvUrl,args);return fetchUrl('TV',url);},getContextHelpForPage:function getContextHelpForPage(section,tree,baseurl){var qs='?section='+section+'&tree='+tree;if(tree){qs+='&tree='+tree;}
if(baseurl){qs+='&baseurl='+encodeURIComponent(baseurl);}
var url=umbRequestHelper.getApiUrl('helpApiBaseUrl','GetContextHelpForPage'+qs);return umbRequestHelper.resourcePromise($http.get(url),'Failed to get lessons content');},getUrl:function getUrl(url,args){return url+'?'+$.param(args);}};return service;});'use strict';angular.module('umbraco.services').factory('historyService',function($rootScope,$timeout,angularHelper,eventsService){var nArray=[];function _add(item){if(!item){return null;}
var listWithoutThisItem=_.reject(nArray,function(i){return i.link===item.link;});listWithoutThisItem.splice(0,0,item);nArray=listWithoutThisItem;return nArray[0];}
return{add:function add(item){var icon=item.icon||'icon-file';angularHelper.safeApply($rootScope,function(){var result=_add({name:item.name,icon:icon,link:item.link,time:new Date()});eventsService.emit('historyService.add',{added:result,all:nArray});return result;});},remove:function remove(index){angularHelper.safeApply($rootScope,function(){var result=nArray.splice(index,1);eventsService.emit('historyService.remove',{removed:result,all:nArray});});},removeAll:function removeAll(){angularHelper.safeApply($rootScope,function(){nArray=[];eventsService.emit('historyService.removeAll');});},getCurrent:function getCurrent(){return nArray;},getLastAccessedItemForSection:function getLastAccessedItemForSection(sectionAlias){for(var i=0,len=nArray.length;i<len;i++){var item=nArray[i];if(item.link.indexOf(sectionAlias+'/')===0){return item;}}
return null;}};});'use strict';function iconHelper($q,$timeout){var converter=[{oldIcon:'.sprNew',newIcon:'add'},{oldIcon:'.sprDelete',newIcon:'remove'},{oldIcon:'.sprMove',newIcon:'enter'},{oldIcon:'.sprCopy',newIcon:'documents'},{oldIcon:'.sprSort',newIcon:'navigation-vertical'},{oldIcon:'.sprPublish',newIcon:'globe'},{oldIcon:'.sprRollback',newIcon:'undo'},{oldIcon:'.sprProtect',newIcon:'lock'},{oldIcon:'.sprAudit',newIcon:'time'},{oldIcon:'.sprNotify',newIcon:'envelope'},{oldIcon:'.sprDomain',newIcon:'home'},{oldIcon:'.sprPermission',newIcon:'lock'},{oldIcon:'.sprRefresh',newIcon:'refresh'},{oldIcon:'.sprBinEmpty',newIcon:'trash'},{oldIcon:'.sprExportDocumentType',newIcon:'download-alt'},{oldIcon:'.sprImportDocumentType',newIcon:'page-up'},{oldIcon:'.sprLiveEdit',newIcon:'edit'},{oldIcon:'.sprCreateFolder',newIcon:'add'},{oldIcon:'.sprPackage2',newIcon:'box'},{oldIcon:'.sprLogout',newIcon:'logout'},{oldIcon:'.sprSave',newIcon:'save'},{oldIcon:'.sprSendToTranslate',newIcon:'envelope-alt'},{oldIcon:'.sprToPublish',newIcon:'mail-forward'},{oldIcon:'.sprTranslate',newIcon:'comments'},{oldIcon:'.sprUpdate',newIcon:'save'},{oldIcon:'.sprTreeSettingDomain',newIcon:'icon-home'},{oldIcon:'.sprTreeDoc',newIcon:'icon-document'},{oldIcon:'.sprTreeDoc2',newIcon:'icon-diploma-alt'},{oldIcon:'.sprTreeDoc3',newIcon:'icon-notepad'},{oldIcon:'.sprTreeDoc4',newIcon:'icon-newspaper-alt'},{oldIcon:'.sprTreeDoc5',newIcon:'icon-notepad-alt'},{oldIcon:'.sprTreeDocPic',newIcon:'icon-picture'},{oldIcon:'.sprTreeFolder',newIcon:'icon-folder'},{oldIcon:'.sprTreeFolder_o',newIcon:'icon-folder'},{oldIcon:'.sprTreeMediaFile',newIcon:'icon-music'},{oldIcon:'.sprTreeMediaMovie',newIcon:'icon-movie'},{oldIcon:'.sprTreeMediaPhoto',newIcon:'icon-picture'},{oldIcon:'.sprTreeMember',newIcon:'icon-user'},{oldIcon:'.sprTreeMemberGroup',newIcon:'icon-users'},{oldIcon:'.sprTreeMemberType',newIcon:'icon-users'},{oldIcon:'.sprTreeNewsletter',newIcon:'icon-file-text-alt'},{oldIcon:'.sprTreePackage',newIcon:'icon-box'},{oldIcon:'.sprTreeRepository',newIcon:'icon-server-alt'},{oldIcon:'.sprTreeSettingDataType',newIcon:'icon-autofill'},{oldIcon:'folder.png',newIcon:'icon-folder'},{oldIcon:'mediaphoto.gif',newIcon:'icon-picture'},{oldIcon:'mediafile.gif',newIcon:'icon-document'},{oldIcon:'.sprTreeDeveloperCacheItem',newIcon:'icon-box'},{oldIcon:'.sprTreeDeveloperCacheTypes',newIcon:'icon-box'},{oldIcon:'.sprTreeDeveloperMacro',newIcon:'icon-cogs'},{oldIcon:'.sprTreeDeveloperRegistry',newIcon:'icon-windows'},{oldIcon:'.sprTreeDeveloperPython',newIcon:'icon-linux'}];var imageConverter=[{oldImage:'contour.png',newIcon:'icon-umb-contour'}];var collectedIcons;return{formatContentTypeThumbnails:function formatContentTypeThumbnails(contentTypes){for(var i=0;i<contentTypes.length;i++){if(contentTypes[i].thumbnailIsClass===undefined||contentTypes[i].thumbnailIsClass){contentTypes[i].cssClass=this.convertFromLegacyIcon(contentTypes[i].thumbnail);}else{contentTypes[i].style='background-image: url(\''+contentTypes[i].thumbnailFilePath+'\');height:36px; background-position:4px 0px; background-repeat: no-repeat;background-size: 35px 35px;';contentTypes[i].cssClass='custom-file';}}
return contentTypes;},formatContentTypeIcons:function formatContentTypeIcons(contentTypes){for(var i=0;i<contentTypes.length;i++){if(!contentTypes[i].icon){contentTypes[i].icon='icon-document';}else{contentTypes[i].icon=this.convertFromLegacyIcon(contentTypes[i].icon);}
if(contentTypes[i].icon.indexOf('.')>0){contentTypes[i].icon='icon-document-dashed-line';}}
return contentTypes;},isFileBasedIcon:function isFileBasedIcon(icon){if(icon.startsWith('..')||!icon.startsWith('.')&&icon.indexOf('.')>1){return true;}
return false;},isLegacyIcon:function isLegacyIcon(icon){if(!icon){return false;}
if(icon.startsWith('..')){return false;}
if(icon.startsWith('.')){return true;}
return false;},isLegacyTreeNodeIcon:function isLegacyTreeNodeIcon(treeNode){if(treeNode.iconIsClass){return this.isLegacyIcon(treeNode.icon);}
return false;},getIcons:function getIcons(){var deferred=$q.defer();$timeout(function(){if(collectedIcons){deferred.resolve(collectedIcons);}else{collectedIcons=[];var c='.icon-';for(var i=document.styleSheets.length-1;i>=0;i--){var classes=null;try{classes=document.styleSheets[i].rules||document.styleSheets[i].cssRules;}catch(e){console.warn('Can\'t read the css rules of: '+document.styleSheets[i].href,e);continue;}
if(classes!==null){for(var x=0;x<classes.length;x++){var cur=classes[x];if(cur.selectorText&&cur.selectorText.indexOf(c)===0){var s=cur.selectorText.substring(1);var hasSpace=s.indexOf(' ');if(hasSpace>0){s=s.substring(0,hasSpace);}
var hasPseudo=s.indexOf(':');if(hasPseudo>0){s=s.substring(0,hasPseudo);}
if(collectedIcons.indexOf(s)<0){collectedIcons.push(s);}}}}}
deferred.resolve(collectedIcons);}},100);return deferred.promise;},convertFromLegacyIcon:function convertFromLegacyIcon(icon){if(this.isLegacyIcon(icon)){var found=_.find(converter,function(item){return item.oldIcon.toLowerCase()===icon.toLowerCase();});return found?found.newIcon:icon;}
return icon;},convertFromLegacyImage:function convertFromLegacyImage(icon){var found=_.find(imageConverter,function(item){return item.oldImage.toLowerCase()===icon.toLowerCase();});return found?found.newIcon:undefined;},convertFromLegacyTreeNodeIcon:function convertFromLegacyTreeNodeIcon(treeNode){if(this.isLegacyTreeNodeIcon(treeNode)){return this.convertFromLegacyIcon(treeNode.icon);}
return treeNode.icon;}};}
angular.module('umbraco.services').factory('iconHelper',iconHelper);'use strict';function imageHelper(umbRequestHelper,mediaHelper){return{getImagePropertyValue:function getImagePropertyValue(options){return mediaHelper.getImagePropertyValue(options);},getThumbnail:function getThumbnail(options){return mediaHelper.getThumbnail(options);},scaleToMaxSize:function scaleToMaxSize(maxSize,width,height){return mediaHelper.scaleToMaxSize(maxSize,width,height);},getThumbnailFromPath:function getThumbnailFromPath(imagePath){return mediaHelper.getThumbnailFromPath(imagePath);},detectIfImageByExtension:function detectIfImageByExtension(imagePath){return mediaHelper.detectIfImageByExtension(imagePath);}};}
angular.module('umbraco.services').factory('imageHelper',imageHelper);'use strict';function keyboardService($window,$timeout){var keyboardManagerService={};var defaultOpt={'type':'keydown','propagate':false,'inputDisabled':false,'target':$window.document,'keyCode':false};var shift_nums={'`':'~','1':'!','2':'@','3':'#','4':'$','5':'%','6':'^','7':'&','8':'*','9':'(','0':')','-':'_','=':'+',';':':','\'':'"',',':'<','.':'>','/':'?','\\':'|'};var special_keys={'esc':27,'escape':27,'tab':9,'space':32,'return':13,'enter':13,'backspace':8,'scrolllock':145,'scroll_lock':145,'scroll':145,'capslock':20,'caps_lock':20,'caps':20,'numlock':144,'num_lock':144,'num':144,'pause':19,'break':19,'insert':45,'home':36,'delete':46,'end':35,'pageup':33,'page_up':33,'pu':33,'pagedown':34,'page_down':34,'pd':34,'left':37,'up':38,'right':39,'down':40,'f1':112,'f2':113,'f3':114,'f4':115,'f5':116,'f6':117,'f7':118,'f8':119,'f9':120,'f10':121,'f11':122,'f12':123};var isMac=navigator.platform.toUpperCase().indexOf('MAC')>=0;function eventHandler(e){e=e||$window.event;var code,k;if(e.keyCode){code=e.keyCode;}else if(e.which){code=e.which;}
var character=String.fromCharCode(code).toLowerCase();if(code===188){character=',';}
if(code===190){character='.';}
var propagate=true;_.find(_.keys(keyboardManagerService.keyboardEvent),function(key){var shortcutLabel=key;var shortcutVal=keyboardManagerService.keyboardEvent[key];var kp=0;var modifiers={shift:{wanted:false,pressed:e.shiftKey?true:false},ctrl:{wanted:false,pressed:e.ctrlKey?true:false},alt:{wanted:false,pressed:e.altKey?true:false},meta:{wanted:false,pressed:e.metaKey?true:false}};var keys=shortcutLabel.split('+');var opt=shortcutVal.opt;var callback=shortcutVal.callback;var l=keys.length;for(var i=0;i<l;i++){var k=keys[i];switch(k){case'ctrl':case'control':kp++;modifiers.ctrl.wanted=true;break;case'shift':case'alt':case'meta':kp++;modifiers[k].wanted=true;break;}
if(k.length>1){if(special_keys[k]===code){kp++;}}else if(opt['keyCode']){if(opt['keyCode']===code){kp++;}}else{if(character===k){kp++;}else{if(shift_nums[character]&&e.shiftKey){character=shift_nums[character];if(character===k){kp++;}}}}}
if(kp===keys.length&&modifiers.ctrl.pressed===modifiers.ctrl.wanted&&modifiers.shift.pressed===modifiers.shift.wanted&&modifiers.alt.pressed===modifiers.alt.wanted&&modifiers.meta.pressed===modifiers.meta.wanted){if(opt['inputDisabled']){var elt;if(e.target){elt=e.target;}else if(e.srcElement){elt=e.srcElement;}
if(elt.nodeType===3){elt=elt.parentNode;}
if(elt.tagName==='INPUT'||elt.tagName==='TEXTAREA'||elt.hasAttribute('disable-hotkeys')){return true;}}
$timeout(function(){callback(e);},1);if(!opt['propagate']){propagate=false;}
return true;}
return false;});if(!propagate){e.cancelBubble=true;e.returnValue=false;if(e.stopPropagation){e.stopPropagation();e.preventDefault();}
return false;}}
keyboardManagerService.keyboardEvent={};keyboardManagerService.bind=function(label,callback,opt){if(isMac&&label!=='ctrl+space'){label=label.replace('ctrl','meta');}
var elt;opt=angular.extend({},defaultOpt,opt);label=label.toLowerCase();elt=opt.target;if(typeof opt.target==='string'){elt=document.getElementById(opt.target);}
var boundValues=_.values(keyboardManagerService.keyboardEvent);var found=_.find(boundValues,function(i){return i.target===elt&&i.event===opt['type'];});keyboardManagerService.keyboardEvent[label]={'callback':callback,'target':elt,'opt':opt};if(!found){if(elt.addEventListener){elt.addEventListener(opt['type'],eventHandler,false);}else if(elt.attachEvent){elt.attachEvent('on'+opt['type'],eventHandler);}else{elt['on'+opt['type']]=eventHandler;}}};keyboardManagerService.unbind=function(label){label=label.toLowerCase();var binding=keyboardManagerService.keyboardEvent[label];delete keyboardManagerService.keyboardEvent[label];if(!binding){return;}
var type=binding['event'],elt=binding['target'],callback=binding['callback'];if(elt.detachEvent){elt.detachEvent('on'+type,callback);}else if(elt.removeEventListener){elt.removeEventListener(type,callback,false);}else{elt['on'+type]=false;}};return keyboardManagerService;}
angular.module('umbraco.services').factory('keyboardService',['$window','$timeout',keyboardService]);'use strict';(function(){'use strict';function listViewHelper($location,localStorageService,urlHelper){var firstSelectedIndex=0;var localStorageKey='umblistViewLayout';function getLayout(id,availableLayouts){var storedLayouts=[];if(localStorageService.get(localStorageKey)){storedLayouts=localStorageService.get(localStorageKey);}
if(storedLayouts&&storedLayouts.length>0){for(var i=0;storedLayouts.length>i;i++){var layout=storedLayouts[i];if(isMatchingLayout(id,layout)){return setLayout(id,layout,availableLayouts);}}}
return getFirstAllowedLayout(availableLayouts);}
function setLayout(id,selectedLayout,availableLayouts){var activeLayout={};var layoutFound=false;for(var i=0;availableLayouts.length>i;i++){var layout=availableLayouts[i];if(layout.path===selectedLayout.path){activeLayout=layout;layout.active=true;layoutFound=true;}else{layout.active=false;}}
if(!layoutFound){activeLayout=getFirstAllowedLayout(availableLayouts);}
saveLayoutInLocalStorage(id,activeLayout);return activeLayout;}
function saveLayoutInLocalStorage(id,selectedLayout){var layoutFound=false;var storedLayouts=[];if(localStorageService.get(localStorageKey)){storedLayouts=localStorageService.get(localStorageKey);}
if(storedLayouts.length>0){for(var i=0;storedLayouts.length>i;i++){var layout=storedLayouts[i];if(isMatchingLayout(id,layout)){layout.path=selectedLayout.path;layoutFound=true;}}}
if(!layoutFound){var storageObject={'id':id,'path':selectedLayout.path};storedLayouts.push(storageObject);}
localStorageService.set(localStorageKey,storedLayouts);}
function getFirstAllowedLayout(layouts){var firstAllowedLayout={};if(layouts!=null){for(var i=0;layouts.length>i;i++){var layout=layouts[i];if(layout.selected===true){firstAllowedLayout=layout;break;}}}
return firstAllowedLayout;}
function selectHandler(selectedItem,selectedIndex,items,selection,$event){var start=0;var end=0;var item=null;if($event.shiftKey===true){if(selectedIndex>firstSelectedIndex){start=firstSelectedIndex;end=selectedIndex;for(;end>=start;start++){item=items[start];selectItem(item,selection);}}else{start=firstSelectedIndex;end=selectedIndex;for(;end<=start;start--){item=items[start];selectItem(item,selection);}}}else{if(selectedItem.selected){deselectItem(selectedItem,selection);}else{selectItem(selectedItem,selection);}
firstSelectedIndex=selectedIndex;}}
function selectItem(item,selection){var isSelected=false;for(var i=0;selection.length>i;i++){var selectedItem=selection[i];if(item.id!==2147483647&&item.id===selectedItem.id||item.key&&item.key===selectedItem.key){isSelected=true;}}
if(!isSelected){var obj={id:item.id};if(item.key){obj.key=item.key;}
selection.push(obj);item.selected=true;}}
function deselectItem(item,selection){for(var i=0;selection.length>i;i++){var selectedItem=selection[i];if(item.id!==2147483647&&item.id===selectedItem.id||item.key&&item.key===selectedItem.key){selection.splice(i,1);item.selected=false;}}}
function clearSelection(items,folders,selection){var i=0;selection.length=0;if(Utilities.isArray(items)){for(i=0;items.length>i;i++){var item=items[i];item.selected=false;}}
if(Utilities.isArray(folders)){for(i=0;folders.length>i;i++){var folder=folders[i];folder.selected=false;}}}
function selectAllItems(items,selection,$event){var checkbox=$event.target;var clearSelection=false;if(!Utilities.isArray(items)){return;}
selection.length=0;for(var i=0;i<items.length;i++){var item=items[i];var obj={id:item.id};if(item.key){obj.key=item.key;}
if(checkbox.checked){selection.push(obj);}else{clearSelection=true;}
item.selected=checkbox.checked;}
if(clearSelection){selection.length=0;}}
function selectAllItemsToggle(items,selection){if(!Utilities.isArray(items)){return;}
if(isSelectedAll(items,selection)){angular.forEach(items,function(item){item.selected=false;});selection.length=0;}else{selection.length=0;angular.forEach(items,function(item){var obj={id:item.id};if(item.key){obj.key=item.key;}
item.selected=true;selection.push(obj);});}}
function isSelectedAll(items,selection){var numberOfSelectedItem=0;for(var itemIndex=0;items.length>itemIndex;itemIndex++){var item=items[itemIndex];for(var selectedIndex=0;selection.length>selectedIndex;selectedIndex++){var selectedItem=selection[selectedIndex];if(item.id!==2147483647&&item.id===selectedItem.id||item.key&&item.key===selectedItem.key){numberOfSelectedItem++;}}}
if(numberOfSelectedItem===items.length){return true;}}
function setSortingDirection(col,direction,options){return options.orderBy.toUpperCase()===col.toUpperCase()&&options.orderDirection===direction;}
function setSorting(field,allow,options){if(allow){if(options.orderBy===field&&options.orderDirection==='asc'){options.orderDirection='desc';}else{options.orderDirection='asc';}
options.orderBy=field;}}
function getButtonPermissions(unmergedPermissions,currentIdsWithPermissions){if(currentIdsWithPermissions==null){currentIdsWithPermissions={};}
_.each(unmergedPermissions,function(value,key,list){currentIdsWithPermissions[key]=value;});var arr=[];_.each(currentIdsWithPermissions,function(value,key,list){arr.push(value);});var intersectPermissions=_.intersection.apply(_,arr);return{canCopy:_.contains(intersectPermissions,'O'),canCreate:_.contains(intersectPermissions,'C'),canDelete:_.contains(intersectPermissions,'D'),canMove:_.contains(intersectPermissions,'M'),canPublish:_.contains(intersectPermissions,'U'),canUnpublish:_.contains(intersectPermissions,'U')};}
function editItem(item){if(!item.editPath){return;}
var parts=item.editPath.split('?');var path=parts[0];var params=parts[1]?urlHelper.getQueryStringParams('?'+parts[1]):{};$location.path(path);for(var p in params){$location.search(p,params[p]);}}
function isMatchingLayout(id,layout){return layout.id===id||layout.nodeId===id;}
var service={getLayout:getLayout,getFirstAllowedLayout:getFirstAllowedLayout,setLayout:setLayout,saveLayoutInLocalStorage:saveLayoutInLocalStorage,selectHandler:selectHandler,selectItem:selectItem,deselectItem:deselectItem,clearSelection:clearSelection,selectAllItems:selectAllItems,selectAllItemsToggle:selectAllItemsToggle,isSelectedAll:isSelectedAll,setSortingDirection:setSortingDirection,setSorting:setSorting,getButtonPermissions:getButtonPermissions,editItem:editItem};return service;}
angular.module('umbraco.services').factory('listViewHelper',listViewHelper);}());'use strict';(function(){'use strict';function listViewPrevalueHelper(){var prevalues=[];function getPrevalues(){return prevalues;}
function setPrevalues(values){prevalues=values;}
var service={getPrevalues:getPrevalues,setPrevalues:setPrevalues};return service;}
angular.module('umbraco.services').factory('listViewPrevalueHelper',listViewPrevalueHelper);}());'use strict';angular.module('umbraco.services').factory('localizationService',function($http,$q,eventsService,$window,$filter,userService){var url='LocalizedText';var resourceFileLoadStatus='none';var resourceLoadingPromise=[];var innerDictionary=[];function _lookup(alias,tokens,dictionary,fallbackValue){if(alias&&alias[0]==='@'){alias=alias.substring(1);}
var underscoreIndex=alias.indexOf('_');if(alias&&underscoreIndex<0){alias='general_'+alias;underscoreIndex=alias.indexOf('_');}
var areaAlias=alias.substring(0,underscoreIndex);var valueAlias=alias.substring(underscoreIndex+1);var areaEntry=dictionary[areaAlias];if(areaEntry){var valueEntry=areaEntry[valueAlias];if(valueEntry){return service.tokenReplace(valueEntry,tokens);}}
if(fallbackValue)
return fallbackValue;return'['+alias+']';}
var service={initLocalizedResources:function initLocalizedResources(){var deferred=$q.defer();if(resourceFileLoadStatus==='loaded'){deferred.resolve(innerDictionary);return deferred.promise;}
if(resourceFileLoadStatus==='loading'){resourceLoadingPromise.push(deferred);return deferred.promise;}
resourceFileLoadStatus='loading';$http({method:'GET',url:url,cache:false}).then(function(response){resourceFileLoadStatus='loaded';innerDictionary=response.data;eventsService.emit('localizationService.updated',response.data);deferred.resolve(response.data);for(var p in resourceLoadingPromise){resourceLoadingPromise[p].resolve(response.data);}},function(err){deferred.reject('Something broke');for(var p in resourceLoadingPromise){resourceLoadingPromise[p].reject('Something broke');}});return deferred.promise;},tokenize:function tokenize(value,scope){if(value){var localizer=value.split(':');var retval={tokens:undefined,key:localizer[0].substring(0)};if(localizer.length>1){retval.tokens=localizer[1].split(',');for(var x=0;x<retval.tokens.length;x++){retval.tokens[x]=scope.$eval(retval.tokens[x]);}}
return retval;}
return value;},tokenReplace:function tokenReplace(text,tokens){if(tokens){for(var i=0;i<tokens.length;i++){text=text.replace('%'+i+'%',tokens[i]);}}
return text;},localize:function localize(value,tokens,fallbackValue){return service.initLocalizedResources().then(function(dic){return _lookup(value,tokens,dic,fallbackValue);});},localizeMany:function localizeMany(keys){if(keys){var promises=[];for(var i=0;i<keys.length;i++){promises.push(service.localize(keys[i],undefined));}
return $q.all(promises).then(function(localizedValues){return localizedValues;});}},concat:function concat(keys){if(keys){var promises=[];for(var i=0;i<keys.length;i++){promises.push(service.localize(keys[i],undefined));}
return $q.all(promises).then(function(localizedValues){var returnValue='';for(var j=0;j<localizedValues.length;j++){returnValue+=localizedValues[j];}
return returnValue;});}},format:function format(keys,message){if(keys){var promises=[];for(var i=0;i<keys.length;i++){promises.push(service.localize(keys[i],undefined));}
return $q.all(promises).then(function(localizedValues){for(var j=0;j<localizedValues.length;j++){var token='%'+j+'%';var regex=new RegExp(token,'g');message=message.replace(regex,localizedValues[j]);}
return message;});}}};eventsService.on('app.authenticated',function(){resourceFileLoadStatus='none';resourceLoadingPromise=[];});return service;});'use strict';function macroService(){return{parseMacroSyntax:function parseMacroSyntax(syntax){var expression=/(<\?UMBRACO_MACRO (?:.+?)?macroAlias=["']([^\"\'\n\r]+?)["'][\s\S]+?)(\/>|>.*?<\/\?UMBRACO_MACRO>)/i;var match=expression.exec(syntax);if(!match||match.length<3){return null;}
var alias=match[2];var paramsChunk=match[1].trim().replace(new RegExp('UMBRACO_MACRO macroAlias=["\']'+alias+'["\']'),'').trim();var paramExpression=/(\w+?)=['\"]([\s\S]*?)['\"]/g;var paramMatch;var returnVal={macroAlias:alias,macroParamsDictionary:{}};while(paramMatch=paramExpression.exec(paramsChunk)){returnVal.macroParamsDictionary[paramMatch[1]]=paramMatch[2];}
return returnVal;},generateMacroSyntax:function generateMacroSyntax(args){var macroString='<?UMBRACO_MACRO macroAlias="'+args.macroAlias+'" ';if(args.macroParamsDictionary){_.each(args.macroParamsDictionary,function(val,key){val=val?val:'';var keyVal;if(Utilities.isString(val)){keyVal=key+'="'+(val?val:'')+'" ';}else{var json=Utilities.toJson(val);var encoded=encodeURIComponent(json);keyVal=key+'="'+encoded+'" ';}
macroString+=keyVal;});}
macroString+='/>';return macroString;},generateMvcSyntax:function generateMvcSyntax(args){var macroString='@Umbraco.RenderMacro("'+args.macroAlias+'"';var hasParams=false;var paramString;if(args.macroParamsDictionary){paramString=', new {';_.each(args.macroParamsDictionary,function(val,key){hasParams=true;var keyVal=key+'="'+(val?val:'')+'", ';paramString+=keyVal;});paramString=paramString.trimEnd(', ');paramString+='}';}
if(hasParams){macroString+=paramString;}
macroString+=')';return macroString;},collectValueData:function collectValueData(macro,macroParams,renderingEngine){var paramDictionary={};var macroAlias=macro.alias;if(!macroAlias){throw'The macro object does not contain an alias';}
var syntax;_.each(macroParams,function(item){var val=item.value;if(item.value!==null&&item.value!==undefined&&!_.isString(item.value)){try{val=Utilities.toJson(val);}catch(e){}}
paramDictionary[item.alias]=_.escape(val);});if(renderingEngine&&renderingEngine==='Mvc'){syntax=this.generateMvcSyntax({macroAlias:macroAlias,macroParamsDictionary:paramDictionary});}else{syntax=this.generateMacroSyntax({macroAlias:macroAlias,macroParamsDictionary:paramDictionary});}
var macroObject={'macroParamsDictionary':paramDictionary,'macroAlias':macroAlias,'syntax':syntax};return macroObject;}};}
angular.module('umbraco.services').factory('macroService',macroService);'use strict';function mediaHelper(umbRequestHelper,$http,$log){var _mediaFileResolvers={};return{getMediaPropertyValue:function getMediaPropertyValue(options){if(!options||!options.mediaModel){throw'The options objet does not contain the required parameters: mediaModel';}
var props=[];if(options.mediaModel.properties){props=options.mediaModel.properties;}else{$(options.mediaModel.tabs).each(function(i,tab){props=props.concat(tab.properties);});}
var mediaRoot=Umbraco.Sys.ServerVariables.umbracoSettings.mediaPath;var imageProp=_.find(props,function(item){if(item.alias==='umbracoFile'){return true;}
if(Utilities.isString(item.value)&&item.value.indexOf(mediaRoot)===0){return true;}
return false;});if(!imageProp){return'';}
var mediaVal;var split=imageProp.value.split(',');var self=this;mediaVal=_.map(split,function(item){return{file:item,isImage:self.detectIfImageByExtension(item)};});if(mediaVal.length&&mediaVal.length>0){if(!options.imageOnly||options.imageOnly===true&&mediaVal[0].isImage){return mediaVal[0].file;}}
return'';},getImagePropertyValue:function getImagePropertyValue(options){if(!options||!options.imageModel&&!options.mediaModel){throw'The options objet does not contain the required parameters: imageModel';}
options.mediaModel=options.imageModel?options.imageModel:options.mediaModel;options.imageOnly=true;return this.getMediaPropertyValue(options);},getThumbnail:function getThumbnail(options){if(!options||!options.imageModel){throw'The options objet does not contain the required parameters: imageModel';}
var imagePropVal=this.getImagePropertyValue(options);if(imagePropVal!==''){return this.getThumbnailFromPath(imagePropVal);}
return'';},registerFileResolver:function registerFileResolver(propertyEditorAlias,func){_mediaFileResolvers[propertyEditorAlias]=func;},resolveFileFromEntity:function resolveFileFromEntity(mediaEntity,thumbnail){var mediaPath=Utilities.isObject(mediaEntity.metaData)?mediaEntity.metaData.MediaPath:null;if(!mediaPath){$log.warn('Cannot resolve the file url from the mediaEntity, it does not contain the required metaData');return null;}
if(thumbnail){if(this.detectIfImageByExtension(mediaPath)){return this.getThumbnailFromPath(mediaPath);}else if(this.getFileExtension(mediaPath)==='svg'){return this.getThumbnailFromPath(mediaPath);}else{return null;}}else{return mediaPath;}},resolveFile:function resolveFile(mediaItem,thumbnail){function iterateProps(props){var res=null;for(var resolver in _mediaFileResolvers){var property=_.find(props,function(prop){return prop.editor===resolver;});if(property){res=_mediaFileResolvers[resolver](property,mediaItem,thumbnail);break;}}
return res;}
var result='';if(mediaItem.properties){result=iterateProps(mediaItem.properties);}else if(mediaItem.tabs){for(var tab in mediaItem.tabs){if(mediaItem.tabs[tab].properties){result=iterateProps(mediaItem.tabs[tab].properties);if(result){break;}}}}
return result;},hasFilePropertyType:function hasFilePropertyType(mediaItem){function iterateProps(props){var res=false;for(var resolver in _mediaFileResolvers){var property=_.find(props,function(prop){return prop.editor===resolver;});if(property){res=true;break;}}
return res;}
var result=false;if(mediaItem.properties){result=iterateProps(mediaItem.properties);}else if(mediaItem.tabs){for(var tab in mediaItem.tabs){if(mediaItem.tabs[tab].properties){result=iterateProps(mediaItem.tabs[tab].properties);if(result){break;}}}}
return result;},scaleToMaxSize:function scaleToMaxSize(maxSize,width,height){var retval={width:width,height:height};var maxWidth=maxSize;var maxHeight=maxSize;var ratio=0;if(width>maxWidth){ratio=maxWidth/width;retval.width=maxWidth;retval.height=height*ratio;height=height*ratio;width=width*ratio;}
if(height>maxHeight){ratio=maxHeight/height;retval.height=maxHeight;retval.width=width*ratio;width=width*ratio;}
return retval;},getThumbnailFromPath:function getThumbnailFromPath(imagePath){if(this.getFileExtension(imagePath)==='svg'){return imagePath;}
if(!this.detectIfImageByExtension(imagePath)){return null;}
var thumbnailUrl=umbRequestHelper.getApiUrl('imagesApiBaseUrl','GetBigThumbnail',[{originalImagePath:imagePath}])+'&rnd='+Math.random();return thumbnailUrl;},detectIfImageByExtension:function detectIfImageByExtension(imagePath){if(!imagePath){return false;}
var lowered=imagePath.toLowerCase();var ext=lowered.substr(lowered.lastIndexOf('.')+1);return(','+Umbraco.Sys.ServerVariables.umbracoSettings.imageFileTypes+',').indexOf(','+ext+',')!==-1;},formatFileTypes:function formatFileTypes(fileTypes){var fileTypesArray=fileTypes.split(',');var newFileTypesArray=[];for(var i=0;i<fileTypesArray.length;i++){var fileType=fileTypesArray[i].trim();if(!fileType){continue;}
if(fileType.indexOf('.')!==0){fileType='.'.concat(fileType);}
newFileTypesArray.push(fileType);}
return newFileTypesArray.join(',');},getFileExtension:function getFileExtension(filePath){if(!filePath){return null;}
var lowered=filePath.toLowerCase();var ext=lowered.substr(lowered.lastIndexOf('.')+1);return ext;},getProcessedImageUrl:function getProcessedImageUrl(imagePath,options){if(!options){return imagePath;}
return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl('imagesApiBaseUrl','GetProcessedImageUrl',{imagePath:imagePath,animationProcessMode:options.animationProcessMode,cacheBusterValue:options.cacheBusterValue,focalPoint:options.focalPoint,height:options.height,mode:options.mode,upscale:options.upscale||false,width:options.width})),'Failed to retrieve processed image URL for image: '+imagePath);}};}
angular.module('umbraco.services').factory('mediaHelper',mediaHelper);'use strict';function mediaTypeHelper(mediaTypeResource,$q){var mediaTypeHelperService={isFolderType:function isFolderType(mediaEntity){if(!mediaEntity){throw'mediaEntity is null';}
if(!mediaEntity.contentTypeAlias){throw'mediaEntity.contentTypeAlias is null';}
return mediaEntity.contentTypeAlias.endsWith('Folder');},getAllowedImagetypes:function getAllowedImagetypes(mediaId){return mediaTypeResource.getAllowedTypes(mediaId).then(function(types){var allowedQ=types.map(function(type){return mediaTypeResource.getById(type.id);});return $q.all(allowedQ).then(function(fullTypes){var filteredTypes=mediaTypeHelperService.getTypeWithEditor(fullTypes,['Umbraco.ImageCropper']);if(filteredTypes.length===1){return filteredTypes;}else{return mediaTypeHelperService.getTypeWithEditor(fullTypes,['Umbraco.ImageCropper','Umbraco.UploadField']);}});});},getTypeWithEditor:function getTypeWithEditor(types,editors){return types.filter(function(mediatype){for(var i=0;i<mediatype.groups.length;i++){var group=mediatype.groups[i];for(var j=0;j<group.properties.length;j++){var property=group.properties[j];if(editors.indexOf(property.editor)!==-1){return mediatype;}}}});}};return mediaTypeHelperService;}
angular.module('umbraco.services').factory('mediaTypeHelper',mediaTypeHelper);'use strict';function umbracoMenuActions(treeService,$location,navigationService,appState,localizationService,usersResource,umbRequestHelper,notificationsService){return{'ExportMember':function ExportMember(args){var url=umbRequestHelper.getApiUrl('memberApiBaseUrl','ExportMemberData',[{key:args.entity.id}]);umbRequestHelper.downloadFile(url).then(function(){localizationService.localize('speechBubbles_memberExportedSuccess').then(function(value){notificationsService.success(value);});},function(data){localizationService.localize('speechBubbles_memberExportedError').then(function(value){notificationsService.error(value);});});},'DisableUser':function DisableUser(args){localizationService.localize('defaultdialogs_confirmdisable').then(function(txtConfirmDisable){var currentMenuNode=UmbClientMgr.mainTree().getActionNode();if(confirm(txtConfirmDisable+' "'+args.entity.name+'"?\n\n')){usersResource.disableUser(args.entity.id).then(function(){navigationService.syncTree({tree:args.treeAlias,path:[args.entity.parentId,args.entity.id],forceReload:true});});}});},'RefreshNode':function RefreshNode(args){var treeRoot=appState.getTreeState('currentRootNode');if(treeRoot&&treeRoot.root){var treeNode=treeService.getDescendantNode(treeRoot.root,args.entity.id,args.treeAlias);if(treeNode){treeService.loadNodeChildren({node:treeNode,section:args.section}).then(function(){navigationService.hideMenu();});}}},'CreateChildEntity':function CreateChildEntity(args){navigationService.hideNavigation();var route='/'+args.section+'/'+args.treeAlias+'/edit/'+args.entity.id;$location.path(route).search({create:true});}};}
angular.module('umbraco.services').factory('umbracoMenuActions',umbracoMenuActions);'use strict';function navigationService($routeParams,$location,$q,$injector,eventsService,umbModelMapper,treeService,appState,backdropService){var navReadyPromise=$q.defer();var mainTreeApi=null;eventsService.on('app.navigationReady',function(e,args){mainTreeApi=args.treeApi;navReadyPromise.resolve(mainTreeApi);});eventsService.on('appState.backdrop',function(e,args){var element=$(args.element);element.addClass('above-backdrop');});var nonRoutingQueryStrings=['mculture','cculture','csegment','lq','sr'];var retainedQueryStrings=['mculture'];function setMode(mode){switch(mode){case'tree':appState.setGlobalState('navMode','tree');appState.setGlobalState('showNavigation',true);appState.setMenuState('showMenu',false);appState.setMenuState('showMenuDialog',false);appState.setGlobalState('stickyNavigation',false);appState.setGlobalState('showTray',false);break;case'menu':appState.setGlobalState('navMode','menu');appState.setGlobalState('showNavigation',true);appState.setMenuState('showMenu',true);appState.setMenuState('showMenuDialog',false);appState.setGlobalState('stickyNavigation',true);break;case'dialog':appState.setGlobalState('navMode','dialog');appState.setGlobalState('stickyNavigation',true);appState.setGlobalState('showNavigation',true);appState.setMenuState('showMenu',false);appState.setMenuState('showMenuDialog',true);appState.setMenuState('allowHideMenuDialog',true);break;case'search':appState.setGlobalState('navMode','search');appState.setGlobalState('stickyNavigation',false);appState.setGlobalState('showNavigation',true);appState.setMenuState('showMenu',false);appState.setSectionState('showSearchResults',true);appState.setMenuState('showMenuDialog',false);break;default:appState.setGlobalState('navMode','default');appState.setMenuState('showMenu',false);appState.setMenuState('showMenuDialog',false);appState.setMenuState('allowHideMenuDialog',true);appState.setSectionState('showSearchResults',false);appState.setGlobalState('stickyNavigation',false);appState.setGlobalState('showTray',false);appState.setMenuState('currentNode',null);if(appState.getGlobalState('isTablet')===true){appState.setGlobalState('showNavigation',false);}
break;}}
function pathToRouteParts(requestPath){if(!Utilities.isString(requestPath)){throw'The value for requestPath is not a string';}
var pathAndQuery=requestPath.split('#')[1];if(pathAndQuery){if(pathAndQuery.indexOf('%253')||pathAndQuery.indexOf('%252')){pathAndQuery=decodeURIComponent(pathAndQuery);}
var pathParts=pathAndQuery.split('?');var path=pathParts[0];var qry=pathParts.length===1?'':pathParts[1];var qryParts=qry.split('&');var result={path:path};for(var i=0;i<qryParts.length;i++){var keyVal=qryParts[i].split('=');if(keyVal.length==2){result[keyVal[0]]=keyVal[1];}}
return result;}}
function closeBackdrop(){var aboveClass='above-backdrop';var leftColumn=$('#leftcolumn');var isLeftColumnOnTop=leftColumn.hasClass(aboveClass);if(isLeftColumnOnTop){backdropService.close();leftColumn.removeClass(aboveClass);}}
var service={isRouteChangingNavigation:function isRouteChangingNavigation(currUrlParams,nextUrlParams){if(Utilities.isString(currUrlParams)){currUrlParams=pathToRouteParts(currUrlParams);}
if(Utilities.isString(nextUrlParams)){nextUrlParams=pathToRouteParts(nextUrlParams);}
if(nextUrlParams.sr===true){return false;}
var allowRoute=true;var currRoutingKeys=_.difference(_.keys(currUrlParams),nonRoutingQueryStrings);var nextRoutingKeys=_.difference(_.keys(nextUrlParams),nonRoutingQueryStrings);var diff1=_.difference(currRoutingKeys,nextRoutingKeys);var diff2=_.difference(nextRoutingKeys,currRoutingKeys);if(diff1.length===0&&diff2.length===0){var partsChanged=0;_.each(currRoutingKeys,function(k){if(currUrlParams[k]!=nextUrlParams[k]){partsChanged++;}});if(partsChanged===0){allowRoute=false;}}
return allowRoute;},waitForNavReady:function waitForNavReady(){return navReadyPromise.promise;},clearSearch:function clearSearch(toRetain){var toRetain=_.union(retainedQueryStrings,toRetain);var currentSearch=$location.search();$location.search('');_.each(toRetain,function(k){if(currentSearch[k]){$location.search(k,currentSearch[k]);}});},setSoftRedirect:function setSoftRedirect(){$location.search('sr',true);},retainQueryStrings:function retainQueryStrings(currRouteParams,nextRouteParams){var toRetain=Utilities.copy(nextRouteParams);var updated=false;_.each(retainedQueryStrings,function(r){if(currRouteParams[r]&&nextRouteParams[r]!==undefined&&!nextRouteParams[r]){toRetain[r]=currRouteParams[r];updated=true;}});return updated?toRetain:null;},loadLegacyIFrame:function loadLegacyIFrame(source){$location.path('/'+appState.getSectionState('currentSection')+'/framed/'+encodeURIComponent(source));},changeSection:function changeSection(sectionAlias,force){setMode('default-opensection');if(force&&appState.getSectionState('currentSection')===sectionAlias){appState.setSectionState('currentSection','');}
appState.setSectionState('currentSection',sectionAlias);this.showTree(sectionAlias);$location.path(sectionAlias);},showTree:function showTree(sectionAlias,syncArgs){if(sectionAlias!==appState.getSectionState('currentSection')){appState.setSectionState('currentSection',sectionAlias);if(syncArgs){return this.syncTree(syncArgs);}}
setMode('tree');return $q.when(true);},showTray:function showTray(){appState.setGlobalState('showTray',true);},hideTray:function hideTray(){appState.setGlobalState('showTray',false);},syncTree:function syncTree(args){if(!args){throw'args cannot be null';}
if(!args.path){throw'args.path cannot be null';}
if(!args.tree){throw'args.tree cannot be null';}
return navReadyPromise.promise.then(function(){return mainTreeApi.syncTree(args);});},hasTree:function hasTree(treeAlias){return navReadyPromise.promise.then(function(){return mainTreeApi.hasTree(treeAlias);});},_syncPath:function _syncPath(path,forceReload){return navReadyPromise.promise.then(function(){return mainTreeApi.syncTree({path:path,forceReload:forceReload});});},reloadNode:function reloadNode(node){return navReadyPromise.promise.then(function(){return mainTreeApi.reloadNode(node);});},reloadSection:function reloadSection(sectionAlias){return navReadyPromise.promise.then(function(){treeService.clearCache({section:sectionAlias});return mainTreeApi.load(sectionAlias);});},hideTree:function hideTree(){if(appState.getGlobalState('isTablet')===true&&!appState.getGlobalState('stickyNavigation')){appState.setSectionState('currentSection',$routeParams.section);setMode('default-hidesectiontree');}},showMenu:function showMenu(args){var self=this;var backDropOptions={'element':$('#leftcolumn')[0]};return treeService.getMenu({treeNode:args.node}).then(function(data){backdropService.open(backDropOptions);if(data.defaultAlias&&!args.skipDefault){var found=_.find(data.menuItems,function(item){return item.alias=data.defaultAlias;});if(found){appState.setMenuState('currentNode',args.node);self.showDialog({node:args.node,action:found,section:appState.getSectionState('currentSection')});return $q.resolve();}}
setMode('menu');appState.setMenuState('currentNode',args.node);appState.setMenuState('menuActions',data.menuItems);appState.setMenuState('dialogTitle',args.node.name);return $q.resolve();});},hideMenu:function hideMenu(){appState.setMenuState('currentNode',null);appState.setMenuState('menuActions',[]);setMode('tree');closeBackdrop();},executeMenuAction:function executeMenuAction(action,node,section){if(!action){throw'action cannot be null';}
if(!node){throw'node cannot be null';}
if(!section){throw'section cannot be null';}
appState.setMenuState('currentNode',node);if(action.metaData&&action.metaData['actionRoute']&&Utilities.isString(action.metaData['actionRoute'])){var parts=action.metaData['actionRoute'].split('?');$location.path(parts[0]).search(parts.length>1?parts[1]:'');this.hideNavigation();return;}else if(action.metaData&&action.metaData['jsAction']&&Utilities.isString(action.metaData['jsAction'])){var menuAction=action.metaData['jsAction'].split('.');if(menuAction.length!==2){var js=action.metaData['jsAction'].replace('javascript:','');eval(js);}else{var menuActionService=$injector.get(menuAction[0]);if(!menuActionService){throw'The angular service '+menuAction[0]+' could not be found';}
var method=menuActionService[menuAction[1]];if(!method){throw'The method '+menuAction[1]+' on the angular service '+menuAction[0]+' could not be found';}
method.apply(this,[{entity:umbModelMapper.convertToEntityBasic(node),action:action,section:section,treeAlias:treeService.getTreeAlias(node)}]);}}else{service.showDialog({node:node,action:action,section:section});}},showDialog:function showDialog(args){if(!args){throw'showDialog is missing the args parameter';}
if(!args.action){throw'The args parameter must have an \'action\' property as the clicked menu action object';}
if(!args.node){throw'The args parameter must have a \'node\' as the active tree node';}
if(args.action.metaData['dialogTitle']){appState.setMenuState('dialogTitle',args.action.metaData['dialogTitle']);}else{appState.setMenuState('dialogTitle',args.action.name);}
var templateUrl;if(args.action.metaData['actionView']){templateUrl=args.action.metaData['actionView'];}else{var treeAlias=treeService.getTreeAlias(args.node);if(!treeAlias){throw'Could not get tree alias for node '+args.node.id;}
templateUrl=this.getTreeTemplateUrl(treeAlias,args.action.alias);}
setMode('dialog');if(templateUrl){appState.setMenuState('dialogTemplateUrl',templateUrl);}},getTreeTemplateUrl:function getTreeTemplateUrl(treeAlias,action){var packageTreeFolder=treeService.getTreePackageFolder(treeAlias);if(packageTreeFolder){return Umbraco.Sys.ServerVariables.umbracoSettings.appPluginsPath+'/'+packageTreeFolder+'/backoffice/'+treeAlias+'/'+action+'.html';}else{return'views/'+treeAlias+'/'+action+'.html';}},allowHideDialog:function allowHideDialog(allow){if(appState.getGlobalState('navMode')!=='dialog'){return;}
appState.setMenuState('allowHideMenuDialog',allow);},hideDialog:function hideDialog(showMenu){if(appState.getMenuState('allowHideMenuDialog')===false){return;}
if(showMenu){this.showMenu({skipDefault:true,node:appState.getMenuState('currentNode')});}else{closeBackdrop();setMode('default');}},showSearch:function showSearch(){setMode('search');},hideSearch:function hideSearch(){setMode('default-hidesearch');},hideNavigation:function hideNavigation(){appState.setMenuState('menuActions',[]);closeBackdrop();setMode('default');}};return service;}
angular.module('umbraco.services').factory('navigationService',navigationService);'use strict';angular.module('umbraco.services').factory('notificationsService',function($rootScope,$timeout,angularHelper){var nArray=[];function setViewPath(view){if(view.indexOf('/')<0){view='views/common/notifications/'+view;}
if(view.indexOf('.html')<0){view=view+'.html';}
return view;}
var service={add:function add(item){angularHelper.safeApply($rootScope,function(){if(item.view){item.view=setViewPath(item.view);item.sticky=true;item.type='form';item.headline=null;}
if(item.message){item.headline+=': ';if(item.message.length>200){item.sticky=true;}}
item.id=String.CreateGuid();nArray.push(item);if(!item.sticky){$timeout(function(){var found=_.find(nArray,function(i){return i.id===item.id;});if(found){var index=nArray.indexOf(found);nArray.splice(index,1);}},10000);}
return item;});},hasView:function hasView(view){if(!view){return _.find(nArray,function(notification){return notification.view;});}else{view=setViewPath(view).toLowerCase();return _.find(nArray,function(notification){return notification.view.toLowerCase()===view;});}},addView:function addView(view,args){var item={args:args,view:view};service.add(item);},showNotification:function showNotification(args){if(!args){throw'args cannot be null';}
if(args.type===undefined||args.type===null){throw'args.type cannot be null';}
if(!args.header){throw'args.header cannot be null';}
switch(args.type){case 0:this.success(args.header,args.message);break;case 1:this.info(args.header,args.message);break;case 2:this.error(args.header,args.message);break;case 3:this.success(args.header,args.message);break;case 4:this.warning(args.header,args.message);break;}},success:function success(headline,message){return service.add({headline:headline,message:message,type:'success',time:new Date()});},error:function error(headline,message){return service.add({headline:headline,message:message,type:'error',time:new Date()});},warning:function warning(headline,message){return service.add({headline:headline,message:message,type:'warning',time:new Date()});},info:function info(headline,message){return service.add({headline:headline,message:message,type:'info',time:new Date()});},remove:function remove(index){if(Utilities.isObject(index)){var i=nArray.indexOf(index);angularHelper.safeApply($rootScope,function(){nArray.splice(i,1);});}else{angularHelper.safeApply($rootScope,function(){nArray.splice(index,1);});}},removeAll:function removeAll(){angularHelper.safeApply($rootScope,function(){nArray=[];});},current:nArray,getCurrent:function getCurrent(){return nArray;}};return service;});'use strict';(function(){'use strict';function overlayService(eventsService,backdropService){var currentOverlay=null;function open(newOverlay){if(currentOverlay){_close();}
var backdropOptions={};var overlay=newOverlay;if(!overlay.position){overlay.position='center';}
if(!overlay.size){overlay.size='small';}
if(!overlay.view){overlay.view='views/common/overlays/default/default.html';}
if(overlay.disableBackdropClick){backdropOptions.disableEventsOnClick=true;}
overlay.show=true;backdropService.open(backdropOptions);currentOverlay=overlay;eventsService.emit('appState.overlay',overlay);}
function _close(){backdropService.close();currentOverlay=null;eventsService.emit('appState.overlay',null);}
function ysod(error){var overlay={view:'views/common/overlays/ysod/ysod.html',error:error,close:function close(){_close();}};open(overlay);}
function confirm(overlay){if(!overlay.closeButtonLabelKey)
overlay.closeButtonLabelKey='general_cancel';if(!overlay.view)
overlay.view='views/common/overlays/confirm/confirm.html';if(!overlay.close)
overlay.close=function(){_close();};switch(overlay.confirmType){case'delete':if(!overlay.confirmMessageStyle)
overlay.confirmMessageStyle='danger';if(!overlay.submitButtonStyle)
overlay.submitButtonStyle='danger';if(!overlay.submitButtonLabelKey)
overlay.submitButtonLabelKey='actions_delete';break;case'remove':if(!overlay.submitButtonStyle)
overlay.submitButtonStyle='primary';if(!overlay.submitButtonLabelKey)
overlay.submitButtonLabelKey='actions_remove';break;default:if(!overlay.submitButtonLabelKey)
overlay.submitButtonLabelKey='general_confirm';}
open(overlay);}
function confirmDelete(overlay){overlay.confirmType='delete';confirm(overlay);}
function confirmRemove(overlay){overlay.confirmType='remove';confirm(overlay);}
var service={open:open,close:_close,ysod:ysod,confirm:confirm,confirmDelete:confirmDelete,confirmRemove:confirmRemove};return service;}
angular.module('umbraco.services').factory('overlayService',overlayService);}());'use strict';(function(){'use strict';function overlayHelper(){var numberOfOverlays=0;function registerOverlay(){numberOfOverlays++;return numberOfOverlays;}
function unregisterOverlay(){numberOfOverlays--;return numberOfOverlays;}
function getNumberOfOverlays(){return numberOfOverlays;}
var service={numberOfOverlays:numberOfOverlays,registerOverlay:registerOverlay,unregisterOverlay:unregisterOverlay,getNumberOfOverlays:getNumberOfOverlays};return service;}
angular.module('umbraco.services').factory('overlayHelper',overlayHelper);}());'use strict';(function(){'use strict';function platformService(){function isMac(){return navigator.platform.toUpperCase().indexOf('MAC')>=0;}
var service={isMac:isMac};return service;}
angular.module('umbraco.services').factory('platformService',platformService);}());'use strict';(function(){'use strict';function requestRetryQueue($q,$log){var retryQueue=[];var retryUser=null;var service={onItemAddedCallbacks:[],hasMore:function hasMore(){return retryQueue.length>0;},push:function push(retryItem){retryQueue.push(retryItem);angular.forEach(service.onItemAddedCallbacks,function(cb){try{cb(retryItem);}catch(e){$log.error('requestRetryQueue.push(retryItem): callback threw an error'+e);}});},pushRetryFn:function pushRetryFn(reason,userName,retryFn){if(arguments.length===2){retryFn=userName;userName=reason;reason=undefined;}
if(retryUser&&retryUser!==userName||userName===null){throw new Error('invalid user');}
retryUser=userName;var deferred=$q.defer();var retryItem={reason:reason,retry:function retry(){$q.when(retryFn()).then(function(value){deferred.resolve(value);},function(value){deferred.reject(value);});},cancel:function cancel(){deferred.reject();}};service.push(retryItem);return deferred.promise;},retryReason:function retryReason(){return service.hasMore()&&retryQueue[0].reason;},cancelAll:function cancelAll(){while(service.hasMore()){retryQueue.shift().cancel();}
retryUser=null;},retryAll:function retryAll(userName){if(retryUser==null){return;}
if(retryUser!==userName){service.cancelAll();return;}
while(service.hasMore()){retryQueue.shift().retry();}}};return service;}
angular.module('umbraco.services').factory('requestRetryQueue',requestRetryQueue);}());'use strict';angular.module('umbraco.services').factory('searchService',function($q,$log,entityResource,contentResource,umbRequestHelper,$injector,searchResultFormatter){return{searchMembers:function searchMembers(args){if(!args.term){throw'args.term is required';}
return entityResource.search(args.term,'Member',args.searchFrom).then(function(data){_.each(data,function(item){searchResultFormatter.configureMemberResult(item);});return data;});},searchContent:function searchContent(args){if(!args.term){throw'args.term is required';}
return entityResource.search(args.term,'Document',args.searchFrom,args.canceler,args.dataTypeKey).then(function(data){_.each(data,function(item){searchResultFormatter.configureContentResult(item);});return data;});},searchMedia:function searchMedia(args){if(!args.term){throw'args.term is required';}
return entityResource.search(args.term,'Media',args.searchFrom,args.canceler,args.dataTypeKey).then(function(data){_.each(data,function(item){searchResultFormatter.configureMediaResult(item);});return data;});},searchAll:function searchAll(args){if(!args.term){throw'args.term is required';}
return entityResource.searchAll(args.term,args.canceler).then(function(data){_.each(data,function(resultByType){var formatterMethod=searchResultFormatter.configureDefaultResult;if(resultByType.jsSvc){var searchFormatterService=$injector.get(resultByType.jsSvc);if(searchFormatterService){if(!resultByType.jsMethod){resultByType.jsMethod='format';}
formatterMethod=searchFormatterService[resultByType.jsMethod];if(!formatterMethod){throw'The method '+resultByType.jsMethod+' on the angular service '+resultByType.jsSvc+' could not be found';}}}
_.each(resultByType.results,function(item){formatterMethod.apply(this,[item,resultByType.treeAlias,resultByType.appAlias]);});});return data;});},setCurrent:function setCurrent(sectionAlias){var currentSection=sectionAlias;}};});'use strict';function searchResultFormatter(umbRequestHelper){function configureDefaultResult(content,treeAlias,appAlias){content.editorPath=appAlias+'/'+treeAlias+'/edit/'+content.id;angular.extend(content.metaData,{treeAlias:treeAlias});}
function configureContentResult(content,treeAlias,appAlias){content.menuUrl=umbRequestHelper.getApiUrl('contentTreeBaseUrl','GetMenu',[{id:content.id},{application:appAlias}]);content.editorPath=appAlias+'/'+treeAlias+'/edit/'+content.id;angular.extend(content.metaData,{treeAlias:treeAlias});content.subTitle=content.metaData.Url;}
function configureMemberResult(member,treeAlias,appAlias){member.menuUrl=umbRequestHelper.getApiUrl('memberTreeBaseUrl','GetMenu',[{id:member.id},{application:appAlias}]);member.editorPath=appAlias+'/'+treeAlias+'/edit/'+(member.key?member.key:member.id);angular.extend(member.metaData,{treeAlias:treeAlias});member.subTitle=member.metaData.Email;}
function configureMediaResult(media,treeAlias,appAlias){media.menuUrl=umbRequestHelper.getApiUrl('mediaTreeBaseUrl','GetMenu',[{id:media.id},{application:appAlias}]);media.editorPath=appAlias+'/'+treeAlias+'/edit/'+media.id;angular.extend(media.metaData,{treeAlias:treeAlias});}
return{configureContentResult:configureContentResult,configureMemberResult:configureMemberResult,configureMediaResult:configureMediaResult,configureDefaultResult:configureDefaultResult};}
angular.module('umbraco.services').factory('searchResultFormatter',searchResultFormatter);'use strict';(function(){'use strict';function sectionService(userService,$q,sectionResource){function getSectionsForUser(){var deferred=$q.defer();userService.getCurrentUser().then(function(u){if(u.sections){deferred.resolve(u.sections);}else{sectionResource.getSections().then(function(sections){u.sections=sections;deferred.resolve(u.sections);});}});return deferred.promise;}
var service={getSectionsForUser:getSectionsForUser};return service;}
angular.module('umbraco.services').factory('sectionService',sectionService);}());'use strict';function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest();}
function _nonIterableRest(){throw new TypeError('Invalid attempt to destructure non-iterable instance');}
function _iterableToArrayLimit(arr,i){if(!(Symbol.iterator in Object(arr)||Object.prototype.toString.call(arr)==='[object Arguments]')){return;}
var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)
break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i['return']!=null)
_i['return']();}finally{if(_d)
throw _e;}}
return _arr;}
function _arrayWithHoles(arr){if(Array.isArray(arr))
return arr;}
function serverValidationManager($timeout){var callbacks=[];var errorMsgItems=[];var defaultMatchOptions={matchType:null};function executeCallback(errorsForCallback,callback,culture,segment,isValid){callback.apply(instance,[isValid,errorsForCallback,errorMsgItems,culture,segment]);}
function notify(){$timeout(function(){for(var i=0;i<errorMsgItems.length;i++){var item=errorMsgItems[i];}
notifyCallbacks();});}
function getFieldErrors(fieldName){if(!Utilities.isString(fieldName)){throw'fieldName must be a string';}
return _.filter(errorMsgItems,function(item){return item.propertyAlias===null&&item.culture==='invariant'&&item.fieldName===fieldName;});}
function getPropertyErrors(propertyAlias,culture,segment,fieldName,options){if(!Utilities.isString(propertyAlias)){throw'propertyAlias must be a string';}
if(fieldName&&!Utilities.isString(fieldName)){throw'fieldName must be a string';}
if(!culture){culture='invariant';}
if(!segment){segment=null;}
if(!options){options=defaultMatchOptions;}
return _.filter(errorMsgItems,function(errMsgItem){if(!errMsgItem.propertyAlias){return false;}
var matchProp=matchErrMsgItemProperty(errMsgItem,propertyAlias,options);return matchProp&&errMsgItem.culture===culture&&errMsgItem.segment===segment&&(options.matchType||errMsgItem.fieldName===fieldName||fieldName===undefined||fieldName==='');});}
function matchErrMsgItemProperty(errMsgItem,propertyValidationKey,options){if(errMsgItem.propertyAlias===propertyValidationKey){return true;}
if(options.matchType==='prefix'&&errMsgItem.propertyAlias.startsWith(propertyValidationKey+'/')){return true;}
if(options.matchType==='suffix'&&errMsgItem.propertyAlias.endsWith('/'+propertyValidationKey)){return true;}
if(options.matchType==='contains'&&errMsgItem.propertyAlias.includes('/'+propertyValidationKey+'/')){return true;}
return false;}
function getVariantErrors(culture,segment){if(!culture){culture='invariant';}
if(!segment){segment=null;}
return _.filter(errorMsgItems,function(item){return item.culture===culture&&item.segment===segment;});}
function notifyCallback(cb){if(cb.propertyAlias===null&&cb.fieldName!==null){var fieldErrors=getFieldErrors(cb.fieldName);var valid=fieldErrors.length===0;executeCallback(fieldErrors,cb.callback,cb.culture,cb.segment,valid);}else if(cb.propertyAlias!=null){var propErrors=getPropertyErrors(cb.propertyAlias,cb.culture,cb.segment,cb.fieldName,cb.options);var _valid=propErrors.length===0;executeCallback(propErrors,cb.callback,cb.culture,cb.segment,_valid);}else{var variantErrors=getVariantErrors(cb.culture,cb.segment);var _valid2=variantErrors.length===0;executeCallback(variantErrors,cb.callback,cb.culture,cb.segment,_valid2);}}
function notifyCallbacks(){if(errorMsgItems.length===0){return;}
callbacks.forEach(function(cb){return notifyCallback(cb);});}
function parseComplexEditorError(errorMsg,parentPropertyAlias){var json=Utilities.isArray(errorMsg)?errorMsg:JSON.parse(errorMsg);var result=[];function extractModelState(validation,parentPath){if(validation.$id&&validation.ModelState){var ms={validationPath:''.concat(parentPath,'/').concat(validation.$id),modelState:validation.ModelState};result.push(ms);return ms;}
return null;}
function iterateErrorBlocks(blocks,parentPath){for(var i=0;i<blocks.length;i++){var validation=blocks[i];var ms=extractModelState(validation,parentPath);if(!ms){continue;}
var nested=_.omit(validation,'$id','$elementTypeAlias','ModelState');for(var _i=0,_Object$entries=Object.entries(nested);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];if(Array.isArray(value)){iterateErrorBlocks(value,''.concat(ms.validationPath,'/').concat(key));}}}}
iterateErrorBlocks(json,parentPropertyAlias);return result;}
function getPropertyCallbacks(propertyAlias,culture,fieldName,segment){if(!culture){culture='invariant';}
if(!segment){segment=null;}
var found=_.filter(callbacks,function(cb){if(!cb.options){cb.options=defaultMatchOptions;}
var matchProp=matchCallbackItemProperty(cb,propertyAlias);return matchProp&&cb.culture===culture&&cb.segment===segment&&(cb.options.matchType||cb.fieldName===fieldName||cb.fieldName===undefined||cb.fieldName==='');});return found;}
function matchCallbackItemProperty(cb,propertyValidationKey){if(cb.propertyAlias===propertyValidationKey){return true;}
if(cb.options.matchType==='prefix'&&propertyValidationKey.startsWith(cb.propertyAlias+'/')){return true;}
if(cb.options.matchType==='suffix'&&propertyValidationKey.endsWith('/'+cb.propertyAlias)){return true;}
if(cb.options.matchType==='contains'&&propertyValidationKey.includes('/'+cb.propertyAlias+'/')){return true;}
return false;}
function getFieldCallbacks(fieldName){var found=_.filter(callbacks,function(item){return item.propertyAlias===null&&item.culture==='invariant'&&item.segment===null&&item.fieldName===fieldName;});return found;}
function getVariantCallbacks(culture,segment){var found=_.filter(callbacks,function(item){return item.culture===culture&&item.segment===segment&&item.propertyAlias===null&&item.fieldName===null;});return found;}
function addFieldError(fieldName,errorMsg){if(!fieldName){return;}
if(!hasFieldError(fieldName)){errorMsgItems.push({propertyAlias:null,culture:'invariant',segment:null,fieldName:fieldName,errorMsg:errorMsg});}
var errorsForCallback=getFieldErrors(fieldName);var cbs=getFieldCallbacks(fieldName);for(var cb in cbs){executeCallback(errorsForCallback,cbs[cb].callback,null,null,false);}}
function _addPropertyError(propertyAlias,culture,fieldName,errorMsg,segment){if(!propertyAlias){return;}
if(!culture){culture='invariant';}
if(!segment){segment=null;}
if(!errorMsg){errorMsg='';}
if(Utilities.isString(errorMsg)){errorMsg=errorMsg.trimStartSpecial().trim();}
if(Utilities.isString(errorMsg)&&errorMsg.startsWith('[')||Utilities.isArray(errorMsg)){var idsToErrors=parseComplexEditorError(errorMsg,propertyAlias);idsToErrors.forEach(function(x){return addErrorsForModelState(x.modelState,x.validationPath);});errorMsg='';}
if(!hasPropertyError(propertyAlias,culture,fieldName,segment)){errorMsgItems.push({propertyAlias:propertyAlias,culture:culture,segment:segment,fieldName:fieldName,errorMsg:errorMsg});}}
function hasPropertyError(propertyAlias,culture,fieldName,segment){if(!culture){culture='invariant';}
if(!segment){segment=null;}
var err=_.find(errorMsgItems,function(item){return item.propertyAlias===propertyAlias&&item.culture===culture&&item.segment===segment&&(item.fieldName===fieldName||fieldName===undefined||fieldName==='');});return err?true:false;}
function hasFieldError(fieldName){var err=_.find(errorMsgItems,function(item){return item.propertyAlias===null&&item.culture==='invariant'&&item.segment===null&&item.fieldName===fieldName;});return err?true:false;}
function addErrorsForModelState(modelState,parentValidationPath){if(!Utilities.isObject(modelState)){throw'modelState is not an object';}
for(var _i2=0,_Object$entries2=Object.entries(modelState);_i2<_Object$entries2.length;_i2++){var _Object$entries2$_i=_slicedToArray(_Object$entries2[_i2],2),key=_Object$entries2$_i[0],value=_Object$entries2$_i[1];var parts=key.split('.');if(parts.length>1&&parts[0]==='_Properties'){var propertyValidationKey=createPropertyValidationKey(parts[1],parentValidationPath);var culture=null;if(parts.length>2){culture=parts[2];if(culture==='null'){culture=null;}}
var segment=null;if(parts.length>3){segment=parts[3];if(segment==='null'){segment=null;}}
var htmlFieldReference='';if(parts.length>4){htmlFieldReference=parts[4]||'';}
_addPropertyError(propertyValidationKey,culture,htmlFieldReference,value&&Array.isArray(value)&&value.length>0?value[0]:null,segment);}else{addFieldError(key,value[0]);}}
if(hasPropertyError){notifyCallbacks();}}
function createPropertyValidationKey(propertyAlias,parentValidationPath){return parentValidationPath?parentValidationPath+'/'+propertyAlias:propertyAlias;}
function reset(){clear();for(var cb in callbacks){callbacks[cb].callback.apply(instance,[true,[],[],null,null]);}}
function clear(){errorMsgItems=[];}
var instance={addErrorsForModelState:addErrorsForModelState,parseComplexEditorError:parseComplexEditorError,createPropertyValidationKey:createPropertyValidationKey,notifyAndClearAllSubscriptions:function notifyAndClearAllSubscriptions(){$timeout(function(){notifyCallbacks();clear();});},notify:notify,subscribe:function subscribe(propertyAlias,culture,fieldName,callback,segment,options){if(!callback){return;}
var id=String.CreateGuid();if(!culture){culture='invariant';}
if(!segment){segment=null;}
var cb=null;if(propertyAlias===null){cb={propertyAlias:null,culture:culture,segment:segment,fieldName:fieldName,callback:callback,id:id};}else if(propertyAlias!==undefined){cb={propertyAlias:propertyAlias,culture:culture,segment:segment,fieldName:fieldName,callback:callback,id:id,options:options};}
callbacks.push(cb);function unsubscribeId(){callbacks=_.reject(callbacks,function(item){return item.id===id;});}
notifyCallback(cb);return unsubscribeId;},unsubscribe:function unsubscribe(propertyAlias,culture,fieldName,segment){if(!culture){culture='invariant';}
if(!segment){segment=null;}
if(propertyAlias===null){callbacks=_.reject(callbacks,function(item){return item.propertyAlias===null&&item.culture===culture&&item.segment===segment&&item.fieldName===fieldName;});}else if(propertyAlias!==undefined){callbacks=_.reject(callbacks,function(item){return item.propertyAlias===propertyAlias&&item.culture===culture&&item.segment===segment&&(item.fieldName===fieldName||(item.fieldName===undefined||item.fieldName==='')&&(fieldName===undefined||fieldName===''));});}},getPropertyCallbacks:getPropertyCallbacks,getFieldCallbacks:getFieldCallbacks,getCultureCallbacks:function getCultureCallbacks(culture){var found=_.filter(callbacks,function(item){return item.culture===culture&&item.segment===null&&item.propertyAlias===null&&item.fieldName===null;});return found;},getVariantCallbacks:getVariantCallbacks,addFieldError:addFieldError,addPropertyError:function addPropertyError(propertyAlias,culture,fieldName,errorMsg,segment){_addPropertyError(propertyAlias,culture,fieldName,errorMsg,segment);notifyCallbacks();},removePropertyError:function removePropertyError(propertyAlias,culture,fieldName,segment,options){var errors=getPropertyErrors(propertyAlias,culture,segment,fieldName,options);errorMsgItems=errorMsgItems.filter(function(v){return errors.indexOf(v)===-1;});if(errors.length>0){notifyCallbacks();}},reset:reset,clear:clear,getPropertyError:function getPropertyError(propertyAlias,culture,fieldName,segment){var errors=getPropertyErrors(propertyAlias,culture,segment,fieldName);if(errors.length>0){return errors[0];}
return undefined;},getPropertyErrorsByValidationPath:function getPropertyErrorsByValidationPath(propertyValidationPath,culture,segment,options){return getPropertyErrors(propertyValidationPath,culture,segment,'',options);},getFieldError:function getFieldError(fieldName){var err=_.find(errorMsgItems,function(item){return item.propertyAlias===null&&item.culture==='invariant'&&item.segment===null&&item.fieldName===fieldName;});return err;},hasPropertyError:hasPropertyError,hasFieldError:hasFieldError,hasCultureError:function hasCultureError(culture){if(!culture){culture='invariant';}
var err=_.find(errorMsgItems,function(item){return item.culture===culture&&item.segment===null;});return err?true:false;},hasVariantError:function hasVariantError(culture,segment){if(!culture){culture='invariant';}
if(!segment){segment=null;}
var err=_.find(errorMsgItems,function(item){return item.culture===culture&&item.segment===segment;});return err?true:false;}};Object.defineProperty(instance,'items',{get:function get(){return errorMsgItems;},set:function set(value){throw'Cannot set the items array';}});return instance;}
angular.module('umbraco.services').factory('serverValidationManager',serverValidationManager);'use strict';(function(){'use strict';function tabbableService(){var candidateSelectors=['input','select','textarea','a[href]','button','[tabindex]','audio[controls]','video[controls]','[contenteditable]:not([contenteditable="false"])','iframe[data-mce-style]'];var candidateSelector=candidateSelectors.join(',');var matches=typeof Element==='undefined'?function(){}:Element.prototype.matches||Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector;function tabbable(el,options){options=options||{};var elementDocument=el.ownerDocument||el;var regularTabbables=[];var orderedTabbables=[];var untouchabilityChecker=new UntouchabilityChecker(elementDocument);var candidates=el.querySelectorAll(candidateSelector);if(options.includeContainer){if(matches.call(el,candidateSelector)){candidates=Array.prototype.slice.apply(candidates);candidates.unshift(el);}}
var i,candidate,candidateTabindex;for(i=0;i<candidates.length;i++){candidate=candidates[i];if(!isNodeMatchingSelectorTabbable(candidate,untouchabilityChecker))
continue;candidateTabindex=getTabindex(candidate);if(candidateTabindex===0){regularTabbables.push(candidate);}else{orderedTabbables.push({documentOrder:i,tabIndex:candidateTabindex,node:candidate});}}
var tabbableNodes=orderedTabbables.sort(sortOrderedTabbables).map(function(a){return a.node;}).concat(regularTabbables);return tabbableNodes;}
tabbable.isTabbable=isTabbable;tabbable.isFocusable=isFocusable;function isNodeMatchingSelectorTabbable(node,untouchabilityChecker){if(!isNodeMatchingSelectorFocusable(node,untouchabilityChecker)||isNonTabbableRadio(node)||getTabindex(node)<0){return false;}
return true;}
function isTabbable(node,untouchabilityChecker){if(!node)
throw new Error('No node provided');if(matches.call(node,candidateSelector)===false)
return false;return isNodeMatchingSelectorTabbable(node,untouchabilityChecker);}
function isNodeMatchingSelectorFocusable(node,untouchabilityChecker){untouchabilityChecker=untouchabilityChecker||new UntouchabilityChecker(node.ownerDocument||node);if(node.disabled||isHiddenInput(node)||untouchabilityChecker.isUntouchable(node)){return false;}
return true;}
var focusableCandidateSelector=candidateSelectors.concat('iframe').join(',');function isFocusable(node,untouchabilityChecker){if(!node)
throw new Error('No node provided');if(matches.call(node,focusableCandidateSelector)===false)
return false;return isNodeMatchingSelectorFocusable(node,untouchabilityChecker);}
function getTabindex(node){var tabindexAttr=parseInt(node.getAttribute('tabindex'),10);if(!isNaN(tabindexAttr))
return tabindexAttr;if(isContentEditable(node))
return 0;return node.tabIndex;}
function sortOrderedTabbables(a,b){return a.tabIndex===b.tabIndex?a.documentOrder-b.documentOrder:a.tabIndex-b.tabIndex;}
function find(list,predicate){for(var i=0,length=list.length;i<length;i++){if(predicate(list[i]))
return list[i];}}
function isContentEditable(node){return node.contentEditable==='true';}
function isInput(node){return node.tagName==='INPUT';}
function isHiddenInput(node){return isInput(node)&&node.type==='hidden';}
function isRadio(node){return isInput(node)&&node.type==='radio';}
function isNonTabbableRadio(node){return isRadio(node)&&!isTabbableRadio(node);}
function getCheckedRadio(nodes){for(var i=0;i<nodes.length;i++){if(nodes[i].checked){return nodes[i];}}}
function isTabbableRadio(node){if(!node.name)
return true;var radioSet=node.ownerDocument.querySelectorAll('input[type="radio"][name="'+node.name+'"]');var checked=getCheckedRadio(radioSet);return!checked||checked===node;}
function UntouchabilityChecker(elementDocument){this.doc=elementDocument;this.cache=[];}
UntouchabilityChecker.prototype.hasDisplayNone=function hasDisplayNone(node,nodeComputedStyle){if(node===this.doc.documentElement)
return false;var cached=find(this.cache,function(item){return item===node;});if(cached)
return cached[1];if(!nodeComputedStyle){if(node instanceof DocumentFragment){return true;}else{nodeComputedStyle=this.doc.defaultView.getComputedStyle(node);}}
var result=false;if(nodeComputedStyle.display==='none'){result=true;}else if(node.parentNode){result=this.hasDisplayNone(node.parentNode);}
this.cache.push([node,result]);return result;};UntouchabilityChecker.prototype.isUntouchable=function isUntouchable(node){if(node===this.doc.documentElement)
return false;var computedStyle=this.doc.defaultView.getComputedStyle(node);if(this.hasDisplayNone(node,computedStyle))
return true;return computedStyle.visibility==='hidden';};var service={tabbable:tabbable,isTabbable:isTabbable,isFocusable:isFocusable};return service;}
angular.module('umbraco.services').factory('tabbableService',tabbableService);}());'use strict';(function(){'use strict';function templateHelperService(localizationService){function getInsertDictionarySnippet(nodeName){return'@Umbraco.GetDictionaryValue("'+nodeName+'")';}
function getInsertPartialSnippet(parentId,nodeName){var partialViewName=nodeName.replace('.cshtml','');if(parentId){partialViewName=parentId+'/'+partialViewName;}
return'@Html.Partial("'+partialViewName+'")';}
function getQuerySnippet(queryExpression){var code='\n@{\n'+'\tvar selection = '+queryExpression+';\n}\n';code+='<ul>\n'+'\t@foreach (var item in selection)\n'+'\t{\n'+'\t\t<li>\n'+'\t\t\t<a href="@item.Url">@item.Name</a>\n'+'\t\t</li>\n'+'\t}\n'+'</ul>\n\n';return code;}
function getRenderBodySnippet(){return'@RenderBody()';}
function getRenderSectionSnippet(sectionName,mandatory){return'@RenderSection("'+sectionName+'", '+mandatory+')';}
function getAddSectionSnippet(sectionName){return'@section '+sectionName+'\r\n{\r\n\r\n\t{0}\r\n\r\n}\r\n';}
function getGeneralShortcuts(){var keys=['shortcuts_generalHeader','buttons_undo','buttons_redo','buttons_save'];return localizationService.localizeMany(keys).then(function(data){var labels={};labels.header=data[0];labels.undo=data[1];labels.redo=data[2];labels.save=data[3];return{'name':labels.header,'shortcuts':[{'description':labels.undo,'keys':[{'key':'ctrl'},{'key':'z'}]},{'description':labels.redo,'keys':[{'key':'ctrl'},{'key':'y'}]},{'description':labels.save,'keys':[{'key':'ctrl'},{'key':'s'}]}]};});}
function getEditorShortcuts(){var keys=['shortcuts_editorHeader','shortcuts_commentLine','shortcuts_removeLine','shortcuts_copyLineUp','shortcuts_copyLineDown','shortcuts_moveLineUp','shortcuts_moveLineDown'];return localizationService.localizeMany(keys).then(function(data){var labels={};labels.header=data[0];labels.commentline=data[1];labels.removeline=data[2];labels.copylineup=data[3];labels.copylinedown=data[4];labels.movelineup=data[5];labels.movelinedown=data[6];return{'name':labels.header,'shortcuts':[{'description':labels.commentline,'keys':[{'key':'ctrl'},{'key':'/'}]},{'description':labels.removeline,'keys':[{'key':'ctrl'},{'key':'d'}]},{'description':labels.copylineup,'keys':{'win':[{'key':'alt'},{'key':'shift'},{'key':'up'}],'mac':[{'key':'cmd'},{'key':'alt'},{'key':'up'}]}},{'description':labels.copylinedown,'keys':{'win':[{'key':'alt'},{'key':'shift'},{'key':'down'}],'mac':[{'key':'cmd'},{'key':'alt'},{'key':'down'}]}},{'description':labels.movelineup,'keys':[{'key':'alt'},{'key':'up'}]},{'description':labels.movelinedown,'keys':[{'key':'alt'},{'key':'down'}]}]};});}
function getTemplateEditorShortcuts(){var keys=['template_insert','template_insertPageField','template_insertPartialView','template_insertDictionaryItem','template_insertMacro','template_queryBuilder','template_insertSections','template_mastertemplate'];return localizationService.localizeMany(keys).then(function(data){var labels={};labels.insert=data[0];labels.pagefield=data[1];labels.partialview=data[2];labels.dictionary=data[3];labels.macro=data[4];labels.querybuilder=data[5];labels.sections=data[6];labels.mastertemplate=data[7];return{'name':'Umbraco','shortcuts':[{'description':labels.insert.concat(' ',labels.pagefield),'keys':[{'key':'alt'},{'key':'shift'},{'key':'v'}]},{'description':labels.insert.concat(' ',labels.partialview),'keys':[{'key':'alt'},{'key':'shift'},{'key':'p'}]},{'description':labels.insert.concat(' ',labels.dictionary),'keys':[{'key':'alt'},{'key':'shift'},{'key':'d'}]},{'description':labels.insert.concat(' ',labels.macro),'keys':[{'key':'alt'},{'key':'shift'},{'key':'m'}]},{'description':labels.querybuilder,'keys':[{'key':'alt'},{'key':'shift'},{'key':'q'}]},{'description':labels.insert.concat(' ',labels.sections),'keys':[{'key':'alt'},{'key':'shift'},{'key':'s'}]},{'description':labels.mastertemplate,'keys':[{'key':'alt'},{'key':'shift'},{'key':'t'}]}]};});}
function getPartialViewEditorShortcuts(){var keys=['template_insert','template_insertPageField','template_insertDictionaryItem','template_insertMacro','template_queryBuilder'];return localizationService.localizeMany(keys).then(function(data){var labels={};labels.insert=data[0];labels.pagefield=data[1];labels.dictionary=data[2];labels.macro=data[3];labels.querybuilder=data[4];return{'name':'Umbraco','shortcuts':[{'description':labels.insert.concat(' ',labels.pagefield),'keys':[{'key':'alt'},{'key':'shift'},{'key':'v'}]},{'description':labels.insert.concat(' ',labels.dictionary),'keys':[{'key':'alt'},{'key':'shift'},{'key':'d'}]},{'description':labels.insert.concat(' ',labels.macro),'keys':[{'key':'alt'},{'key':'shift'},{'key':'m'}]},{'description':labels.querybuilder,'keys':[{'key':'alt'},{'key':'shift'},{'key':'q'}]}]};});}
var service={getInsertDictionarySnippet:getInsertDictionarySnippet,getInsertPartialSnippet:getInsertPartialSnippet,getQuerySnippet:getQuerySnippet,getRenderBodySnippet:getRenderBodySnippet,getRenderSectionSnippet:getRenderSectionSnippet,getAddSectionSnippet:getAddSectionSnippet,getGeneralShortcuts:getGeneralShortcuts,getEditorShortcuts:getEditorShortcuts,getTemplateEditorShortcuts:getTemplateEditorShortcuts,getPartialViewEditorShortcuts:getPartialViewEditorShortcuts};return service;}
angular.module('umbraco.services').factory('templateHelper',templateHelperService);}());'use strict';function tinyMceService($rootScope,$q,imageHelper,$locale,$http,$timeout,stylesheetResource,macroResource,macroService,$routeParams,umbRequestHelper,angularHelper,userService,editorService,entityResource,eventsService,localStorageService,mediaHelper){var extendedValidElements='@[id|class|style],-div[id|dir|class|align|style],ins[datetime|cite],-ul[class|style],-li[class|style],-h1[id|dir|class|align|style],-h2[id|dir|class|align|style],-h3[id|dir|class|align|style],-h4[id|dir|class|align|style],-h5[id|dir|class|align|style],-h6[id|style|dir|class|align],span[id|class|style]';var fallbackStyles=[{title:'Page header',block:'h2'},{title:'Section header',block:'h3'},{title:'Paragraph header',block:'h4'},{title:'Normal',block:'p'},{title:'Quote',block:'blockquote'},{title:'Code',block:'code'}];var availableLanguages=['ar','ar_SA','hy','az','eu','be','bn_BD','bs','bg_BG','ca','zh_CN','zh_TW','hr','cs','da','dv','nl','en_CA','en_GB','et','fo','fi','fr_FR','gd','gl','ka_GE','de','de_AT','el','he_IL','hi_IN','hu_HU','is_IS','id','it','ja','kab','kk','km_KH','ko_KR','ku','ku_IQ','lv','lt','lb','ml','ml_IN','mn_MN','nb_NO','fa','fa_IR','pl','pt_BR','pt_PT','ro','ru','sr','si_LK','sk','sl_SI','es','es_MX','sv_SE','tg','ta','ta_IN','tt','th_TH','tr','tr_TR','ug','uk','uk_UA','vi','vi_VN','cy'];var defaultLanguage='en_US';function getStyles(configuredStylesheets){var stylesheets=[];var styleFormats=[];var promises=[$q.when(true)];if(configuredStylesheets){angular.forEach(configuredStylesheets,function(val,key){if(val.indexOf(Umbraco.Sys.ServerVariables.umbracoSettings.cssPath+'/')===0){stylesheets.push(val);}else{stylesheets.push(Umbraco.Sys.ServerVariables.umbracoSettings.cssPath+'/'+val+'.css');}
promises.push(stylesheetResource.getRulesByName(val).then(function(rules){angular.forEach(rules,function(rule){var r={};r.title=rule.name;if(rule.selector[0]=='.'){r.inline='span';r.classes=rule.selector.substring(1);}else if(rule.selector[0]==='#'){r.inline='span';r.attributes={id:rule.selector.substring(1)};}else if(rule.selector[0]!=='.'&&rule.selector.indexOf('.')>-1){var split=rule.selector.split('.');r.block=split[0];r.classes=rule.selector.substring(rule.selector.indexOf('.')+1).replace(/\./g,' ');}else if(rule.selector[0]!='#'&&rule.selector.indexOf('#')>-1){var split=rule.selector.split('#');r.block=split[0];r.classes=rule.selector.substring(rule.selector.indexOf('#')+1);}else{r.block=rule.selector;}
styleFormats.push(r);});}));});}else{styleFormats=fallbackStyles;}
return $q.all(promises).then(function(){stylesheets.push(''.concat(Umbraco.Sys.ServerVariables.umbracoSettings.umbracoPath,'/assets/css/rte-content.css'));return $q.when({stylesheets:stylesheets,styleFormats:styleFormats});});}
function getLanguage(){var language=defaultLanguage;var localeId=$locale.id.replace('-','_');var languageMatch=_.find(availableLanguages,function(o){return o.toLowerCase()===localeId;});if(languageMatch===undefined){var localeParts=localeId.split('_');languageMatch=_.find(availableLanguages,function(o){return o===localeParts[0];});}
if(languageMatch!==undefined){language=languageMatch;}
return language;}
function getToolbars(configuredToolbar,tinyMceConfig){var allowedSelectionToolbar=_.map(_.filter(tinyMceConfig.commands,function(f){return f.mode==='Selection'||f.mode==='All';}),function(f){return f.alias;});var allowedInsertToolbar=_.map(_.filter(tinyMceConfig.commands,function(f){return f.mode==='Insert'||f.mode==='All';}),function(f){return f.alias;});var insertToolbar=_.filter(configuredToolbar,function(t){return allowedInsertToolbar.indexOf(t)!==-1;}).join(' | ');var selectionToolbar=_.filter(configuredToolbar,function(t){return allowedSelectionToolbar.indexOf(t)!==-1;}).join(' | ');return{insertToolbar:insertToolbar,selectionToolbar:selectionToolbar};}
function uploadImageHandler(blobInfo,success,failure,progress){var xhr,formData;xhr=new XMLHttpRequest();xhr.open('POST',Umbraco.Sys.ServerVariables.umbracoUrls.tinyMceApiBaseUrl+'UploadImage');xhr.onloadstart=function(e){angularHelper.safeApply($rootScope,function(){eventsService.emit('rte.file.uploading');});};xhr.onloadend=function(e){angularHelper.safeApply($rootScope,function(){eventsService.emit('rte.file.uploaded');});};xhr.upload.onprogress=function(e){progress(e.loaded/e.total*100);};xhr.onerror=function(){failure('Image upload failed due to a XHR Transport error. Code: '+xhr.status);};xhr.onload=function(){var json;if(xhr.status<200||xhr.status>=300){failure('HTTP Error: '+xhr.status);return;}
json=JSON.parse(xhr.responseText);if(!json||typeof json.tmpLocation!=='string'){failure('Invalid JSON: '+xhr.responseText);return;}
localStorageService.set('tinymce__'.concat(blobInfo.blobUri()),json.tmpLocation);success(blobInfo.blobUri());};formData=new FormData();formData.append('file',blobInfo.blob(),blobInfo.blob().name);xhr.send(formData);}
function cleanupPasteData(plugin,args){args.content=args.content.replace(/<\s*span[^>]*>(.*?)<\s*\/\s*span>/g,'$1');args.content=args.content.replace(/<\s*b([^>]*)>(.*?)<\s*\/\s*b([^>]*)>/g,'<strong$1>$2</strong$3>');args.content=args.content.replace(/<\s*i([^>]*)>(.*?)<\s*\/\s*i([^>]*)>/g,'<em$1>$2</em$3>');}
function sizeImageInEditor(editor,imageDomElement,imgUrl){var size=editor.dom.getSize(imageDomElement);if(editor.settings.maxImageSize&&editor.settings.maxImageSize!==0){var newSize=imageHelper.scaleToMaxSize(editor.settings.maxImageSize,size.w,size.h);editor.dom.setAttrib(imageDomElement,'width',newSize.width);editor.dom.setAttrib(imageDomElement,'height',newSize.height);if(imgUrl){mediaHelper.getProcessedImageUrl(imgUrl,{height:newSize.height,width:newSize.width}).then(function(resizedImgUrl){editor.dom.setAttrib(imageDomElement,'data-mce-src',resizedImgUrl);});}
editor.execCommand('mceAutoResize',false,null,null);}}
function isMediaPickerEnabled(toolbarItemArray){var insertMediaButtonFound=false;toolbarItemArray.forEach(function(toolbarItem){if(toolbarItem.indexOf('umbmediapicker')>-1){insertMediaButtonFound=true;}});return insertMediaButtonFound;}
return{getTinyMceEditorConfig:function getTinyMceEditorConfig(args){tinymce.DOM.events.domLoaded=true;tinymce.baseURL=Umbraco.Sys.ServerVariables.umbracoSettings.umbracoPath+'/lib/tinymce/';var promises=[this.configuration(),getStyles(args.stylesheets)];return $q.all(promises).then(function(result){var tinyMceConfig=result[0];var styles=result[1];var toolbars=getToolbars(args.toolbar,tinyMceConfig);var plugins=_.map(tinyMceConfig.plugins,function(plugin){return plugin.name;});plugins.push('autoresize');plugins.push('noneditable');var modeTheme='';var modeInline=false;switch(args.mode){case'classic':modeTheme='modern';modeInline=false;break;case'distraction-free':modeTheme='inlite';modeInline=true;break;default:modeTheme='modern';modeInline=false;break;}
var config={theme:modeTheme,inline:modeInline,plugins:plugins,valid_elements:tinyMceConfig.validElements,invalid_elements:tinyMceConfig.inValidElements,extended_valid_elements:extendedValidElements,menubar:false,statusbar:false,relative_urls:false,autoresize_bottom_margin:10,content_css:styles.stylesheets,style_formats:styles.styleFormats,language:getLanguage(),toolbar:args.toolbar.join(' '),insert_toolbar:toolbars.insertToolbar,selection_toolbar:toolbars.selectionToolbar,body_class:'umb-rte',cache_suffix:'?umb__rnd='+Umbraco.Sys.ServerVariables.application.cacheBuster};if(isMediaPickerEnabled(args.toolbar)){config.images_upload_handler=uploadImageHandler;config.automatic_uploads=false;config.images_replace_blob_uris=false;config.paste_data_images=true;}
if(args.htmlId){config.selector='#'+args.htmlId;}else if(args.target){config.target=args.target;}
var pasteConfig={paste_remove_styles:true,paste_text_linebreaktype:true,paste_strip_class_attributes:'none',paste_preprocess:cleanupPasteData};angular.extend(config,pasteConfig);if(tinyMceConfig.customConfig){for(var i in tinyMceConfig.customConfig){var val=tinyMceConfig.customConfig[i];if(val){val=val.toString().trim();if(val.detectIsJson()){try{tinyMceConfig.customConfig[i]=JSON.parse(val);if(Utilities.isArray(config[i])&&Utilities.isArray(tinyMceConfig.customConfig[i])){tinyMceConfig.customConfig[i]=config[i].concat(tinyMceConfig.customConfig[i]);}}catch(e){}}
if(val==='true'){tinyMceConfig.customConfig[i]=true;}
if(val==='false'){tinyMceConfig.customConfig[i]=false;}}}
angular.extend(config,tinyMceConfig.customConfig);}
return config;});},configuration:function configuration(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl('rteApiBaseUrl','GetConfiguration'),{cache:true}),'Failed to retrieve tinymce configuration');},defaultPrevalues:function defaultPrevalues(){var cfg={};cfg.toolbar=['ace','styleselect','bold','italic','alignleft','aligncenter','alignright','bullist','numlist','outdent','indent','link','umbmediapicker','umbmacro','umbembeddialog'];cfg.stylesheets=[];cfg.maxImageSize=500;return cfg;},createInsertEmbeddedMedia:function createInsertEmbeddedMedia(editor,callback){editor.addButton('umbembeddialog',{icon:'custom icon-tv',tooltip:'Embed',stateSelector:'div[data-embed-url]',onclick:function onclick(){var selectedElm=editor.selection.getNode();var nodeName=selectedElm.nodeName;var modify=null;if(nodeName.toUpperCase()==='DIV'&&selectedElm.classList.contains('embeditem')){var embedUrl=editor.dom.getAttrib(selectedElm,'data-embed-url');var embedWidth=editor.dom.getAttrib(selectedElm,'data-embed-width');var embedHeight=editor.dom.getAttrib(selectedElm,'data-embed-height');var embedConstrain=editor.dom.getAttrib(selectedElm,'data-embed-constrain');modify={url:embedUrl,width:parseInt(embedWidth)||0,height:parseInt(embedHeight)||0,constrain:embedConstrain};}
if(callback){angularHelper.safeApply($rootScope,function(){callback(selectedElm,modify);});}}});},insertEmbeddedMediaInEditor:function insertEmbeddedMediaInEditor(editor,embed,activeElement){var wrapper=tinymce.activeEditor.dom.create('div',{'class':'mceNonEditable embeditem','data-embed-url':embed.url,'data-embed-height':embed.height,'data-embed-width':embed.width,'data-embed-constrain':embed.constrain,'contenteditable':false},embed.preview);if(activeElement&&activeElement.nodeName.toUpperCase()==='DIV'&&activeElement.classList.contains('embeditem')){activeElement.replaceWith(wrapper);}else{editor.selection.setNode(wrapper);}},createAceCodeEditor:function createAceCodeEditor(editor,callback){editor.addButton('ace',{icon:'code',tooltip:'View Source Code',onclick:function onclick(){if(callback){angularHelper.safeApply($rootScope,function(){callback();});}}});},createMediaPicker:function createMediaPicker(editor,callback){editor.addButton('umbmediapicker',{icon:'custom icon-picture',tooltip:'Media Picker',stateSelector:'img[data-udi]',onclick:function onclick(){var selectedElm=editor.selection.getNode(),currentTarget,imgDomElement;if(selectedElm.nodeName==='IMG'){var img=$(selectedElm);imgDomElement=selectedElm;var hasUdi=img.attr('data-udi')?true:false;var hasDataTmpImg=img.attr('data-tmpimg')?true:false;currentTarget={altText:img.attr('alt'),url:img.attr('src')};if(hasUdi){currentTarget['udi']=img.attr('data-udi');}else{currentTarget['id']=img.attr('rel');}
if(hasDataTmpImg){currentTarget['tmpimg']=img.attr('data-tmpimg');}}
userService.getCurrentUser().then(function(userData){if(callback){angularHelper.safeApply($rootScope,function(){callback(currentTarget,userData,imgDomElement);});}});}});},insertMediaInEditor:function insertMediaInEditor(editor,img,imgDomElement){if(img){if(imgDomElement){var hasImageSrcChanged=false;if(img.url!==editor.dom.getAttrib(imgDomElement,'src')){hasImageSrcChanged=true;}
editor.dom.setAttrib(imgDomElement,'alt',img.altText);if(img.udi){editor.dom.setAttrib(imgDomElement,'data-udi',img.udi);}
if(img.url){editor.dom.setAttrib(imgDomElement,'src',img.url);}
if(hasImageSrcChanged){editor.dom.setAttrib(imgDomElement,'width',null);editor.dom.setAttrib(imgDomElement,'height',null);sizeImageInEditor(editor,imgDomElement,img.url);}}else{var data={alt:img.altText||'',src:img.url?img.url:'nothing.jpg',id:'__mcenew','data-udi':img.udi};editor.selection.setContent(editor.dom.createHTML('img',data));$timeout(function(){var imgElm=editor.dom.get('__mcenew');editor.dom.setAttrib(imgElm,'id',null);var onImageLoaded=function onImageLoaded(){sizeImageInEditor(editor,imgElm,img.url);editor.fire('Change');};if(imgElm.complete===true){onImageLoaded();}else{imgElm.onload=onImageLoaded;}});}}},createInsertMacro:function createInsertMacro(editor,callback){var self=this;var activeMacroElement=null;editor.on('preInit',function(args){editor.serializer.addRules('div');editor.serializer.addNodeFilter('div',function(nodes,name){for(var i=0;i<nodes.length;i++){if(nodes[i].attr('class')==='umb-macro-holder'&&nodes[i].parent&&nodes[i].parent.name.toUpperCase()==='P'){nodes[i].parent.unwrap();}}});});editor.on('SetContent',function(o){$(editor.dom.select('.umb-macro-holder.mceNonEditable')).each(function(){self.loadMacroContent($(this),null,editor);});});function getRealMacroElem(element){var e=$(element).closest('.umb-macro-holder');if(e.length>0){if(e.get(0).parentNode.nodeName==='P'){if(element.parentNode.childNodes.length===1){return e.get(0).parentNode;}}
return e.get(0);}
return null;}
editor.addButton('umbmacro',{icon:'custom icon-settings-alt',tooltip:'Insert macro',onPostRender:function onPostRender(){var ctrl=this;function onNodeChanged(evt){activeMacroElement=getRealMacroElem(evt.element);ctrl.active(activeMacroElement!==null);}
editor.on('NodeChange',onNodeChanged);},onclick:function onclick(){var dialogData={richTextEditor:true};if(activeMacroElement){var contents=$(activeMacroElement).contents();var comment=_.find(contents,function(item){return item.nodeType===8;});if(!comment){throw'Cannot parse the current macro, the syntax in the editor is invalid';}
var syntax=comment.textContent.trim();var parsed=macroService.parseMacroSyntax(syntax);dialogData={macroData:parsed,activeMacroElement:activeMacroElement};}
if(callback){angularHelper.safeApply($rootScope,function(){callback(dialogData);});}}});},insertMacroInEditor:function insertMacroInEditor(editor,macroObject,activeMacroElement){var macroSyntaxComment='<!-- '+macroObject.syntax+' -->';var uniqueId='umb-macro-'+editor.dom.uniqueId();var macroDiv=editor.dom.create('div',{'class':'umb-macro-holder '+macroObject.macroAlias+' '+uniqueId+' mceNonEditable','contenteditable':'false'},macroSyntaxComment+'<ins>Macro alias: <strong>'+macroObject.macroAlias+'</strong></ins>');if(activeMacroElement){activeMacroElement.replaceWith(macroDiv);}else{editor.selection.setNode(macroDiv);}
var $macroDiv=$(editor.dom.select('div.umb-macro-holder.'+uniqueId));editor.setDirty(true);this.loadMacroContent($macroDiv,macroObject,editor);},loadMacroContent:function loadMacroContent($macroDiv,macroData,editor){if(!macroData){var contents=$macroDiv.contents();var comment=_.find(contents,function(item){return item.nodeType===8;});if(!comment){throw'Cannot parse the current macro, the syntax in the editor is invalid';}
var syntax=comment.textContent.trim();var parsed=macroService.parseMacroSyntax(syntax);macroData=parsed;}
var $ins=$macroDiv.find('ins');$macroDiv.addClass('loading');$macroDiv.attr('contenteditable','false');var contentId=$routeParams.id;angularHelper.safeApply($rootScope,function(){macroResource.getMacroResultAsHtmlForEditor(macroData.macroAlias,contentId,macroData.macroParamsDictionary).then(function(htmlResult){$macroDiv.removeClass('loading');htmlResult=htmlResult.trim();if(htmlResult!==''){var wasDirty=editor.isDirty();$ins.html(htmlResult);if(!wasDirty){editor.undoManager.clear();}}});});},createLinkPicker:function createLinkPicker(editor,onClick){function createLinkList(callback){return function(){var linkList=editor.settings.link_list;if(typeof linkList==='string'){tinymce.util.XHR.send({url:linkList,success:function success(text){callback(tinymce.util.JSON.parse(text));}});}else{callback(linkList);}};}
function showDialog(linkList){var data={},selection=editor.selection,dom=editor.dom,selectedElm,anchorElm,initialText;var win,linkListCtrl,relListCtrl,targetListCtrl;function linkListChangeHandler(e){var textCtrl=win.find('#text');if(!textCtrl.value()||e.lastControl&&textCtrl.value()===e.lastControl.text()){textCtrl.value(e.control.text());}
win.find('#href').value(e.control.value());}
function buildLinkList(){var linkListItems=[{text:'None',value:''}];tinymce.each(linkList,function(link){linkListItems.push({text:link.text||link.title,value:link.value||link.url,menu:link.menu});});return linkListItems;}
function buildRelList(relValue){var relListItems=[{text:'None',value:''}];tinymce.each(editor.settings.rel_list,function(rel){relListItems.push({text:rel.text||rel.title,value:rel.value,selected:relValue===rel.value});});return relListItems;}
function buildTargetList(targetValue){var targetListItems=[{text:'None',value:''}];if(!editor.settings.target_list){targetListItems.push({text:'New window',value:'_blank'});}
tinymce.each(editor.settings.target_list,function(target){targetListItems.push({text:target.text||target.title,value:target.value,selected:targetValue===target.value});});return targetListItems;}
function buildAnchorListControl(url){var anchorList=[];tinymce.each(editor.dom.select('a:not([href])'),function(anchor){var id=anchor.name||anchor.id;if(id){anchorList.push({text:id,value:'#'+id,selected:url.indexOf('#'+id)!==-1});}});if(anchorList.length){anchorList.unshift({text:'None',value:''});return{name:'anchor',type:'listbox',label:'Anchors',values:anchorList,onselect:linkListChangeHandler};}}
function updateText(){if(!initialText&&data.text.length===0){this.parent().parent().find('#text')[0].value(this.value());}}
selectedElm=selection.getNode();anchorElm=dom.getParent(selectedElm,'a[href]');data.text=initialText=anchorElm?anchorElm.innerText||anchorElm.textContent:selection.getContent({format:'text'});data.href=anchorElm?dom.getAttrib(anchorElm,'href'):'';data.target=anchorElm?dom.getAttrib(anchorElm,'target'):'';data.rel=anchorElm?dom.getAttrib(anchorElm,'rel'):'';if(selectedElm.nodeName==='IMG'){data.text=initialText=' ';}
if(linkList){linkListCtrl={type:'listbox',label:'Link list',values:buildLinkList(),onselect:linkListChangeHandler};}
if(editor.settings.target_list!==false){targetListCtrl={name:'target',type:'listbox',label:'Target',values:buildTargetList(data.target)};}
if(editor.settings.rel_list){relListCtrl={name:'rel',type:'listbox',label:'Rel',values:buildRelList(data.rel)};}
var currentTarget=null;if(anchorElm){var anchor=$(anchorElm);currentTarget={name:anchor.attr('title'),url:anchor.attr('href'),target:anchor.attr('target')};var anchorVal=anchor[0].dataset.anchor;if(anchorVal){currentTarget.anchor=anchorVal.substring(1);}
if(currentTarget.url.indexOf('localLink:')>0){var linkId=currentTarget.url.substring(currentTarget.url.indexOf(':')+1,currentTarget.url.lastIndexOf('}'));var parsedIntId=parseInt(linkId,10);if(isNaN(parsedIntId)){currentTarget.udi=linkId;}else{currentTarget.id=linkId;}}}
angularHelper.safeApply($rootScope,function(){if(onClick){onClick(currentTarget,anchorElm);}});}
editor.addButton('link',{icon:'link',tooltip:'Insert/edit link',shortcut:'Ctrl+K',onclick:createLinkList(showDialog),stateSelector:'a[href]'});editor.addButton('unlink',{icon:'unlink',tooltip:'Remove link',cmd:'unlink',stateSelector:'a[href]'});editor.addShortcut('Ctrl+K','',createLinkList(showDialog));this.showDialog=showDialog;editor.addMenuItem('link',{icon:'link',text:'Insert link',shortcut:'Ctrl+K',onclick:createLinkList(showDialog),stateSelector:'a[href]',context:'insert',prependToContext:true});editor.addShortcut('Ctrl+S','',function(){angularHelper.safeApply($rootScope,function(){eventsService.emit('rte.shortcut.save');});});},insertLinkInEditor:function insertLinkInEditor(editor,target,anchorElm){var href=target.url;var hasUdi=target.udi?true:false;var id=hasUdi?target.udi:target.id?target.id:null;if(target.anchor&&target.anchor[0]!=='?'&&target.anchor[0]!=='#'){target.anchor=(target.anchor.indexOf('=')===-1?'#':'?')+target.anchor;}
if(!target.anchor){var urlParts=href.split(/(#|\?)/);if(urlParts.length===3){href=urlParts[0];target.anchor=urlParts[1]+urlParts[2];}}
function createElemAttributes(){var a={href:href,title:target.name,target:target.target?target.target:null,rel:target.rel?target.rel:null};if(target.anchor){a['data-anchor']=target.anchor;a.href=a.href+target.anchor;}else{a['data-anchor']=null;}
return a;}
function insertLink(){if(anchorElm){editor.dom.setAttribs(anchorElm,createElemAttributes());editor.selection.select(anchorElm);editor.execCommand('mceEndTyping');}else{editor.execCommand('mceInsertLink',false,createElemAttributes());}}
if(!href&&!target.anchor){editor.execCommand('unlink');return;}
if(id){href='/{localLink:'+id+'}';insertLink();return;}
if(!href){href='';}
if(href.indexOf('@')>0&&href.indexOf('//')===-1&&href.indexOf(':')===-1){href='mailto:'+href;insertLink();return;}
if(/^\s*www\./i.test(href)){href='http://'+href;insertLink();return;}
insertLink();},pinToolbar:function pinToolbar(editor){if(!editor.editorContainer){return;}
var tinyMce=$(editor.editorContainer);var toolbar=tinyMce.find('.mce-toolbar');var toolbarHeight=toolbar.height();var tinyMceRect=editor.editorContainer.getBoundingClientRect();var tinyMceTop=tinyMceRect.top;var tinyMceBottom=tinyMceRect.bottom;var tinyMceWidth=tinyMceRect.width;var tinyMceEditArea=tinyMce.find('.mce-edit-area');tinyMceEditArea.css('padding-top',toolbarHeight);if(tinyMceTop<177&&177+toolbarHeight<tinyMceBottom){toolbar.css('position','fixed').css('top','177px').css('left','auto').css('right','auto').css('width',tinyMceWidth);}else{toolbar.css('position','absolute').css('left','').css('right','').css('top','').css('width','');}},unpinToolbar:function unpinToolbar(editor){var tinyMce=$(editor.editorContainer);var toolbar=tinyMce.find('.mce-toolbar');var tinyMceEditArea=tinyMce.find('.mce-edit-area');tinyMceEditArea.css('padding-top','0');toolbar.css('position','static');},initializeEditor:function initializeEditor(args){if(!args.editor){throw'args.editor is required';}
var unwatch=null;function startWatch(){unwatch=$rootScope.$watch(function(){return args.model.value;},function(newVal,oldVal){if(newVal!==oldVal){args.editor.setContent(newVal||'',{format:'raw'});args.editor.fire('LoadContent',null);}});}
function stopWatch(){if(unwatch){unwatch();}}
function syncContent(){stopWatch();angularHelper.safeApply($rootScope,function(){args.model.value=args.editor.getContent();});startWatch();}
var toolbarItems=args.editor.settings.toolbar.split(' ');if(isMediaPickerEnabled(toolbarItems)===false){args.editor.on('dragend dragover draggesture dragdrop drop drag',function(e){e.preventDefault();e.dataTransfer.effectAllowed='none';e.dataTransfer.dropEffect='none';e.stopPropagation();});}
args.editor.on('SetContent',function(e){var content=e.content;if(content.search(/src=["']blob:.*?["']/gi)!==-1){args.editor.uploadImages(function(data){data.forEach(function(item){var img=item.element;var imgSrc=img.getAttribute('src');var tmpLocation=localStorageService.get('tinymce__'.concat(imgSrc));tinymce.activeEditor.$(img).attr({'data-tmpimg':tmpLocation});sizeImageInEditor(args.editor,img);});});var blobImageWithNoTmpImgAttribute=args.editor.dom.select('img[src^=\'blob:\']:not([data-tmpimg])');blobImageWithNoTmpImgAttribute.forEach(function(imageElement){var blobSrcUri=args.editor.dom.getAttrib(imageElement,'src');var tmpLocation=localStorageService.get('tinymce__'.concat(blobSrcUri));if(tmpLocation){sizeImageInEditor(args.editor,imageElement);args.editor.dom.setAttrib(imageElement,'data-tmpimg',tmpLocation);}});}});args.editor.on('init',function(e){if(args.model.value){args.editor.setContent(args.model.value);}
args.editor.getBody().setAttribute('spellcheck',true);startWatch();});args.editor.on('Change',function(e){syncContent();});args.editor.on('blur',function(e){syncContent();});args.editor.on('ObjectResized',function(e){var srcAttr=$(e.target).attr('src');var path=srcAttr.split('?')[0];mediaHelper.getProcessedImageUrl(path,{height:e.height,moded:'max',width:e.width}).then(function(resizedPath){$(e.target).attr('data-mce-src',resizedPath);});syncContent();});args.editor.on('Dirty',function(e){if(args.currentForm){args.currentForm.$setDirty();}});var self=this;self.createLinkPicker(args.editor,function(currentTarget,anchorElement){entityResource.getAnchors(args.model.value).then(function(anchorValues){var linkPicker={currentTarget:currentTarget,dataTypeKey:args.model.dataTypeKey,ignoreUserStartNodes:args.model.config.ignoreUserStartNodes,anchors:anchorValues,submit:function submit(model){self.insertLinkInEditor(args.editor,model.target,anchorElement);editorService.close();},close:function close(){editorService.close();}};editorService.linkPicker(linkPicker);});});self.createMediaPicker(args.editor,function(currentTarget,userData,imgDomElement){var startNodeId,startNodeIsVirtual;if(!args.model.config.startNodeId){if(args.model.config.ignoreUserStartNodes===true){startNodeId=-1;startNodeIsVirtual=true;}else{startNodeId=userData.startMediaIds.length!==1?-1:userData.startMediaIds[0];startNodeIsVirtual=userData.startMediaIds.length!==1;}}
var mediaPicker={currentTarget:currentTarget,onlyImages:true,showDetails:true,disableFolderSelect:true,disableFocalPoint:true,startNodeId:startNodeId,startNodeIsVirtual:startNodeIsVirtual,dataTypeKey:args.model.dataTypeKey,submit:function submit(model){self.insertMediaInEditor(args.editor,model.selection[0],imgDomElement);editorService.close();},close:function close(){editorService.close();}};editorService.mediaPicker(mediaPicker);});self.createInsertEmbeddedMedia(args.editor,function(activeElement,modify){var embed={modify:modify,submit:function submit(model){self.insertEmbeddedMediaInEditor(args.editor,model.embed,activeElement);editorService.close();},close:function close(){editorService.close();}};editorService.embed(embed);});self.createInsertMacro(args.editor,function(dialogData){var macroPicker={dialogData:dialogData,submit:function submit(model){var macroObject=macroService.collectValueData(model.selectedMacro,model.macroParams,dialogData.renderingEngine);self.insertMacroInEditor(args.editor,macroObject,dialogData.activeMacroElement);editorService.close();},close:function close(){editorService.close();}};editorService.macroPicker(macroPicker);});self.createAceCodeEditor(args.editor,function(){var aceEditor={content:args.editor.getContent(),view:'views/propertyeditors/rte/codeeditor.html',submit:function submit(model){args.editor.setContent(model.content);args.editor.fire('Change');editorService.close();},close:function close(){editorService.close();}};editorService.open(aceEditor);});}};}
angular.module('umbraco.services').factory('tinyMceService',tinyMceService);'use strict';(function(){'use strict';function tourService(eventsService,currentUserResource,$q,tourResource){var tours=[];var currentTour=null;function registerAllTours(){tours=[];return tourResource.getTours().then(function(tourFiles){Utilities.forEach(tourFiles,function(tourFile){Utilities.forEach(tourFile.tours,function(newTour){validateTour(newTour);validateTourRegistration(newTour);tours.push(newTour);});});eventsService.emit('appState.tour.updatedTours',tours);});}
function getTours(){return tours;}
function startTour(tour){validateTour(tour);eventsService.emit('appState.tour.start',tour);currentTour=tour;}
function endTour(tour){eventsService.emit('appState.tour.end',tour);currentTour=null;}
function disableTour(tour){var deferred=$q.defer();tour.disabled=true;currentUserResource.saveTourStatus({alias:tour.alias,disabled:tour.disabled,completed:tour.completed}).then(function(){eventsService.emit('appState.tour.end',tour);currentTour=null;deferred.resolve(tour);});return deferred.promise;}
function completeTour(tour){var deferred=$q.defer();tour.completed=true;currentUserResource.saveTourStatus({alias:tour.alias,disabled:tour.disabled,completed:tour.completed}).then(function(){eventsService.emit('appState.tour.complete',tour);currentTour=null;deferred.resolve(tour);});return deferred.promise;}
function getCurrentTour(){return currentTour;}
function getGroupedTours(){var deferred=$q.defer();var tours=getTours();setTourStatuses(tours).then(function(){var groupedTours=[];tours.forEach(function(item){if(item.contentType===null||item.contentType===''){var groupExists=false;var newGroup={'group':'','tours':[]};groupedTours.forEach(function(group){if(group.group===item.group){if(item.groupOrder){group.groupOrder=item.groupOrder;}
groupExists=true;if(item.hidden===false){group.tours.push(item);}}});if(!groupExists){newGroup.group=item.group;if(item.groupOrder){newGroup.groupOrder=item.groupOrder;}
if(item.hidden===false){newGroup.tours.push(item);groupedTours.push(newGroup);}}}});deferred.resolve(groupedTours);});return deferred.promise;}
function getTourByAlias(tourAlias){var deferred=$q.defer();var tours=getTours();setTourStatuses(tours).then(function(){var tour=_.findWhere(tours,{alias:tourAlias});deferred.resolve(tour);});return deferred.promise;}
function getToursForDoctype(doctypeAlias){var deferred=$q.defer();tourResource.getToursForDoctype(doctypeAlias).then(function(tours){deferred.resolve(tours);});return deferred.promise;}
function validateTour(tour){if(!tour){throw'A tour is not specified';}
if(!tour.alias){throw'A tour alias is required';}
if(!tour.steps){throw'Tour '+tour.alias+' is missing tour steps';}
if(tour.steps&&tour.steps.length===0){throw'Tour '+tour.alias+' is missing tour steps';}
if(tour.requiredSections.length===0){throw'Tour '+tour.alias+' is missing the required sections';}}
function validateTourRegistration(tour){Utilities.forEach(tours,function(existingTour){if(existingTour.alias===tour.alias){throw'A tour with the alias '+tour.alias+' is already registered';}});}
function setTourStatuses(tours){var deferred=$q.defer();currentUserResource.getTours().then(function(storedTours){Utilities.forEach(storedTours,function(storedTour){if(storedTour.completed===true){Utilities.forEach(tours,function(tour){if(storedTour.alias===tour.alias){tour.completed=true;}});}
if(storedTour.disabled===true){Utilities.forEach(tours,function(tour){if(storedTour.alias===tour.alias){tour.disabled=true;}});}});deferred.resolve(tours);});return deferred.promise;}
var service={registerAllTours:registerAllTours,startTour:startTour,endTour:endTour,disableTour:disableTour,completeTour:completeTour,getCurrentTour:getCurrentTour,getGroupedTours:getGroupedTours,getTourByAlias:getTourByAlias,getToursForDoctype:getToursForDoctype};return service;}
angular.module('umbraco.services').factory('tourService',tourService);}());'use strict';function treeService($q,treeResource,iconHelper,notificationsService,eventsService){var treeCache={};var standardCssClass='icon umb-tree-icon sprTree';function getCacheKey(args){if(!args||!args.cacheKey){return null;}
var cacheKey=args.cacheKey;cacheKey+='_'+args.section;return cacheKey;}
function invariantEquals(a,b){return typeof a==='string'&&typeof b==='string'?a.localeCompare(b,undefined,{sensitivity:'base'})===0:a===b;}
return{_getTreeCache:function _getTreeCache(){return treeCache;},_trackExpandedPaths:function _trackExpandedPaths(node,expandedPaths){if(!node.children||!Utilities.isArray(node.children)||node.children.length==0){return;}
var childPath=this.getPath(node.children[node.children.length-1]).join(',');if(expandedPaths.indexOf(childPath)!==-1){return;}
if(expandedPaths.length===0){expandedPaths.push(childPath);return;}
var clonedPaths=expandedPaths.slice(0);_.each(clonedPaths,function(p){if(childPath.startsWith(p+',')){expandedPaths.splice(expandedPaths.indexOf(p),1);if(expandedPaths.indexOf(childPath)===-1){expandedPaths.push(childPath);}}else if(p.startsWith(childPath+',')){}else if(expandedPaths.indexOf(childPath)===-1){expandedPaths.push(childPath);}});},_formatNodeDataForUseInUI:function _formatNodeDataForUseInUI(parentNode,treeNodes,section,level){var childLevel=level?level:1;if(!parentNode.section){parentNode.section=section;}
if(parentNode.metaData&&parentNode.metaData.noAccess===true){if(!parentNode.cssClasses){parentNode.cssClasses=[];}
parentNode.cssClasses.push('no-access');}
var funcParent=function funcParent(){return parentNode;};for(var i=0;i<treeNodes.length;i++){var treeNode=treeNodes[i];treeNode.level=childLevel;treeNode.parent=funcParent;treeNode.section=section;if(!treeNode.routePath){if(treeNode.metaData&&treeNode.metaData['treeAlias']){treeNode.routePath=section;}else{var treeAlias=this.getTreeAlias(treeNode);treeNode.routePath=section+'/'+treeAlias+'/edit/'+treeNode.id;}}
if(treeNode.iconIsClass===undefined||treeNode.iconIsClass){var converted=iconHelper.convertFromLegacyTreeNodeIcon(treeNode);treeNode.cssClass=standardCssClass+' '+converted;if(converted.startsWith('.')){treeNode.style='height:16px;width:16px;';}else{treeNode.style='';}}else{treeNode.style='background-image: url(\''+treeNode.iconFilePath+'\');';treeNode.cssClass=standardCssClass+' legacy-custom-file';}
if(treeNode.metaData&&treeNode.metaData.noAccess===true){if(!treeNode.cssClasses){treeNode.cssClasses=[];}
treeNode.cssClasses.push('no-access');}}},getTreePackageFolder:function getTreePackageFolder(treeAlias){if(Umbraco.Sys.ServerVariables.umbracoPlugins&&Umbraco.Sys.ServerVariables.umbracoPlugins.trees&&Utilities.isArray(Umbraco.Sys.ServerVariables.umbracoPlugins.trees)){var found=_.find(Umbraco.Sys.ServerVariables.umbracoPlugins.trees,function(item){return invariantEquals(item.alias,treeAlias);});return found?found.packageFolder:undefined;}
return undefined;},clearCache:function clearCache(args){if(!args){treeCache={};}else{if(args.section&&args.cacheKey){var cacheKey=getCacheKey(args);if(cacheKey&&treeCache&&treeCache[cacheKey]!=null){treeCache=_.omit(treeCache,cacheKey);}}else if(args.childrenOf){if(!args.cacheKey){throw'args.cacheKey is required if args.childrenOf is supplied';}
var self=this;this.clearCache({cacheKey:args.cacheKey,filter:function filter(cc){var parent=self.getDescendantNode(cc.root,args.childrenOf);if(parent){parent.children=null;parent.expanded=false;}
return cc;}});}else if(args.filter&&angular.isFunction(args.filter)){if(!args.cacheKey){throw'args.cacheKey is required if args.filter is supplied';}
var byKey=treeCache[args.cacheKey];if(byKey){var result=args.filter(byKey);if(result){treeCache[args.cacheKey]=result;}else{treeCache=_.omit(treeCache,args.cacheKey);}}}else if(args.cacheKey){var allKeys1=_.keys(treeCache);var toRemove1=_.filter(allKeys1,function(k){return k.startsWith(args.cacheKey+'_');});treeCache=_.omit(treeCache,toRemove1);}else if(args.section){var allKeys2=_.keys(treeCache);var toRemove2=_.filter(allKeys2,function(k){return k.endsWith('_'+args.section);});treeCache=_.omit(treeCache,toRemove2);}}},loadNodeChildren:function loadNodeChildren(args){if(!args){throw'No args object defined for loadNodeChildren';}
if(!args.node){throw'No node defined on args object for loadNodeChildren';}
if(!args.isDialog||!args.node.metaData.isContainer){this.removeChildNodes(args.node);}
args.node.loading=true;return this.getChildren(args).then(function(data){args.node.loading=false;args.node.children=data;if(args.node.children&&args.node.children.length>0){args.node.expanded=true;args.node.hasChildren=true;if(angular.isFunction(args.node.updateNodeData)){args.node.updateNodeData(args.node);}}
return $q.when(data);},function(reason){eventsService.emit('treeService.treeNodeLoadError',{error:reason});args.node.loading=false;notificationsService.error(reason);return $q.reject(reason);});},removeNode:function removeNode(treeNode){if(!angular.isFunction(treeNode.parent)){return;}
if(treeNode.parent()==null){throw'Cannot remove a node that doesn\'t have a parent';}
var parent=treeNode.parent();parent.children.splice(parent.children.indexOf(treeNode),1);parent.hasChildren=parent.children.length!==0;eventsService.emit('treeService.removeNode',{node:treeNode});},removeChildNodes:function removeChildNodes(treeNode){treeNode.expanded=false;treeNode.children=[];treeNode.hasChildren=false;},getChildNode:function getChildNode(treeNode,id){if(!treeNode.children){return null;}
var found=_.find(treeNode.children,function(child){return String(child.id).toLowerCase()===String(id).toLowerCase();});return found===undefined?null:found;},getDescendantNode:function getDescendantNode(treeNode,id,treeAlias){if(treeNode.isContainer===true&&!treeAlias){throw'Cannot get a descendant node from a section container node without a treeAlias specified';}
var self=this;function getTreeRoot(tn){if(tn.isContainer){for(var c=0;c<tn.children.length;c++){if(tn.children[c].isContainer){var root=getTreeRoot(tn.children[c]);if(root){return root;}}else if(self.getTreeAlias(tn.children[c])===treeAlias){return tn.children[c];}}
return null;}else{return tn;}}
var foundRoot=getTreeRoot(treeNode);if(!foundRoot){throw'Could not find a tree in the current section with alias '+treeAlias;}
treeNode=foundRoot;if(treeNode.id===id){return treeNode;}
var found=this.getChildNode(treeNode,id);if(found){return found;}
if(!treeNode.children){return null;}
for(var i=0;i<treeNode.children.length;i++){var child=treeNode.children[i];if(child.children&&Utilities.isArray(child.children)&&child.children.length>0){found=this.getDescendantNode(child,id);if(found){return found;}}}
return found===undefined?null:found;},getTreeRoot:function getTreeRoot(treeNode){if(!treeNode){throw'treeNode cannot be null';}
var root=null;var current=treeNode;while(root===null&&current){if(current.metaData&&current.metaData['treeAlias']){root=current;}else if(angular.isFunction(current.parent)){current=current.parent();}else{current=null;}}
return root;},getTreeAlias:function getTreeAlias(treeNode){var root=this.getTreeRoot(treeNode);if(root){return root.metaData['treeAlias'];}
return'';},getTree:function getTree(args){if(!args){args={section:'content',cacheKey:null};}else if(!args.section){args.section='content';}
var cacheKey=getCacheKey(args);if(cacheKey&&treeCache[cacheKey]!==undefined){return $q.when(treeCache[cacheKey]);}
var self=this;return treeResource.loadApplication(args).then(function(data){var result={name:data.name,alias:args.section,root:data};self._formatNodeDataForUseInUI(result.root,result.root.children,args.section);if(result.root.containsGroups){for(var i=0;i<result.root.children.length;i++){var group=result.root.children[i];self._formatNodeDataForUseInUI(group,group.children,args.section);}}
if(cacheKey){treeCache[cacheKey]=result;return $q.when(treeCache[cacheKey]);}
return $q.when(result);});},getMenu:function getMenu(args){if(!args){throw'args cannot be null';}
if(!args.treeNode){throw'args.treeNode cannot be null';}
return treeResource.loadMenu(args.treeNode).then(function(data){for(var i=0;i<data.length;i++){data[i].cssclass=iconHelper.convertFromLegacyIcon(data[i].cssclass);}
return data;});},getChildren:function getChildren(args){if(!args){throw'No args object defined for getChildren';}
if(!args.node){throw'No node defined on args object for getChildren';}
var section=args.section||'content';var treeItem=args.node;var self=this;return treeResource.loadNodes({node:treeItem}).then(function(data){self._formatNodeDataForUseInUI(treeItem,data,section,treeItem.level+1);return $q.when(data);});},reloadNode:function reloadNode(node){if(!node){throw'node cannot be null';}
if(!node.parent()){throw'cannot reload a single node without a parent';}
if(!node.section){throw'cannot reload a single node without an assigned node.section';}
node.loading=true;return this.getChildren({node:node.parent(),section:node.section}).then(function(data){var found=_.find(data,function(item){return item.id===node.id;});if(found){var index=_.indexOf(node.parent().children,node);if(angular.isFunction(node.parent().children[index].updateNodeData)){node.parent().children[index].updateNodeData(found);}else{_.extend(node.parent().children[index],found);}
node.parent().children[index].loading=false;return $q.when(node.parent().children[index]);}else{return $q.reject();}},function(){return $q.reject();});},getPath:function getPath(node){if(!node){throw'node cannot be null';}
if(!angular.isFunction(node.parent)){throw'node.parent is not a function, the path cannot be resolved';}
var reversePath=[];var current=node;while(current!=null){reversePath.push(current.id);if(current.metaData&&current.metaData['treeAlias']||!current.parent){current=null;}else{current=current.parent();}}
return reversePath.reverse();},syncTree:function syncTree(args){if(!args){throw'No args object defined for syncTree';}
if(!args.node){throw'No node defined on args object for syncTree';}
if(!args.path){throw'No path defined on args object for syncTree';}
if(!Utilities.isArray(args.path)){throw'Path must be an array';}
if(args.path.length<1){args.path.push('-1');}
var root=this.getTreeRoot(args.node);if(!root){throw'Could not get the root tree node based on the node passed in';}
var currPathIndex=0;if(String(args.path[currPathIndex]).toLowerCase()===String(args.node.id).toLowerCase()){if(args.path.length===1){return $q.when(root);}else{currPathIndex=1;}}
var deferred=$q.defer();var self=this;var node=args.node;var doSync=function doSync(){var child=self.getChildNode(node,args.path[currPathIndex]);if(child){if(args.path.length===currPathIndex+1){if(!args.forceReload){return $q.when(child);}else{return self.reloadNode(child);}}else{currPathIndex++;node=child;return doSync();}}else{return self.loadNodeChildren({node:node,section:node.section}).then(function(children){deferred.notify({type:'treeNodeExpanded',node:node,children:children});var found=self.getChildNode(node,args.path[currPathIndex]);if(found){if(args.path.length===currPathIndex+1){return $q.when(found);}else{currPathIndex++;node=found;return doSync();}}else{return $q.reject();}},function(){return $q.reject();});}};var wrappedPromise=doSync();wrappedPromise.then(function(args){deferred.resolve(args);},function(args){deferred.reject(args);});return deferred.promise;}};}
angular.module('umbraco.services').factory('treeService',treeService);'use strict';(function(){'use strict';function udiService(){return{create:function create(entityType){return this.build(entityType,String.CreateGuid());},build:function build(entityType,guid){return'umb://'+entityType+'/'+guid.replace(/-/g,'');},getKey:function getKey(udi){if(!Utilities.isString(udi)){throw'udi is not a string';}
if(!udi.startsWith('umb://')){throw'udi does not start with umb://';}
var withoutScheme=udi.substr('umb://'.length);var withoutHost=withoutScheme.substr(withoutScheme.indexOf('/')+1).trim();if(withoutHost.length!==32){throw'udi is not 32 chars';}
return''.concat(withoutHost.substr(0,8),'-').concat(withoutHost.substr(8,4),'-').concat(withoutHost.substr(12,4),'-').concat(withoutHost.substr(16,4),'-').concat(withoutHost.substr(20));}};}
angular.module('umbraco.services').factory('udiService',udiService);}());'use strict';(function(){'use strict';function udiParser(){return{parse:function parse(input){if(!input||typeof input!=='string'||!input.startsWith('umb://'))
return null;var lastIndexOfSlash=input.substring('umb://'.length).lastIndexOf('/');var entityType=lastIndexOfSlash===-1?input.substring('umb://'.length):input.substr('umb://'.length,lastIndexOfSlash);var value=lastIndexOfSlash===-1?null:input.substring('umb://'.length+lastIndexOfSlash+1);return{entityType:entityType,value:value,toString:function toString(){return'umb://'+entityType+(value===null?'':'/'+value);}};}};}
angular.module('umbraco.services').factory('udiParser',udiParser);}());'use strict';(function(){'use strict';function umbDataFormatter(){function getContentProperties(tabs){var properties=[];_.each(tabs,function(tab){_.each(tab.properties,function(prop){if(!prop.alias.startsWith('_umb_')&&!prop.readonly){properties.push({id:prop.id,alias:prop.alias,value:prop.value});}});});return properties;}
return{formatChangePasswordModel:function formatChangePasswordModel(model){if(!model){return null;}
var trimmed=_.omit(model,['confirm']);var allNull=true;var vals=_.values(trimmed);for(var k=0;k<vals.length;k++){if(vals[k]!==null&&vals[k]!==undefined){allNull=false;}}
if(allNull){return null;}
return trimmed;},formatContentTypePostData:function formatContentTypePostData(displayModel,action){var saveModel=_.pick(displayModel,'compositeContentTypes','isContainer','allowAsRoot','allowedTemplates','allowedContentTypes','alias','description','thumbnail','name','id','icon','trashed','key','parentId','alias','path','allowCultureVariant','allowSegmentVariant','isElement');saveModel.allowedTemplates=_.map(displayModel.allowedTemplates,function(t){return t.alias;});saveModel.defaultTemplate=displayModel.defaultTemplate?displayModel.defaultTemplate.alias:null;var realGroups=_.reject(displayModel.groups,function(g){return g.tabState==='init';});saveModel.groups=_.map(realGroups,function(g){var saveGroup=_.pick(g,'inherited','id','sortOrder','name');var realProperties=_.reject(g.properties,function(p){return p.propertyState==='init'||p.inherited===true;});var saveProperties=_.map(realProperties,function(p){var saveProperty=_.pick(p,'id','alias','description','validation','label','sortOrder','dataTypeId','groupId','memberCanEdit','showOnMemberProfile','isSensitiveData','allowCultureVariant','allowSegmentVariant');return saveProperty;});saveGroup.properties=saveProperties;if(saveGroup.inherited===true&&saveProperties.length===0){return null;}
return saveGroup;});saveModel.groups=_.reject(saveModel.groups,function(g){return!g;});return saveModel;},formatDataTypePostData:function formatDataTypePostData(displayModel,preValues,action){var saveModel={parentId:displayModel.parentId,id:displayModel.id,name:displayModel.name,selectedEditor:displayModel.selectedEditor,action:action,preValues:[]};for(var i=0;i<preValues.length;i++){saveModel.preValues.push({key:preValues[i].alias,value:preValues[i].value});}
return saveModel;},formatDictionaryPostData:function formatDictionaryPostData(dictionary,nameIsDirty){var saveModel={parentId:dictionary.parentId,id:dictionary.id,name:dictionary.name,nameIsDirty:nameIsDirty,translations:[],key:dictionary.key};for(var i=0;i<dictionary.translations.length;i++){saveModel.translations.push({isoCode:dictionary.translations[i].isoCode,languageId:dictionary.translations[i].languageId,translation:dictionary.translations[i].translation});}
return saveModel;},formatUserPostData:function formatUserPostData(displayModel){var saveModel=_.pick(displayModel,'id','parentId','name','username','culture','email','startContentIds','startMediaIds','userGroups','message');var currGroups=saveModel.userGroups;var formattedGroups=[];for(var i=0;i<currGroups.length;i++){if(!Utilities.isString(currGroups[i])){formattedGroups.push(currGroups[i].alias);}else{formattedGroups.push(currGroups[i]);}}
saveModel.userGroups=formattedGroups;var props=['startContentIds','startMediaIds'];for(var m=0;m<props.length;m++){var startIds=saveModel[props[m]];if(!startIds){continue;}
var formattedIds=[];for(var j=0;j<startIds.length;j++){formattedIds.push(Number(startIds[j].id));}
saveModel[props[m]]=formattedIds;}
return saveModel;},formatUserGroupPostData:function formatUserGroupPostData(displayModel,action){var saveModel=_.pick(displayModel,'id','alias','name','icon','sections','users','defaultPermissions','assignedPermissions');saveModel.startContentId=displayModel['contentStartNode'];saveModel.startMediaId=displayModel['mediaStartNode'];saveModel.action=action;if(!saveModel.id){saveModel.id=0;}
var currDefaultPermissions=saveModel.defaultPermissions;var saveDefaultPermissions=[];_.each(currDefaultPermissions,function(value,key,list){_.each(value,function(element,index,list){if(element.checked){saveDefaultPermissions.push(element.permissionCode);}});});saveModel.defaultPermissions=saveDefaultPermissions;var currAssignedPermissions=saveModel.assignedPermissions;var saveAssignedPermissions={};_.each(currAssignedPermissions,function(nodePermissions,index){saveAssignedPermissions[nodePermissions.id]=[];_.each(nodePermissions.allowedPermissions,function(permission,index){if(permission.checked){saveAssignedPermissions[nodePermissions.id].push(permission.permissionCode);}});});saveModel.assignedPermissions=saveAssignedPermissions;var currSections=saveModel.sections;var formattedSections=[];for(var i=0;i<currSections.length;i++){if(!Utilities.isString(currSections[i])){formattedSections.push(currSections[i].alias);}else{formattedSections.push(currSections[i]);}}
saveModel.sections=formattedSections;var currUsers=saveModel.users;var formattedUsers=[];for(var j=0;j<currUsers.length;j++){if(!Utilities.isNumber(currUsers[j])){formattedUsers.push(currUsers[j].id);}else{formattedUsers.push(currUsers[j]);}}
saveModel.users=formattedUsers;var props=['startContentId','startMediaId'];for(var m=0;m<props.length;m++){var startId=saveModel[props[m]];if(!startId){continue;}
saveModel[props[m]]=startId.id;}
saveModel.parentId=-1;return saveModel;},formatMemberPostData:function formatMemberPostData(displayModel,action){var saveModel=this.formatMediaPostData(displayModel,action);saveModel.key=displayModel.key;var genericTab=_.find(displayModel.tabs,function(item){return item.id===0;});var propLogin=_.find(genericTab.properties,function(item){return item.alias==='_umb_login';});var propEmail=_.find(genericTab.properties,function(item){return item.alias==='_umb_email';});var propPass=_.find(genericTab.properties,function(item){return item.alias==='_umb_password';});var propGroups=_.find(genericTab.properties,function(item){return item.alias==='_umb_membergroup';});saveModel.email=propEmail.value.trim();saveModel.username=propLogin.value.trim();saveModel.password=this.formatChangePasswordModel(propPass.value);var selectedGroups=[];for(var n in propGroups.value){if(propGroups.value[n]===true){selectedGroups.push(n);}}
saveModel.memberGroups=selectedGroups;return saveModel;},formatMediaPostData:function formatMediaPostData(displayModel,action){var saveModel={id:displayModel.id,properties:getContentProperties(displayModel.tabs),name:displayModel.name,contentTypeAlias:displayModel.contentTypeAlias,parentId:displayModel.parentId,action:action};return saveModel;},formatContentPostData:function formatContentPostData(displayModel,action){var saveModel={id:displayModel.id,name:displayModel.name,contentTypeAlias:displayModel.contentTypeAlias,parentId:displayModel.parentId,action:action,variants:_.map(displayModel.variants,function(v){return{name:v.name||'',properties:getContentProperties(v.tabs),culture:v.language?v.language.culture:null,segment:v.segment,publish:v.publish,save:v.save,releaseDate:v.releaseDate,expireDate:v.expireDate};})};var propExpireDate=displayModel.removeDate;var propReleaseDate=displayModel.releaseDate;var propTemplate=displayModel.template;saveModel.expireDate=propExpireDate?propExpireDate:null;saveModel.releaseDate=propReleaseDate?propReleaseDate:null;saveModel.templateAlias=propTemplate?propTemplate:null;return saveModel;},formatContentGetData:function formatContentGetData(displayModel){if(displayModel.variants&&displayModel.variants.length>1){var defaultVariants=_.filter(displayModel.variants,function(variant){var isDefaultLanguage=variant.language&&variant.language.isDefault;var isDefaultSegment=variant.segment==null;return isDefaultLanguage||isDefaultSegment;});if(defaultVariants.length>0){_.each(defaultVariants,function(defaultVariant){var invariantProps=[];_.each(defaultVariant.tabs,function(tab,tabIndex){_.each(tab.properties,function(property,propIndex){if(!property.culture||!property.segment){invariantProps.push({tabIndex:tabIndex,propIndex:propIndex,property:property});}});});var otherVariants=_.filter(displayModel.variants,function(variant){return variant!==defaultVariant;});_.each(otherVariants,function(variant){_.each(invariantProps,function(invProp){var tab=variant.tabs[invProp.tabIndex];var prop=tab.properties[invProp.propIndex];var inheritsCulture=prop.culture===invProp.property.culture&&prop.segment==null&&invProp.property.segment==null;var inheritsSegment=prop.segment===invProp.property.segment&&!prop.culture;if(inheritsCulture||inheritsSegment){tab.properties[invProp.propIndex]=invProp.property;}});});});}}
return displayModel;},formatRelationTypePostData:function formatRelationTypePostData(relationType){var saveModel={id:relationType.id,name:relationType.name,alias:relationType.alias,key:relationType.key,isBidirectional:relationType.isBidirectional,parentObjectType:relationType.parentObjectType,childObjectType:relationType.childObjectType};return saveModel;}};}
angular.module('umbraco.services').factory('umbDataFormatter',umbDataFormatter);}());'use strict';function _typeof(obj){if(typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj;};}
return _typeof(obj);}
function umbRequestHelper($http,$q,notificationsService,eventsService,formHelper,overlayService){return{convertVirtualToAbsolutePath:function convertVirtualToAbsolutePath(virtualPath){if(virtualPath.startsWith('/')){return virtualPath;}
if(!virtualPath.startsWith('~/')){throw'The path '+virtualPath+' is not a virtual path';}
if(!Umbraco.Sys.ServerVariables.application.applicationPath){throw'No applicationPath defined in Umbraco.ServerVariables.application.applicationPath';}
return Umbraco.Sys.ServerVariables.application.applicationPath+virtualPath.trimStart('~/');},dictionaryToQueryString:function dictionaryToQueryString(queryStrings){if(Utilities.isArray(queryStrings)){return _.map(queryStrings,function(item){var key=null;var val=null;for(var k in item){key=k;val=item[k];break;}
if(key===null||val===null){throw'The object in the array was not formatted as a key/value pair';}
return encodeURIComponent(key)+'='+encodeURIComponent(val);}).join('&');}else if(Utilities.isObject(queryStrings)){return decodeURIComponent($.param(queryStrings));}
throw'The queryString parameter is not an array or object of key value pairs';},getApiUrl:function getApiUrl(apiName,actionName,queryStrings){if(!Umbraco||!Umbraco.Sys||!Umbraco.Sys.ServerVariables||!Umbraco.Sys.ServerVariables['umbracoUrls']){throw'No server variables defined!';}
if(!Umbraco.Sys.ServerVariables['umbracoUrls'][apiName]){throw'No url found for api name '+apiName;}
return Umbraco.Sys.ServerVariables['umbracoUrls'][apiName]+actionName+(!queryStrings?'':'?'+(Utilities.isString(queryStrings)?queryStrings:this.dictionaryToQueryString(queryStrings)));},resourcePromise:function resourcePromise(httpPromise,opts){function defaultSuccess(data,status,headers,config){return data;}
function defaultError(data,status,headers,config){var err={errorMsg:Utilities.isString(opts)?opts:'An error occurred!',data:data,status:status};if(_typeof(opts)=='object'&&typeof opts.then=='function'){err.errorMsg=opts;}
return err;}
var callbacks={success:!opts||!opts.success?defaultSuccess:opts.success,error:!opts||!opts.error?defaultError:opts.error};return httpPromise.then(function(response){var result=callbacks.success.apply(this,[response.data,response.status,response.headers,response.config]);formHelper.showNotifications(response.data);return $q.resolve(result);},function(response){if(!response){return;}
if(!response.status){return $q.reject(response);}
var result=callbacks.error.apply(this,[response.data,response.status,response.headers,response.config]);if(response.status>=500&&response.status<600){if(Umbraco.Sys.ServerVariables['isDebuggingEnabled']===true){var error={errorMsg:'An error occured',data:response.data};overlayService.ysod(error);}else{notificationsService.error('Server error','Contact administrator, see log for full details.<br/><i>'+result.errorMsg+'</i>');}}else{formHelper.showNotifications(result.data);}
return $q.reject({errorMsg:result.errorMsg,data:result.data,status:result.status});});},postSaveContent:function postSaveContent(args){if(!args.restApiUrl){throw'args.restApiUrl is a required argument';}
if(!args.content){throw'args.content is a required argument';}
if(!args.action){throw'args.action is a required argument';}
if(!args.files){throw'args.files is a required argument';}
if(!args.dataFormatter){throw'args.dataFormatter is a required argument';}
if(args.showNotifications===null||args.showNotifications===undefined){args.showNotifications=true;}
var activeTab=_.find(args.content.tabs,function(item){return item.active;});var activeTabIndex=activeTab===undefined?0:_.indexOf(args.content.tabs,activeTab);return this.postMultiPartRequest(args.restApiUrl,{key:'contentItem',value:args.dataFormatter(args.content,args.action)},function(data,formData){for(var f in args.files){var file=args.files[f];var fileKey='file_'+file.alias+'_'+(file.culture?file.culture:'')+'_'+(file.segment?file.segment:'');if(Utilities.isArray(file.metaData)&&file.metaData.length>0){fileKey+='_'+file.metaData.join('_');}
formData.append(fileKey,file.file);}}).then(function(response){if(response.data.tabs&&response.data.tabs.length>0){_.each(response.data.tabs,function(item){item.active=false;});response.data.tabs[activeTabIndex].active=true;}
if(args.showNotifications){formHelper.showNotifications(response.data);}
return $q.resolve(response.data);},function(response){if(!response.status){return $q.reject(response);}
if(response.status>=500&&response.status<600){if(typeof response.data!=='undefined'&&typeof response.data.indexOf==='function'&&response.data.indexOf('Maximum request length exceeded')>=0){notificationsService.error('Server error','The uploaded file was too large, check with your site administrator to adjust the maximum size allowed');}else if(Umbraco.Sys.ServerVariables['isDebuggingEnabled']===true){var error={errorMsg:'An error occured',data:response.data};overlayService.ysod(error);}else{notificationsService.error('Server error','Contact administrator, see log for full details.<br/><i>'+response.data.ExceptionMessage+'</i>');}}else if(args.showNotifications){formHelper.showNotifications(response.data);}
return $q.reject({errorMsg:'An error occurred',data:response.data,status:response.status});});},postMultiPartRequest:function postMultiPartRequest(url,jsonData,transformCallback){if(!jsonData){throw'jsonData cannot be null';}
if(Utilities.isArray(jsonData)){_.each(jsonData,function(item){if(!item.key||!item.value){throw'jsonData array item must have both a key and a value property';}});}else if(!jsonData.key||!jsonData.value){throw'jsonData object must have both a key and a value property';}
return $http({method:'POST',url:url,headers:{'Content-Type':undefined},transformRequest:function transformRequest(data){var formData=new FormData();if(Utilities.isArray(data)){_.each(data,function(item){formData.append(item.key,!Utilities.isString(item.value)?Utilities.toJson(item.value):item.value);});}else{formData.append(data.key,!Utilities.isString(data.value)?Utilities.toJson(data.value):data.value);}
if(transformCallback){transformCallback.apply(this,[data,formData]);}
return formData;},data:jsonData}).then(function(response){return $q.resolve(response);},function(response){return $q.reject(response);});},downloadFile:function downloadFile(httpPath){return $http.get(httpPath,{responseType:'arraybuffer'}).then(function(response){var octetStreamMime='application/octet-stream';var success=false;var headers=response.headers();var filename=headers['x-filename']||'download.bin';filename=decodeURIComponent(filename);var contentType=headers['content-type']||octetStreamMime;try{var blob=new Blob([response.data],{type:contentType});if(navigator.msSaveBlob)
navigator.msSaveBlob(blob,filename);else{var saveBlob=navigator.webkitSaveBlob||navigator.mozSaveBlob||navigator.saveBlob;if(saveBlob===undefined)
throw'Not supported';saveBlob(blob,filename);}
success=true;}catch(ex){console.log('saveBlob method failed with the following exception:');console.log(ex);}
if(!success){var urlCreator=window.URL||window.webkitURL||window.mozURL||window.msURL;if(urlCreator){var link=document.createElement('a');if('download' in link){try{var blob=new Blob([response.data],{type:contentType});var url=urlCreator.createObjectURL(blob);link.setAttribute('href',url);link.setAttribute('download',filename);var event=document.createEvent('MouseEvents');event.initMouseEvent('click',true,true,window,1,0,0,0,0,false,false,false,false,0,null);link.dispatchEvent(event);success=true;}catch(ex){console.log('Download link method with simulated click failed with the following exception:');console.log(ex);}}
if(!success){try{var blob=new Blob([response.data],{type:octetStreamMime});var url=urlCreator.createObjectURL(blob);window.location=url;success=true;}catch(ex){console.log('Download link method with window.location failed with the following exception:');console.log(ex);}}}}
if(!success){window.open(httpPath,'_blank','');}
return $q.resolve();},function(response){return $q.reject({errorMsg:'An error occurred downloading the file',data:response.data,status:response.status});});}};}
angular.module('umbraco.services').factory('umbRequestHelper',umbRequestHelper);'use strict';(function(){'use strict';function urlHelper($window){var pl=/\+/g;var search=/([^&=]+)=?([^&]*)/g;var decode=function decode(s){return decodeURIComponent(s.replace(pl,' '));};function polyFillUrl(url){var parser=document.createElement('a');parser.href=url;return{protocol:parser.protocol,host:parser.host,hostname:parser.hostname,port:parser.port,pathname:parser.pathname,search:parser.search,hash:parser.hash};}
return{parseUrl:function parseUrl(url){var urlObj=$window.URL?new $window.URL(url):polyFillUrl(url);urlObj.searchObject=this.getQueryStringParams(urlObj.search);return urlObj;},parseHashIntoUrl:function parseHashIntoUrl(url){var urlObj=this.parseUrl(url);if(!urlObj.hash){throw new'No hash found in url: '()+url;}
if(!urlObj.hash.startsWith('#/')){throw new'The hash in url does not contain a path to parse: '()+url;}
var fakeUrl='http://fakeurl.com'+urlObj.hash.trimStart('#');var fakeUrlObj=this.parseUrl(fakeUrl);return fakeUrlObj;},getQueryStringParams:function getQueryStringParams(location){var match;var query=location?location.substring(1):$window.location.search.substring(1);var urlParams={};while(match=search.exec(query)){urlParams[decode(match[1])]=decode(match[2]);}
return urlParams;}};}
angular.module('umbraco.services').factory('urlHelper',urlHelper);}());'use strict';angular.module('umbraco.services').factory('userService',function($rootScope,eventsService,$q,$location,requestRetryQueue,authResource,emailMarketingResource,$timeout,angularHelper){var currentUser=null;var lastUserId=null;var lastServerTimeoutSet=null;function openLoginDialog(isTimedOut){var args={isTimedOut:isTimedOut};eventsService.emit('app.notAuthenticated',args);}
function retryRequestQueue(success){if(success){requestRetryQueue.retryAll(currentUser.name);}else{requestRetryQueue.cancelAll();$location.path('/');}}
function setCurrentUser(usr){if(!usr.remainingAuthSeconds){throw'The user object is invalid, the remainingAuthSeconds is required.';}
currentUser=usr;lastServerTimeoutSet=new Date();countdownUserTimeout();}
function countdownUserTimeout(){$timeout(function(){if(currentUser){currentUser.remainingAuthSeconds-=5;if(currentUser.remainingAuthSeconds>30){if(lastServerTimeoutSet!=null){var now=new Date();var seconds=(now.getTime()-lastServerTimeoutSet.getTime())/1000;if(seconds>30){lastServerTimeoutSet=null;angularHelper.safeApply($rootScope,function(){authResource.getRemainingTimeoutSeconds().then(function(result){setUserTimeoutInternal(result);});});}}
countdownUserTimeout();}else{if(Umbraco.Sys.ServerVariables.umbracoSettings.keepUserLoggedIn!==true){angularHelper.safeApply($rootScope,function(){try{authResource.getRemainingTimeoutSeconds();}finally{userAuthExpired();}});}else{if(lastServerTimeoutSet!=null){lastServerTimeoutSet=null;angularHelper.safeApply($rootScope,function(){authResource.getRemainingTimeoutSeconds().then(function(result){setUserTimeoutInternal(result);});});}
countdownUserTimeout();}}}},5000,false);}
function setUserTimeoutInternal(newTimeout){var asNumber=parseFloat(newTimeout);if(!isNaN(asNumber)&&currentUser&&Utilities.isNumber(asNumber)){currentUser.remainingAuthSeconds=newTimeout;lastServerTimeoutSet=new Date();}}
function userAuthExpired(isLogout){if(currentUser&&currentUser.id!==undefined){lastUserId=currentUser.id;}
if(currentUser){currentUser.remainingAuthSeconds=0;}
lastServerTimeoutSet=null;currentUser=null;openLoginDialog(isLogout===undefined?true:!isLogout);}
requestRetryQueue.onItemAddedCallbacks.push(function(retryItem){if(requestRetryQueue.hasMore()){userAuthExpired();}});return{_showLoginDialog:function _showLoginDialog(){openLoginDialog();},_retryRequestQueue:function _retryRequestQueue(success){retryRequestQueue(success);},isAuthenticated:function isAuthenticated(){if(currentUser){var deferred=$q.defer();deferred.resolve(true);return deferred.promise;}
return authResource.isAuthenticated();},authenticate:function authenticate(login,password){return authResource.performLogin(login,password).then(function(data){if(data.startContentIds.length===0&&data.startMediaIds.length===0){var errorMsg='User has no start-nodes';var result={errorMsg:errorMsg,user:data,authenticated:false,lastUserId:lastUserId,loginType:'credentials'};eventsService.emit('app.notAuthenticated',result);throw result;}
return data;}).then(this.setAuthenticationSuccessful);},setAuthenticationSuccessful:function setAuthenticationSuccessful(data){setCurrentUser(data);var result={user:data,authenticated:true,lastUserId:lastUserId,loginType:'credentials'};eventsService.emit('app.authenticated',result);return result;},logout:function logout(){return authResource.performLogout().then(function(data){userAuthExpired();return null;});},refreshCurrentUser:function refreshCurrentUser(){var deferred=$q.defer();authResource.getCurrentUser().then(function(data){var result={user:data,authenticated:true,lastUserId:lastUserId,loginType:'implicit'};setCurrentUser(data);deferred.resolve(currentUser);},function(){deferred.reject();});return deferred.promise;},getCurrentUser:function getCurrentUser(args){if(!currentUser){return authResource.getCurrentUser().then(function(data){var result={user:data,authenticated:true,lastUserId:lastUserId,loginType:'implicit'};if(args&&args.broadcastEvent){eventsService.emit('app.authenticated',result);}
setCurrentUser(data);return $q.when(currentUser);},function(){return $q.reject(currentUser);});}else{return $q.when(currentUser);}},setUserTimeout:function setUserTimeout(newTimeout){setUserTimeoutInternal(newTimeout);},addUserToEmailMarketing:function addUserToEmailMarketing(user){return emailMarketingResource.postAddUserToEmailMarketing(user);}};});'use strict';(function(){'use strict';function usersHelperService(localizationService){var userStates=[{'name':'All','key':'All'},{'value':0,'name':'Active','key':'Active','color':'success'},{'value':1,'name':'Disabled','key':'Disabled','color':'danger'},{'value':2,'name':'Locked out','key':'LockedOut','color':'danger'},{'value':3,'name':'Invited','key':'Invited','color':'warning'},{'value':4,'name':'Inactive','key':'Inactive','color':'warning'}];localizationService.localizeMany(_.map(userStates,function(userState){return'user_state'+userState.key;})).then(function(data){var reg=/^\[[\S\s]*]$/g;_.each(data,function(value,index){if(!reg.test(value)){userStates[index].name=value;}});});function getUserStateFromValue(value){var foundUserState;angular.forEach(userStates,function(userState){if(userState.value===value){foundUserState=userState;}});return foundUserState;}
function getUserStateByKey(key){var foundUserState;angular.forEach(userStates,function(userState){if(userState.key===key){foundUserState=userState;}});return foundUserState;}
function getUserStatesFilter(userStatesObject){var userStatesFilter=[];for(var key in userStatesObject){if(userStatesObject.hasOwnProperty(key)){var userState=getUserStateByKey(key);if(userState){userState.count=userStatesObject[key];userStatesFilter.push(userState);}}}
return userStatesFilter;}
var service={getUserStateFromValue:getUserStateFromValue,getUserStateByKey:getUserStateByKey,getUserStatesFilter:getUserStatesFilter};return service;}
angular.module('umbraco.services').factory('usersHelper',usersHelperService);}());'use strict';function versionHelper(){return{versionCompare:function versionCompare(v1,v2,options){var lexicographical=options&&options.lexicographical,zeroExtend=options&&options.zeroExtend,v1parts=v1.split('.'),v2parts=v2.split('.');function isValidPart(x){return(lexicographical?/^\d+[A-Za-z]*$/:/^\d+$/).test(x);}
if(!v1parts.every(isValidPart)||!v2parts.every(isValidPart)){return NaN;}
if(zeroExtend){while(v1parts.length<v2parts.length){v1parts.push('0');}
while(v2parts.length<v1parts.length){v2parts.push('0');}}
if(!lexicographical){v1parts=v1parts.map(Number);v2parts=v2parts.map(Number);}
for(var i=0;i<v1parts.length;++i){if(v2parts.length===i){return 1;}
if(v1parts[i]===v2parts[i]){continue;}else if(v1parts[i]>v2parts[i]){return 1;}else{return-1;}}
if(v1parts.length!==v2parts.length){return-1;}
return 0;}};}
angular.module('umbraco.services').factory('versionHelper',versionHelper);function dateHelper(){return{convertToServerStringTime:function convertToServerStringTime(momentLocal,serverOffsetMinutes,format){var formattedOffset=(serverOffsetMinutes>0?'+':'-')+moment().startOf('day').minutes(Math.abs(serverOffsetMinutes)).format('HH:mm');var server=moment.utc(momentLocal).utcOffset(formattedOffset);return server.format(format?format:'YYYY-MM-DD HH:mm:ss');},convertToLocalMomentTime:function convertToLocalMomentTime(strVal,serverOffsetMinutes){var formattedOffset=(serverOffsetMinutes>0?'+':'-')+moment().startOf('day').minutes(Math.abs(serverOffsetMinutes)).format('HH:mm');var isoFormat;if(strVal.indexOf('T')>-1&&strVal.endsWith('Z')){isoFormat=moment.utc(strVal).format('YYYY-MM-DDTHH:mm:ss')+formattedOffset;}else{isoFormat=moment(strVal).format('YYYY-MM-DDTHH:mm:ss')+formattedOffset;}
return moment.parseZone(isoFormat).local();},getLocalDate:function getLocalDate(date,culture,format){if(date){var dateVal;var serverOffset=Umbraco.Sys.ServerVariables.application.serverTimeOffset;var localOffset=new Date().getTimezoneOffset();var serverTimeNeedsOffsetting=-serverOffset!==localOffset;if(serverTimeNeedsOffsetting){dateVal=this.convertToLocalMomentTime(date,serverOffset);}else{dateVal=moment(date,'YYYY-MM-DD HH:mm:ss');}
return dateVal.locale(culture).format(format);}}};}
angular.module('umbraco.services').factory('dateHelper',dateHelper);function packageHelper(assetsService,treeService,eventsService,$templateCache){return{packageInstalled:function packageInstalled(){treeService.clearCache();$templateCache.removeAll();eventsService.emit('app.reInitialize');}};}
angular.module('umbraco.services').factory('packageHelper',packageHelper);function umbModelMapper(){return{convertToEntityBasic:function convertToEntityBasic(source){var required=['id','name','icon','parentId','path'];_.each(required,function(k){if(!_.has(source,k)){throw'The source object does not contain the property '+k;}});var optional=['metaData','key','alias'];var result=_.pick(source,required.concat(optional));return result;}};}
angular.module('umbraco.services').factory('umbModelMapper',umbModelMapper);function umbSessionStorage($window){var storage=$window['sessionStorage']?$window['sessionStorage']:{};return{get:function get(key){return Utilities.fromJson(storage['umb_'+key]);},set:function set(key,value){storage['umb_'+key]=Utilities.toJson(value);}};}
angular.module('umbraco.services').factory('umbSessionStorage',umbSessionStorage);function updateChecker($http,umbRequestHelper){return{check:function check(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl('updateCheckApiBaseUrl','GetCheck')),'Failed to retrieve update status');}};}
angular.module('umbraco.services').factory('updateChecker',updateChecker);function umbPropEditorHelper(){return{getViewPath:function getViewPath(input,isPreValue){var path=String(input);if(path.startsWith('/')){return path;}else{if(path.indexOf('/')>=0){return path;}else{if(!isPreValue){return'views/propertyeditors/'+path+'/'+path+'.html';}else{return'views/prevalueeditors/'+path+'.html';}}}}};}
angular.module('umbraco.services').factory('umbPropEditorHelper',umbPropEditorHelper);'use strict';(function(){'use strict';function validationMessageService($q,localizationService){function getMandatoryMessage(validation){if(!validation){return $q.when('');}
if(validation.mandatoryMessage){return $q.when(validation.mandatoryMessage);}else{return localizationService.localize('general_required').then(function(value){return $q.when(value);});}}
var service={getMandatoryMessage:getMandatoryMessage};return service;}
angular.module('umbraco.services').factory('validationMessageService',validationMessageService);}());'use strict';function windowResizeListener($rootScope){var WinReszier=function(){var registered=[];var inited=false;var resize=_.debounce(function(ev){notify();},100);var notify=function notify(){var h=$(window).height();var w=$(window).width();$rootScope.$apply(function(){for(var i=0,cnt=registered.length;i<cnt;i++){registered[i].apply($(window),[{width:w,height:h}]);}});};return{register:function register(fn){registered.push(fn);if(inited===false){$(window).on('resize',resize);inited=true;}},unregister:function unregister(fn){var index=registered.indexOf(fn);if(index>-1){registered.splice(index,1);}}};}();return{register:function register(cb){WinReszier.register(cb);},unregister:function unregister(cb){WinReszier.unregister(cb);}};}
angular.module('umbraco.services').factory('windowResizeListener',windowResizeListener);'use strict';function xmlhelper($http){function X2JS(){var VERSION='1.0.11';var escapeMode=false;var DOMNodeTypes={ELEMENT_NODE:1,TEXT_NODE:3,CDATA_SECTION_NODE:4,DOCUMENT_NODE:9};function getNodeLocalName(node){var nodeLocalName=node.localName;if(nodeLocalName==null){nodeLocalName=node.baseName;}
if(nodeLocalName===null||nodeLocalName===''){nodeLocalName=node.nodeName;}
return nodeLocalName;}
function getNodePrefix(node){return node.prefix;}
function escapeXmlChars(str){if(typeof str==='string'){return str.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/"/g,'&quot;').replace(/'/g,'&#x27;').replace(/\//g,'&#x2F;');}else{return str;}}
function unescapeXmlChars(str){return str.replace(/&amp;/g,'&').replace(/&lt;/g,'<').replace(/&gt;/g,'>').replace(/&quot;/g,'"').replace(/&#x27;/g,'\'').replace(/&#x2F;/g,'/');}
function parseDOMChildren(node){var result,child,childName;if(node.nodeType===DOMNodeTypes.DOCUMENT_NODE){result={};child=node.firstChild;childName=getNodeLocalName(child);result[childName]=parseDOMChildren(child);return result;}else{if(node.nodeType===DOMNodeTypes.ELEMENT_NODE){result={};result.__cnt=0;var nodeChildren=node.childNodes;for(var cidx=0;cidx<nodeChildren.length;cidx++){child=nodeChildren.item(cidx);childName=getNodeLocalName(child);result.__cnt++;if(result[childName]===null){result[childName]=parseDOMChildren(child);result[childName+'_asArray']=new Array(1);result[childName+'_asArray'][0]=result[childName];}else{if(result[childName]!==null){if(!(result[childName]instanceof Array)){var tmpObj=result[childName];result[childName]=[];result[childName][0]=tmpObj;result[childName+'_asArray']=result[childName];}}
var aridx=0;while(result[childName][aridx]!==null){aridx++;}
result[childName][aridx]=parseDOMChildren(child);}}
for(var aidx=0;aidx<node.attributes.length;aidx++){var attr=node.attributes.item(aidx);result.__cnt++;result['_'+attr.name]=attr.value;}
var nodePrefix=getNodePrefix(node);if(nodePrefix!==null&&nodePrefix!==''){result.__cnt++;result.__prefix=nodePrefix;}
if(result.__cnt===1&&result['#text']!==null){result=result['#text'];}
if(result['#text']!==null){result.__text=result['#text'];if(escapeMode){result.__text=unescapeXmlChars(result.__text);}
delete result['#text'];delete result['#text_asArray'];}
if(result['#cdata-section']!=null){result.__cdata=result['#cdata-section'];delete result['#cdata-section'];delete result['#cdata-section_asArray'];}
if(result.__text!=null||result.__cdata!=null){result.toString=function(){return(this.__text!=null?this.__text:'')+(this.__cdata!=null?this.__cdata:'');};}
return result;}else{if(node.nodeType===DOMNodeTypes.TEXT_NODE||node.nodeType===DOMNodeTypes.CDATA_SECTION_NODE){return node.nodeValue;}}}}
function startTag(jsonObj,element,attrList,closed){var resultStr='<'+(jsonObj!=null&&jsonObj.__prefix!=null?jsonObj.__prefix+':':'')+element;if(attrList!=null){for(var aidx=0;aidx<attrList.length;aidx++){var attrName=attrList[aidx];var attrVal=jsonObj[attrName];resultStr+=' '+attrName.substr(1)+'=\''+attrVal+'\'';}}
if(!closed){resultStr+='>';}else{resultStr+='/>';}
return resultStr;}
function endTag(jsonObj,elementName){return'</'+(jsonObj.__prefix!==null?jsonObj.__prefix+':':'')+elementName+'>';}
function endsWith(str,suffix){return str.indexOf(suffix,str.length-suffix.length)!==-1;}
function jsonXmlSpecialElem(jsonObj,jsonObjField){if(endsWith(jsonObjField.toString(),'_asArray')||jsonObjField.toString().indexOf('_')===0||jsonObj[jsonObjField]instanceof Function){return true;}else{return false;}}
function jsonXmlElemCount(jsonObj){var elementsCnt=0;if(jsonObj instanceof Object){for(var it in jsonObj){if(jsonXmlSpecialElem(jsonObj,it)){continue;}
elementsCnt++;}}
return elementsCnt;}
function parseJSONAttributes(jsonObj){var attrList=[];if(jsonObj instanceof Object){for(var ait in jsonObj){if(ait.toString().indexOf('__')===-1&&ait.toString().indexOf('_')===0){attrList.push(ait);}}}
return attrList;}
function parseJSONTextAttrs(jsonTxtObj){var result='';if(jsonTxtObj.__cdata!=null){result+='<![CDATA['+jsonTxtObj.__cdata+']]>';}
if(jsonTxtObj.__text!=null){if(escapeMode){result+=escapeXmlChars(jsonTxtObj.__text);}else{result+=jsonTxtObj.__text;}}
return result;}
function parseJSONTextObject(jsonTxtObj){var result='';if(jsonTxtObj instanceof Object){result+=parseJSONTextAttrs(jsonTxtObj);}else{if(jsonTxtObj!=null){if(escapeMode){result+=escapeXmlChars(jsonTxtObj);}else{result+=jsonTxtObj;}}}
return result;}
function parseJSONArray(jsonArrRoot,jsonArrObj,attrList){var result='';if(jsonArrRoot.length===0){result+=startTag(jsonArrRoot,jsonArrObj,attrList,true);}else{for(var arIdx=0;arIdx<jsonArrRoot.length;arIdx++){result+=startTag(jsonArrRoot[arIdx],jsonArrObj,parseJSONAttributes(jsonArrRoot[arIdx]),false);result+=parseJSONObject(jsonArrRoot[arIdx]);result+=endTag(jsonArrRoot[arIdx],jsonArrObj);}}
return result;}
function parseJSONObject(jsonObj){var result='';var elementsCnt=jsonXmlElemCount(jsonObj);if(elementsCnt>0){for(var it in jsonObj){if(jsonXmlSpecialElem(jsonObj,it)){continue;}
var subObj=jsonObj[it];var attrList=parseJSONAttributes(subObj);if(subObj===null||subObj===undefined){result+=startTag(subObj,it,attrList,true);}else{if(subObj instanceof Object){if(subObj instanceof Array){result+=parseJSONArray(subObj,it,attrList);}else{var subObjElementsCnt=jsonXmlElemCount(subObj);if(subObjElementsCnt>0||subObj.__text!==null||subObj.__cdata!==null){result+=startTag(subObj,it,attrList,false);result+=parseJSONObject(subObj);result+=endTag(subObj,it);}else{result+=startTag(subObj,it,attrList,true);}}}else{result+=startTag(subObj,it,attrList,false);result+=parseJSONTextObject(subObj);result+=endTag(subObj,it);}}}}
result+=parseJSONTextObject(jsonObj);return result;}
this.parseXmlString=function(xmlDocStr){var xmlDoc;if(window.DOMParser){var parser=new window.DOMParser();xmlDoc=parser.parseFromString(xmlDocStr,'text/xml');}else{if(xmlDocStr.indexOf('<?')===0){xmlDocStr=xmlDocStr.substr(xmlDocStr.indexOf('?>')+2);}
xmlDoc=new ActiveXObject('Microsoft.XMLDOM');xmlDoc.async='false';xmlDoc.loadXML(xmlDocStr);}
return xmlDoc;};this.xml2json=function(xmlDoc){return parseDOMChildren(xmlDoc);};this.xml_str2json=function(xmlDocStr){var xmlDoc=this.parseXmlString(xmlDocStr);return this.xml2json(xmlDoc);};this.json2xml_str=function(jsonObj){return parseJSONObject(jsonObj);};this.json2xml=function(jsonObj){var xmlDocStr=this.json2xml_str(jsonObj);return this.parseXmlString(xmlDocStr);};this.getVersion=function(){return VERSION;};this.escapeMode=function(enabled){escapeMode=enabled;};}
var x2js=new X2JS();return{toJson:function toJson(xml){var json=x2js.xml_str2json(xml);return json;},fromJson:function fromJson(json){var xml=x2js.json2xml_str(json);return xml;}};}
angular.module('umbraco.services').factory('xmlhelper',xmlhelper);'use strict';function _typeof(obj){if(typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj;};}
return _typeof(obj);}
(function(window){var noop=function noop(){};var copy=function copy(src,dst){return angular.copy(src,dst);};var isArray=function isArray(val){return Array.isArray(val)||val instanceof Array;};var equals=function equals(a,b){return angular.equals(a,b);};var extend=function extend(dst,src){return angular.extend(dst,src);};var isFunction=function isFunction(val){return typeof val==='function';};var isUndefined=function isUndefined(val){return typeof val==='undefined';};var isDefined=function isDefined(val){return!isUndefined(val);};var isString=function isString(val){return typeof val==='string';};var isNumber=function isNumber(val){return typeof val==='number';};var isObject=function isObject(val){return val!==null&&_typeof(val)==='object';};var isWindow=function isWindow(obj){return obj&&obj.window===obj;};var isScope=function isScope(obj){return obj&&obj.$evalAsync&&obj.$watch;};var toJsonReplacer=function toJsonReplacer(key,value){var val=value;if(typeof key==='string'&&key.charAt(0)==='$'&&key.charAt(1)==='$'){val=undefined;}else if(isWindow(value)){val='$WINDOW';}else if(value&&window.document===value){val='$DOCUMENT';}else if(isScope(value)){val='$SCOPE';}
return val;};var toJson=function toJson(obj,pretty){if(isUndefined(obj))
return undefined;if(!isNumber(pretty)){pretty=pretty?2:null;}
return JSON.stringify(obj,toJsonReplacer,pretty);};var fromJson=function fromJson(val){if(!isString(val)){return val;}
return JSON.parse(val);};var forEach=function forEach(obj,iterator){if(obj){return obj.forEach(iterator);}
return obj;};var _utilities={noop:noop,copy:copy,isArray:isArray,equals:equals,extend:extend,isFunction:isFunction,isUndefined:isUndefined,isDefined:isDefined,isString:isString,isNumber:isNumber,isObject:isObject,fromJson:fromJson,toJson:toJson,forEach:forEach};if(typeof window.Utilities==='undefined'){window.Utilities=_utilities;}}(window));}());;