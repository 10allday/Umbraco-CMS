app.run(['$rootScope','$route','$location','urlHelper','navigationService','appState','assetsService','eventsService','$cookies','tourService','localStorageService',function($rootScope,$route,$location,urlHelper,navigationService,appState,assetsService,eventsService,$cookies,tourService,localStorageService){$.ajaxSetup({beforeSend:function(xhr){xhr.setRequestHeader("X-UMB-XSRF-TOKEN",$cookies["UMB-XSRF-TOKEN"]);xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");var queryStrings=urlHelper.getQueryStringParams();if(queryStrings.umbDebug==="true"||queryStrings.umbdebug==="true"){xhr.setRequestHeader("X-UMB-DEBUG","true");}}});eventsService.on("app.authenticated",function(evt,data){assetsService._loadInitAssets().then(function(){appReady(data);tourService.registerAllTours().then(function(){tourService.getTourByAlias("umbIntroIntroduction").then(function(introTour){if(introTour&&introTour.disabled!==true&&introTour.completed!==true){tourService.startTour(introTour);localStorageService.set("introTourShown",true);}
else{const introTourShown=localStorageService.get("introTourShown");if(!introTourShown){tourService.getTourByAlias("umbEmailMarketing").then(function(emailMarketingTour){if(emailMarketingTour&&emailMarketingTour.disabled!==true&&emailMarketingTour.completed!==true){const emailMarketingTourShown=localStorageService.get("emailMarketingTourShown");if(!emailMarketingTourShown){tourService.startTour(emailMarketingTour);localStorageService.set("emailMarketingTourShown",true);}}});}}});});});});function appReady(data){appState.setGlobalState("isReady",true);eventsService.emit("app.ready",data);returnToPath=null,returnToSearch=null;}
var currentRouteParams=null;var originalTitle="";$rootScope.$on('$changeTitle',function(event,titlePrefix){if(titlePrefix){$rootScope.locationTitle=titlePrefix+" - "+originalTitle;}else{$rootScope.locationTitle=originalTitle;}});$rootScope.$on('$routeChangeSuccess',function(event,current,previous){var toRetain=currentRouteParams?navigationService.retainQueryStrings(currentRouteParams,current.params):null;if(toRetain){$route.updateParams(toRetain);currentRouteParams=toRetain;}
else{currentRouteParams=Utilities.copy(current.params);}
var deployConfig=Umbraco.Sys.ServerVariables.deploy;var deployEnv,deployEnvTitle;if(deployConfig){deployEnv=Umbraco.Sys.ServerVariables.deploy.CurrentWorkspace;deployEnvTitle="("+deployEnv+") ";}
if(current.params.section){var currentSection=current.params.section.charAt(0).toUpperCase()+current.params.section.slice(1);var baseTitle=currentSection+" - "+$location.$$host;if(deployEnv){$rootScope.locationTitle=deployEnvTitle+baseTitle;}
else{$rootScope.locationTitle=baseTitle;}}
else{if(deployEnv){$rootScope.locationTitle=deployEnvTitle+"Umbraco - "+$location.$$host;}
$rootScope.locationTitle="Umbraco - "+$location.$$host;}
originalTitle=$rootScope.locationTitle;});$rootScope.$on('$routeChangeError',function(event,current,previous,rejection){if(rejection.path){event.preventDefault();var returnPath=null;if(rejection.path=="/login"||rejection.path.startsWith("/login/")){returnPath=encodeURIComponent($location.url());}
$location.path(rejection.path)
if(returnPath){$location.search("returnPath",returnPath);}}});$rootScope.$on('$routeUpdate',function(event,next){if(!currentRouteParams){$route.reload();}
else{var toRetain=navigationService.retainQueryStrings(currentRouteParams,next.params);if(toRetain){$route.updateParams(toRetain);}
if(navigationService.isRouteChangingNavigation(currentRouteParams,next.params)){$route.reload();}
else{if(toRetain){currentRouteParams=toRetain;}
else{currentRouteParams=Utilities.copy(next.params);}
if(currentRouteParams.sr){currentRouteParams.sr=null;$route.updateParams(currentRouteParams);}}}});var touchDevice=/android|webos|iphone|ipad|ipod|blackberry|iemobile|touch/i.test(navigator.userAgent.toLowerCase());appState.setGlobalState("touchDevice",touchDevice);}]);;