app.config(function($routeProvider){var canRoute=function(authRequired){return{isAuthenticatedAndReady:function($q,userService,$route,assetsService,appState){if(!$route.current.params.section&&($route.current.params.check===false||$route.current.params.check==="false")){return $q.when(true);}
return userService.isAuthenticated().then(function(){return assetsService._loadInitAssets().then(function(){var broadcast=appState.getGlobalState("isReady")!==true;return userService.getCurrentUser({broadcastEvent:broadcast}).then(function(user){if(authRequired){if($route.current.params.section.toLowerCase()==="default"||$route.current.params.section.toLowerCase()==="umbraco"||$route.current.params.section===""){$route.current.params.section="content";}
var found=_.find(user.allowedSections,function(s){return s.localeCompare($route.current.params.section,undefined,{sensitivity:'accent'})===0;})
if(found){return $q.when(true);}else{return $q.reject({path:"/"+user.allowedSections[0]});}}
else{return $q.when(true);}});});},function(){if(authRequired){return $q.reject({path:"/login/false"});}
else{return $q.when(true);}});}};};var doLogout=function(){return{isLoggedOut:function($q,$location,userService){return userService.logout().then(function(){$location.path("/login/false");return $q.when(true);},function(){return $q.reject({path:"/login/false"});});}}}
$routeProvider.when("/",{redirectTo:'/content'}).when('/login',{templateUrl:'views/common/login.html',resolve:canRoute(false)}).when('/login/:check',{templateUrl:'views/common/login.html',resolve:canRoute(false)}).when('/logout',{resolve:doLogout()}).when('/:section?',{template:"<div ng-include='templateUrl'></div>",controller:function($scope,$route,$routeParams,$location,sectionService){sectionService.getSectionsForUser().then(function(sections){var found=_.find(sections,function(s){return s.alias.localeCompare($routeParams.section,undefined,{sensitivity:'accent'})===0;})
if(found&&found.routePath){$location.path(found.routePath);}
else{$routeParams.url="dashboard.aspx?app="+$routeParams.section;$scope.templateUrl='views/common/dashboard.html';}});},reloadOnSearch:false,resolve:canRoute(true)}).when('/:section/framed/:url',{templateUrl:function(rp){if(!rp.url)
throw"A framed resource must have a url route parameter";return'views/common/legacy.html';},reloadOnSearch:false,resolve:canRoute(true)}).when('/:section/:tree/:method?',{template:"<div ng-include='templateUrl'></div>",controller:function($scope,$routeParams,navigationService){if(!$routeParams.method){$scope.templateUrl="views/common/dashboard.html";return;}
var packagePages=["edit","options"];if($routeParams.section.toLowerCase()==="packages"&&$routeParams.tree.toLowerCase()==="packages"&&packagePages.indexOf($routeParams.method.toLowerCase())===-1){$scope.templateUrl="views/packages/overview.html";return;}
var usersPages=["user","group"];if($routeParams.section.toLowerCase()==="users"&&$routeParams.tree.toLowerCase()==="users"&&usersPages.indexOf($routeParams.method.toLowerCase())===-1){$scope.templateUrl="views/users/overview.html";return;}
$scope.templateUrl=navigationService.getTreeTemplateUrl($routeParams.tree,$routeParams.method);},reloadOnSearch:false,resolve:canRoute(true)}).when('/:section/:tree/:method?/:id',{template:"<div ng-include='templateUrl'></div>",controller:function($scope,$routeParams,navigationService){if(!$routeParams.tree||!$routeParams.method){$scope.templateUrl="views/common/dashboard.html";return;}
$scope.templateUrl=navigationService.getTreeTemplateUrl($routeParams.tree,$routeParams.method);},reloadOnSearch:false,reloadOnUrl:false,resolve:canRoute(true)}).otherwise({redirectTo:'/login'});}).config(function($locationProvider){$locationProvider.html5Mode(false);$locationProvider.hashPrefix('');});;