(function(){'use strict';angular.module('umbraco.directives',['umbraco.directives.editors','umbraco.directives.html','umbraco.directives.validation','ui.sortable']);angular.module('umbraco.directives.editors',[]);angular.module('umbraco.directives.html',[]);angular.module('umbraco.directives.validation',[]);'use strict';angular.module('umbraco.directives').directive('navResize',function(appState,eventsService,windowResizeListener){return{restrict:'A',link:function link(scope,element,attrs,ctrl){var minScreenSize=1100;var resizeEnabled=false;function setTreeMode(){appState.setGlobalState('showNavigation',appState.getGlobalState('isTablet')===false);}
function enableResize(){if(!resizeEnabled&&appState.getGlobalState('isTablet')===false){element.resizable({containment:$('#mainwrapper'),autoHide:true,handles:'e',alsoResize:'.navigation-inner-container',resize:function resize(e,ui){var wrapper=$('#mainwrapper');var contentPanel=$('#contentwrapper');var umbNotification=$('#umb-notifications-wrapper');var bottomBar=contentPanel.find('.umb-bottom-bar');var navOffeset=$('#navOffset');var leftPanelWidth=ui.element.width();contentPanel.css({left:leftPanelWidth});bottomBar.css({left:leftPanelWidth});umbNotification.css({left:leftPanelWidth});navOffeset.css({'margin-left':ui.element.outerWidth()});},stop:function stop(e,ui){}});resizeEnabled=true;}}
function resetResize(){if(resizeEnabled){element.resizable('destroy');element.css('width','');var navInnerContainer=element.find('.navigation-inner-container');navInnerContainer.css('width','');$('#contentwrapper').css('left','');$('#umb-notifications-wrapper').css('left','');$('#navOffset').css('margin-left','');resizeEnabled=false;}}
var evts=[];evts.push(eventsService.on('appState.globalState.changed',function(e,args){if(args.key==='showNavigation'){if(args.value===false){resetResize();}else{enableResize();}}}));var resizeCallback=function resizeCallback(size){appState.setGlobalState('isTablet',size.width<=minScreenSize);setTreeMode();};windowResizeListener.register(resizeCallback);scope.$on('$destroy',function(){windowResizeListener.unregister(resizeCallback);for(var e in evts){eventsService.unsubscribe(evts[e]);}
var navInnerContainer=element.find('.navigation-inner-container');navInnerContainer.resizable('destroy');});appState.setGlobalState('isTablet',$(window).width()<=minScreenSize);setTreeMode();}};});'use strict';(function(){'use strict';function AppHeaderDirective(eventsService,appState,userService,focusService,backdropService){function link(scope,el,attr,ctrl){var evts=[];scope.authenticated=null;scope.user=null;scope.avatar=[{value:'assets/img/application/logo.png'},{value:'assets/img/application/logo@2x.png'},{value:'assets/img/application/logo@3x.png'}];evts.push(eventsService.on('app.notAuthenticated',function(){scope.authenticated=false;scope.user=null;}));evts.push(eventsService.on('app.ready',function(evt,data){scope.authenticated=true;scope.user=data.user;if(scope.user.avatars){scope.avatar=[];if(Utilities.isArray(scope.user.avatars)){for(var i=0;i<scope.user.avatars.length;i++){scope.avatar.push({value:scope.user.avatars[i]});}}}}));evts.push(eventsService.on('app.userRefresh',function(evt){userService.refreshCurrentUser().then(function(data){scope.user=data;if(scope.user.avatars){scope.avatar=[];if(Utilities.isArray(scope.user.avatars)){for(var i=0;i<scope.user.avatars.length;i++){scope.avatar.push({value:scope.user.avatars[i]});}}}});}));scope.rememberFocus=focusService.rememberFocus;scope.searchClick=function(){var showSearch=appState.getSearchState('show');appState.setSearchState('show',!showSearch);};scope.helpClick=function(){var showDrawer=appState.getDrawerState('showDrawer');var drawer={view:'help',show:!showDrawer};appState.setDrawerState('view',drawer.view);appState.setDrawerState('showDrawer',drawer.show);};scope.avatarClick=function(){if(!scope.userDialog){backdropService.open();scope.userDialog={view:'user',show:true,close:function close(oldModel){scope.userDialog.show=false;scope.userDialog=null;backdropService.close();}};}else{scope.userDialog.show=false;scope.userDialog=null;}};}
var directive={transclude:true,restrict:'E',replace:true,template:' <div> <div class="umb-app-header"> <umb-sections ng-if="authenticated" sections="sections"> </umb-sections> <div class="flex items-center"> <ul class="umb-app-header__actions"> <li data-element="global-search" class="umb-app-header__action"> <button type="button" class="umb-app-header__button btn-reset" hotkey="ctrl+space" ng-click="searchClick()" ng-mousedown="rememberFocus()"> <span class="sr-only"> <localize key="visuallyHiddenTexts_openBackofficeSearch">Open backoffice search</localize>... </span> <i class="umb-app-header__action-icon icon-search" aria-hidden="true"></i> </button> </li> <li data-element="global-help" class="umb-app-header__action"> <button type="button" class="umb-app-header__button btn-reset" hotkey="ctrl+shift+h" ng-click="helpClick()"> <span class="sr-only"> <localize key="visuallyHiddenTexts_openCloseBackofficeHelp">Open/Close backoffice help</localize>... </span> <i class="umb-app-header__action-icon icon-help-alt" aria-hidden="true"></i> </button> </li> <li data-element="global-user" class="umb-app-header__action"> <button type="button" class="umb-app-header__button btn-reset" ng-click="avatarClick()" hotkey="ctrl+shift+u" title="{{user.name}}"> <span class="sr-only"> <localize key="visuallyHiddenTexts_openCloseBackofficeProfileOptions">Open/Close your profile options</localize>... </span> <umb-avatar class="umb-app-header__action-icon" size="xxs" color="secondary" name="{{user.name}}" img-src="{{avatar[0].value}}" img-srcset="{{avatar[1].value}} 2x, {{avatar[2].value}} 3x"> </umb-avatar> </button> </li> </ul> </div> </div> <umb-overlay data-element="overlay-user" ng-if="userDialog.show" model="userDialog" view="userDialog.view" position="right"> </umb-overlay> </div> ',link:link,scope:{}};return directive;}
angular.module('umbraco.directives').directive('umbAppHeader',AppHeaderDirective);}());'use strict';(function(){'use strict';function BackdropDirective($timeout,$http){function link(scope,el,attr,ctrl){var events=[];scope.clickBackdrop=function(event){if(scope.disableEventsOnClick===true){event.preventDefault();event.stopPropagation();}};function onInit(){if(scope.highlightElement){setHighlight();}}
function setHighlight(){scope.loading=true;$timeout(function(){var highlightElement=$(scope.highlightElement);if(highlightElement&&highlightElement.length>0){var offset=highlightElement.offset();var width=highlightElement.outerWidth();var height=highlightElement.outerHeight();var topDistance=offset.top.toFixed();var topAndHeight=(offset.top+height).toFixed();var leftDistance=offset.left.toFixed();var leftAndWidth=(offset.left+width).toFixed();var rectTop=el.find('.umb-backdrop__rect--top');var rectRight=el.find('.umb-backdrop__rect--right');var rectBottom=el.find('.umb-backdrop__rect--bottom');var rectLeft=el.find('.umb-backdrop__rect--left');scope.rectTopCss={'height':topDistance,'left':leftDistance+'px',opacity:scope.backdropOpacity};scope.rectRightCss={'left':leftAndWidth+'px','top':topDistance+'px','height':height,opacity:scope.backdropOpacity};scope.rectBottomCss={'height':'100%','top':topAndHeight+'px','left':leftDistance+'px',opacity:scope.backdropOpacity};scope.rectLeftCss={'width':leftDistance,opacity:scope.backdropOpacity};if(scope.highlightPreventClick){var preventClickElement=el.find('.umb-backdrop__highlight-prevent-click');preventClickElement.css({'width':width,'height':height,'left':offset.left,'top':offset.top});}}
scope.loading=false;});}
function resize(){setHighlight();}
events.push(scope.$watch('highlightElement',function(newValue,oldValue){if(!newValue){return;}
if(newValue===oldValue){return;}
setHighlight();}));$(window).on('resize.umbBackdrop',resize);scope.$on('$destroy',function(){for(var e in events){events[e]();}
$(window).off('resize.umbBackdrop');});onInit();}
var directive={transclude:true,restrict:'E',replace:true,template:'<div class="umb-backdrop" ng-click="clickBackdrop($event)">  <div ng-if="highlightElement && !loading" class="umb-backdrop__backdrop"> <div class="umb-backdrop__rect umb-backdrop__rect--top" ng-style="rectTopCss"></div> <div class="umb-backdrop__rect umb-backdrop__rect--right" ng-style="rectRightCss"></div> <div class="umb-backdrop__rect umb-backdrop__rect--bottom" ng-style="rectBottomCss"></div> <div class="umb-backdrop__rect umb-backdrop__rect--left" ng-style="rectLeftCss"></div> </div>  <div ng-if="!highlightElement || loading" class="umb-backdrop__backdrop"> <div class="umb-backdrop__rect" ng-style="{\'opacity\': backdropOpacity }"></div> </div>  <div ng-if="highlightPreventClick" class="umb-backdrop__highlight-prevent-click"></div> </div>',link:link,scope:{backdropOpacity:'=?',highlightElement:'=?',highlightPreventClick:'=?',disableEventsOnClick:'=?'}};return directive;}
angular.module('umbraco.directives').directive('umbBackdrop',BackdropDirective);}());'use strict';angular.module('umbraco.directives').directive('umbContextMenu',function(navigationService,keyboardService,backdropService){return{scope:{menuDialogTitle:'@',currentSection:'@',currentNode:'=',menuActions:'='},restrict:'E',replace:true,template:'<div on-outside-click="outSideClick()"> <div class="umb-modalcolumn-header"> <h1>{{menuDialogTitle}}</h1> </div> <div class="umb-modalcolumn-body"> <ul class="umb-actions"> <li data-element="action-{{action.alias}}" class="umb-action" ng-class="{sep:action.separator, \'-opens-dialog\': action.opensDialog}" ng-repeat="action in menuActions"> <button type="button" umb-auto-focus="{{$index === 0}}" ng-click="executeMenuItem(action)" class="umb-action-link btn-reset umb-outline" prevent-default> <i class="icon icon-{{action.cssclass}}" aria-hidden="true"></i> <span class="menu-label">{{action.name}}</span> </button> </li> </ul> </div> </div> ',link:function link(scope,element,attrs,ctrl){scope.executeMenuItem=function(action){navigationService.executeMenuAction(action,scope.currentNode,scope.currentSection);};scope.outSideClick=function(){navigationService.hideNavigation();};keyboardService.bind('esc',function(){navigationService.hideNavigation();});scope.$on('$destroy',function(){keyboardService.unbind('esc');});}};});'use strict';function Drawer($location,$routeParams,helpService,userService,localizationService,dashboardResource){return{restrict:'E',replace:true,template:'<div class="umb-drawer"> <div style="height: 100%;" ng-if="configuredView" ng-include="configuredView"></div> </div>',transclude:true,scope:{view:'=?',model:'=?'},link:function link(scope,element,attr,ctrl){function onInit(){setView();}
function setView(){if(scope.view){var configuredView=scope.view;if(scope.view.indexOf('.html')===-1){var viewAlias=scope.view.toLowerCase();configuredView='views/common/drawers/'+viewAlias+'/'+viewAlias+'.html';}
if(configuredView!==scope.configuredView){scope.configuredView=configuredView;}}}
onInit();}};}
angular.module('umbraco.directives').directive('umbDrawer',Drawer);'use strict';(function(){'use strict';function DrawerContentDirective(){var directive={restrict:'E',replace:true,transclude:true,template:'<div class="umb-drawer-content" ng-transclude></div>'};return directive;}
angular.module('umbraco.directives').directive('umbDrawerContent',DrawerContentDirective);}());'use strict';(function(){'use strict';function DrawerFooterDirective(){var directive={restrict:'E',replace:true,transclude:true,template:'<div class="umb-drawer-footer" ng-transclude></div>'};return directive;}
angular.module('umbraco.directives').directive('umbDrawerFooter',DrawerFooterDirective);}());'use strict';(function(){'use strict';function DrawerHeaderDirective(){var directive={restrict:'E',replace:true,template:'<div class="umb-drawer-header"> <div class="umb-drawer-header__title">{{ title }}</div> <div class="umb-drawer-header__subtitle">{{ description }}</div> </div>',scope:{'title':'@?','description':'@?'}};return directive;}
angular.module('umbraco.directives').directive('umbDrawerHeader',DrawerHeaderDirective);}());'use strict';(function(){'use strict';function DrawerViewDirective(){var directive={restrict:'E',replace:true,transclude:true,template:'<div class="umb-drawer-view" ng-transclude></div>'};return directive;}
angular.module('umbraco.directives').directive('umbDrawerView',DrawerViewDirective);}());'use strict';(function(){'use strict';angular.module('umbraco.directives').component('umbLogin',{template:'<div class="login-overlay"> <div id="login" class="umb-modalcolumn umb-dialog" ng-class="{\'show-validation\': vm.loginForm.$invalid}" ng-cloak> <div class="login-overlay__background-image" ng-style="{\'background-image\': \'url(\'+vm.backgroundImage+\')\'}"></div> <div class="login-overlay__logo"> <img src="assets/img/application/umbraco_logo_white.svg"> </div> <div ng-show="vm.invitedUser != null" class="umb-login-container"> <form name="inviteUserPasswordForm" novalidate ng-submit="vm.inviteSavePassword()" val-form-manager> <div class="form" ng-if="vm.inviteStep === 1"> <h1 style="margin-bottom: 10px; text-align: left;">Hi, {{vm.invitedUser.name}}</h1> <p style="line-height: 1.6; margin-bottom: 25px;"> <localize key="user_userinviteWelcomeMessage">Welcome to Umbraco! Just need to get your password and avatar setup and then you\'re good to go</localize> </p> <div class="control-group" ng-class="{error: vm.setPasswordForm.password.$invalid}"> <label for="umb-passwordOne"> <localize key="user_newPassword">New password</localize> <small style="font-size: 13px;">{{vm.invitedUserPasswordModel.passwordPolicyText}}</small> </label> <input type="password" ng-model="vm.invitedUserPasswordModel.password" name="password" id="umb-passwordOne" class="-full-width-input" umb-auto-focus required val-server-field="value" ng-minlength="{{vm.invitedUserPasswordModel.passwordPolicies.minPasswordLength}}"> <span ng-messages="inviteUserPasswordForm.password.$error" show-validation-on-submit> <span class="help-inline" ng-message="required"><localize key="user_passwordIsBlank">Your new password cannot be blank!</localize></span> <span class="help-inline" ng-message="minlength">Minimum {{vm.invitedUserPasswordModel.passwordPolicies.minPasswordLength}} characters</span> <span class="help-inline" ng-message="valServerField">{{inviteUserPasswordForm.password.errorMsg}}</span> </span> </div> <div class="control-group" ng-class="{error: vm.setPasswordForm.confirmPassword.$invalid}"> <label for="umb-confirmPasswordOne"><localize key="user_confirmNewPassword">Confirm new password</localize></label> <input type="password" ng-model="vm.invitedUserPasswordModel.confirmPassword" name="confirmPassword" id="umb-confirmPasswordOne" class="-full-width-input" required val-compare="password"> <span ng-messages="inviteUserPasswordForm.confirmPassword.$error" show-validation-on-submit> <span class="help-inline" ng-message="required"><localize key="general_required">Required</localize></span> <span class="help-inline" ng-message="valCompare"><localize key="user_passwordMismatch">The confirmed password doesn\'t match the new password!</localize></span> </span> </div> <div class="flex justify-between items-center"> <umb-button type="submit" button-style="success" state="vm.invitedUserPasswordModel.buttonState" label="Save password"> </umb-button> </div> </div> </form> <div class="form" ng-if="vm.inviteStep === 2"> <div class="flex justify-center items-center"> <ng-form name="vm.avatarForm"> <umb-progress-bar style="max-width: 100px; margin-bottom: 5px;" ng-show="vm.avatarFile.uploadStatus === \'uploading\'" progress="{{ vm.avatarFile.uploadProgress }}" size="s"> </umb-progress-bar> <div class="umb-info-local-item text-error mt3" ng-if="vm.avatarFile.uploadStatus === \'error\'"> {{ vm.avatarFile.serverErrorMessage }} </div> <a class="umb-avatar-btn" ngf-select ng-model="vm.avatarFile.filesHolder" ngf-change="vm.changeAvatar($files, $event)" ngf-multiple="false" ngf-pattern="{{vm.avatarFile.acceptedFileTypes}}" ngf-max-size="{{ vm.avatarFile.maxFileSize }}"> <umb-avatar color="gray" size="xl" unknown-char="+" img-src="{{vm.invitedUser.avatars[3]}}" img-srcset="{{vm.invitedUser.avatars[4]}} 2x, {{invitedUser.avatars[4]}} 3x"> </umb-avatar> </a> </ng-form> </div> <h1 style="margin-bottom: 10px;">Upload a photo</h1> <p style="text-align: center; margin-bottom: 25px; line-height: 1.6em;"> <localize key="user_userinviteAvatarMessage"></localize> </p> <div class="flex justify-center items-center"> <umb-button type="button" button-style="success" label="Done" action="vm.getStarted()"> </umb-button> </div> </div> </div> <div ng-show="vm.invitedUser == null && vm.inviteStep === 3" ng-if="vm.inviteStep === 3" class="umb-login-container"> <div class="form"> <h1 style="margin-bottom: 10px; text-align: left;">Hi there</h1> <p style="line-height: 1.6; margin-bottom: 25px;"> <localize key="user_userinviteExpiredMessage">Welcome to Umbraco! Unfortunately your invite has expired. Please contact your administrator and ask them to resend it.</localize> </p> </div> </div> <div ng-show="vm.invitedUser == null && !vm.inviteStep" class="umb-login-container"> <div class="form"> <h1>{{greeting}}</h1> <div ng-show="vm.view == \'login\'"> <p> <span ng-show="vm.isTimedOut"><localize key="login_timeout">Log in below</localize>.</span> </p> <div class="external-logins" ng-if="vm.externalLoginProviders.length > 0"> <div class="text-error" ng-repeat="error in vm.externalLoginInfo.errors"> <span>{{error}}</span> </div> <form method="POST" name="vm.externalLoginForm" action="{{vm.externalLoginFormAction}}"> <div ng-repeat="login in vm.externalLoginProviders"> <button type="submit" class="btn btn-block btn-social" ng-class="login.properties.SocialStyle" id="{{login.authType}}" name="provider" value="{{login.authType}}" title="Log in using your {{login.caption}} account"> <i class="fa" ng-class="login.properties.SocialIcon"></i> <localize key="login_signInWith">Sign in with</localize>&nbsp;{{login.caption}} </button> </div> </form> </div> <form method="POST" name="vm.loginForm" ng-submit="vm.loginSubmit()"> <div ng-messages="vm.loginForm.$error" class="control-group" aria-live="assertive"> <p ng-message="auth" class="text-error" role="alert" tabindex="0">{{vm.errorMsg}}</p> </div> <div class="control-group" ng-class="{error: vm.loginForm.username.$invalid}"> <label for="umb-username">{{vm.labels.usernameLabel}}</label> <input type="text" ng-model="vm.login" name="username" id="umb-username" class="-full-width-input" placeholder="{{vm.labels.usernamePlaceholder}}" focus-when="{{vm.view === \'login\'}}" aria-required="true"> </div> <div class="control-group" ng-class="{error: vm.loginForm.password.$invalid}"> <label for="umb-passwordTwo"><localize key="general_password">Password</localize></label> <input type="password" ng-model="vm.password" name="password" id="umb-passwordTwo" class="-full-width-input" localize="placeholder" placeholder="@placeholders_password" aria-required="true"> <div class="password-toggle"> <a href="#" prevent-default ng-click="vm.togglePassword()"> <span class="password-text show"><localize key="login_showPassword">Show password</localize></span> <span class="password-text hide"><localize key="login_hidePassword">Hide password</localize></span> </a> </div> </div> <div class="flex justify-between items-center"> <umb-button button-style="success" size="m" label-key="general_login" state="vm.loginStates.submitButton" type="submit"> </umb-button> <div ng-show="vm.allowPasswordReset"> <a class="muted" style="text-decoration: underline;" href="#" prevent-default ng-click="vm.showRequestPasswordReset()"><localize key="login_forgottenPassword">Forgotten password?</localize></a> </div> </div> </form> </div> <div ng-show="vm.view == \'request-password-reset\'"> <p tabindex="0"> <localize key="login_forgottenPasswordInstruction">An email will be sent to the address specified with a link to reset your password</localize> </p> <form method="POST" name="vm.requestPasswordResetForm" ng-submit="vm.requestPasswordResetSubmit(email)"> <div class="control-group" ng-class="{error: vm.requestPasswordResetForm.email.$invalid}"> <label for="umb-email"><localize key="general_email">Email</localize></label> <input type="email" val-email ng-model="email" name="email" id="umb-email" class="-full-width-input" localize="placeholder" placeholder="@placeholders_email" focus-when="{{vm.view === \'request-password-reset\'}}"> </div> <div ng-messages="vm.requestPasswordResetForm.$error" class="control-group" ng-show="vm.requestPasswordResetForm.$invalid"> <p ng-message="auth" class="text-error" role="alert" tabindex="0">{{vm.errorMsg}}</p> </div> <div class="control-group" ng-show="vm.showEmailResetConfirmation"> <div class="text-info" role="alert"> <p tabindex="0"> <localize key="login_requestPasswordResetConfirmation">An email with password reset instructions will be sent to the specified address if it matched our records</localize> </p> </div> </div> <div class="flex justify-between items-center"> <button type="submit" class="btn btn-success" val-trigger-change="#login .form input"><localize key="general_submit">Submit</localize></button> <a class="muted" href="#" prevent-default ng-click="vm.showLogin()" style="text-decoration: underline;"><localize key="login_returnToLogin">Return to login form</localize></a> </div> </form> </div> <div ng-show="vm.view == \'set-password\'"> <p ng-hide="vm.resetComplete"> <localize key="login_setPasswordInstruction">Please provide a new password.</localize> </p> <form method="POST" name="vm.setPasswordForm" ng-submit="vm.setPasswordSubmit(vm.password, vm.confirmPassword)"> <div ng-hide="vm.resetComplete" class="control-group" ng-class="{error: vm.setPasswordForm.password.$invalid}"> <label for="umb-passwordThree"><localize key="user_newPassword">New password</localize></label> <input type="password" ng-model="vm.password" name="password" id="umb-passwordThree" class="-full-width-input" localize="placeholder" placeholder="@placeholders_password" focus-when="{{vm.view === \'set-password\'}}"> </div> <div ng-hide="vm.resetComplete" class="control-group" ng-class="{error: vm.setPasswordForm.confirmPassword.$invalid}"> <label for="umb-confirmPasswordThree"><localize key="user_confirmNewPassword">Confirm new password</localize></label> <input type="password" ng-model="vm.confirmPassword" name="confirmPassword" id="umb-confirmPasswordThree" class="-full-width-input" localize="placeholder" placeholder="@placeholders_confirmPassword"> </div> <div ng-messages="vm.setPasswordForm.$error" class="control-group" ng-show="vm.setPasswordForm.$invalid"> <p ng-message="auth" class="text-error" role="alert" tabindex="0">{{vm.errorMsg}}</p> </div> <div class="control-group" ng-show="vm.showSetPasswordConfirmation"> <div class="text-info"> <p tabindex="0"> <localize key="login_setPasswordConfirmation">Your new password has been set and you may now use it to log in.</localize> </p> </div> </div> <div class="flex justify-between items-center"> <button ng-hide="vm.resetComplete" type="submit" class="btn btn-success" val-trigger-change="#login .form input"><localize key="general_submit">Submit</localize></button> <a class="muted" href="#" prevent-default ng-click="vm.showLogin()"><localize key="login_returnToLogin">Return to login form</localize></a> </div> </form> </div> <div ng-show="vm.view == \'password-reset-code-expired\'"> <div class="text-error" ng-repeat="error in vm.resetPasswordCodeInfo.errors"> <p class="text-error">{{error}}</p> </div> <div class="switch-view"> <a class="muted" href="#" prevent-default ng-click="vm.showLogin()"><localize key="login_returnToLogin">Return to login form</localize></a> </div> </div> <div ng-show="vm.view == \'2fa-login\'"> <div ng-include="vm.twoFactor.view"></div> </div> </div> </div> </div> </div> ',controller:UmbLoginController,controllerAs:'vm',bindings:{isTimedOut:'<',onLogin:'&'}});function UmbLoginController($scope,$location,currentUserResource,formHelper,mediaHelper,umbRequestHelper,Upload,localizationService,userService,externalLoginInfo,resetPasswordCodeInfo,$timeout,authResource,$q,$route){var vm=this;vm.invitedUser=null;vm.invitedUserPasswordModel={password:'',confirmPassword:'',buttonState:'',passwordPolicies:null,passwordPolicyText:''};vm.loginStates={submitButton:'init'};vm.avatarFile={filesHolder:null,uploadStatus:null,uploadProgress:0,maxFileSize:Umbraco.Sys.ServerVariables.umbracoSettings.maxFileSize+'KB',acceptedFileTypes:mediaHelper.formatFileTypes(Umbraco.Sys.ServerVariables.umbracoSettings.imageFileTypes),uploaded:false};vm.allowPasswordReset=Umbraco.Sys.ServerVariables.umbracoSettings.canSendRequiredEmail&&Umbraco.Sys.ServerVariables.umbracoSettings.allowPasswordReset;vm.errorMsg='';vm.externalLoginFormAction=Umbraco.Sys.ServerVariables.umbracoUrls.externalLoginsUrl;vm.externalLoginProviders=externalLoginInfo.providers;vm.externalLoginInfo=externalLoginInfo;vm.resetPasswordCodeInfo=resetPasswordCodeInfo;vm.backgroundImage=Umbraco.Sys.ServerVariables.umbracoSettings.loginBackgroundImage;vm.usernameIsEmail=Umbraco.Sys.ServerVariables.umbracoSettings.usernameIsEmail;vm.$onInit=onInit;vm.togglePassword=togglePassword;vm.changeAvatar=changeAvatar;vm.getStarted=getStarted;vm.inviteSavePassword=inviteSavePassword;vm.showLogin=showLogin;vm.showRequestPasswordReset=showRequestPasswordReset;vm.showSetPassword=showSetPassword;vm.loginSubmit=loginSubmit;vm.requestPasswordResetSubmit=requestPasswordResetSubmit;vm.setPasswordSubmit=setPasswordSubmit;vm.labels={};localizationService.localizeMany([vm.usernameIsEmail?'general_email':'general_username',vm.usernameIsEmail?'placeholders_email':'placeholders_usernameHint',vm.usernameIsEmail?'placeholders_emptyEmail':'placeholders_emptyUsername','placeholders_emptyPassword']).then(function(data){vm.labels.usernameLabel=data[0];vm.labels.usernamePlaceholder=data[1];vm.labels.usernameError=data[2];vm.labels.passwordError=data[3];});vm.twoFactor={};function onInit(){var inviteVal=$location.search().invite;if(inviteVal&&(inviteVal==='1'||inviteVal==='2')){$q.all([authResource.getCurrentInvitedUser().then(function(data){vm.invitedUser=data;},function(){$location.search('invite',null);}),authResource.getPasswordConfig(0).then(function(data){vm.invitedUserPasswordModel.passwordPolicies=data;localizationService.localize('errorHandling_errorInPasswordFormat',[vm.invitedUserPasswordModel.passwordPolicies.minPasswordLength,vm.invitedUserPasswordModel.passwordPolicies.minNonAlphaNumericChars]).then(function(data){vm.invitedUserPasswordModel.passwordPolicyText=data;});})]).then(function(){vm.inviteStep=Number(inviteVal);});}else if(inviteVal&&inviteVal==='3'){vm.inviteStep=Number(inviteVal);}
setGreeting();if(vm.resetPasswordCodeInfo.resetCodeModel){vm.showSetPassword();}else if(vm.resetPasswordCodeInfo.errors.length>0){vm.view='password-reset-code-expired';}else{vm.showLogin();}
SetTitle();}
function togglePassword(){var elem=$('form[name=\'vm.loginForm\'] input[name=\'password\']');elem.attr('type',elem.attr('type')==='text'?'password':'text');elem.focus();$('.password-text.show, .password-text.hide').toggle();}
function changeAvatar(files,event){if(files&&files.length>0){upload(files[0]);}}
function getStarted(){$location.search('invite',null);if(vm.onLogin){vm.onLogin();}}
function inviteSavePassword(){if(formHelper.submitForm({scope:$scope})){vm.invitedUserPasswordModel.buttonState='busy';currentUserResource.performSetInvitedUserPassword(vm.invitedUserPasswordModel.password).then(function(data){formHelper.resetForm({scope:$scope});vm.invitedUserPasswordModel.buttonState='success';vm.invitedUser=data;userService.setAuthenticationSuccessful(data);vm.inviteStep=2;},function(err){formHelper.handleError(err);vm.invitedUserPasswordModel.buttonState='error';});}}
function showLogin(){vm.errorMsg='';resetInputValidation();vm.view='login';SetTitle();}
function showRequestPasswordReset(){vm.errorMsg='';resetInputValidation();vm.view='request-password-reset';vm.showEmailResetConfirmation=false;SetTitle();}
function showSetPassword(){vm.errorMsg='';resetInputValidation();vm.view='set-password';SetTitle();}
function loginSubmit(){if(formHelper.submitForm({scope:$scope})){if(vm.login&&vm.password&&vm.login.length>0&&vm.password.length>0){vm.loginForm.username.$setValidity('auth',true);vm.loginForm.password.$setValidity('auth',true);}
if(vm.loginForm.$invalid){SetTitle();return;}
vm.view='login';vm.loginStates.submitButton='busy';userService.authenticate(vm.login,vm.password).then(function(data){vm.loginStates.submitButton='success';userService._retryRequestQueue(true);if(vm.onLogin){vm.onLogin();}},function(reason){if(reason.status===402){vm.errorMsg='Additional authentication required';show2FALoginDialog(reason.data.twoFactorView);}else{vm.loginStates.submitButton='error';vm.errorMsg=reason.errorMsg;vm.loginForm.username.$setValidity('auth',false);vm.loginForm.password.$setValidity('auth',false);}
userService._retryRequestQueue();});vm.loginForm.username.$viewChangeListeners.push(function(){if(vm.loginForm.$invalid){vm.loginForm.username.$setValidity('auth',true);vm.loginForm.password.$setValidity('auth',true);}});vm.loginForm.password.$viewChangeListeners.push(function(){if(vm.loginForm.$invalid){vm.loginForm.username.$setValidity('auth',true);vm.loginForm.password.$setValidity('auth',true);}});}}
function requestPasswordResetSubmit(email){if(email&&email.length>0){vm.requestPasswordResetForm.email.$setValidity('auth',true);}
vm.showEmailResetConfirmation=false;if(vm.requestPasswordResetForm.$invalid){vm.errorMsg='Email address cannot be empty';return;}
vm.errorMsg='';authResource.performRequestPasswordReset(email).then(function(){vm.email='';vm.showEmailResetConfirmation=true;},function(reason){vm.errorMsg=reason.errorMsg;vm.requestPasswordResetForm.email.$setValidity('auth',false);});vm.requestPasswordResetForm.email.$viewChangeListeners.push(function(){if(vm.requestPasswordResetForm.email.$invalid){vm.requestPasswordResetForm.email.$setValidity('auth',true);}});}
function setPasswordSubmit(password,confirmPassword){vm.showSetPasswordConfirmation=false;if(password&&confirmPassword&&password.length>0&&confirmPassword.length>0){vm.setPasswordForm.password.$setValidity('auth',true);vm.setPasswordForm.confirmPassword.$setValidity('auth',true);}
if(vm.setPasswordForm.$invalid){return;}
authResource.performSetPassword(vm.resetPasswordCodeInfo.resetCodeModel.userId,password,confirmPassword,vm.resetPasswordCodeInfo.resetCodeModel.resetCode).then(function(){vm.showSetPasswordConfirmation=true;vm.resetComplete=true;resetPasswordCodeInfo.resetCodeModel=null;},function(reason){if(reason.data&&reason.data.Message){vm.errorMsg=reason.data.Message;}else{vm.errorMsg=reason.errorMsg;}
vm.setPasswordForm.password.$setValidity('auth',false);vm.setPasswordForm.confirmPassword.$setValidity('auth',false);});vm.setPasswordForm.password.$viewChangeListeners.push(function(){if(vm.setPasswordForm.password.$invalid){vm.setPasswordForm.password.$setValidity('auth',true);}});vm.setPasswordForm.confirmPassword.$viewChangeListeners.push(function(){if(vm.setPasswordForm.confirmPassword.$invalid){vm.setPasswordForm.confirmPassword.$setValidity('auth',true);}});}
function setGreeting(){var date=new Date();localizationService.localize('login_greeting'+date.getDay()).then(function(label){$scope.greeting=label;});}
function upload(file){vm.avatarFile.uploadProgress=0;Upload.upload({url:umbRequestHelper.getApiUrl('currentUserApiBaseUrl','PostSetAvatar'),fields:{},file:file}).progress(function(evt){if(vm.avatarFile.uploadStatus!=='done'&&vm.avatarFile.uploadStatus!=='error'){vm.avatarFile.uploadStatus='uploading';var progressPercentage=parseInt(100*evt.loaded/evt.total,10);vm.avatarFile.uploadProgress=progressPercentage;}}).success(function(data,status,headers,config){vm.avatarFile.uploadProgress=100;vm.avatarFile.uploadStatus='done';vm.invitedUser.avatars=data;vm.avatarFile.uploaded=true;}).error(function(evt,status,headers,config){vm.avatarFile.uploadStatus='error';if(status===404){vm.avatarFile.serverErrorMessage='File not found';}else if(status==400){vm.avatarFile.serverErrorMessage=evt.message;}else{if(evt.InnerException){vm.avatarFile.serverErrorMessage=evt.InnerException.ExceptionMessage;if(evt.InnerException.StackTrace&&evt.InnerException.StackTrace.indexOf('ValidateRequestEntityLength')>0){vm.avatarFile.serverErrorMessage='File too large to upload';}}else if(evt.Message){vm.avatarFile.serverErrorMessage=evt.Message;}}});}
function show2FALoginDialog(viewPath){vm.twoFactor.submitCallback=function submitCallback(){vm.onLogin();};vm.twoFactor.view=viewPath;vm.view='2fa-login';SetTitle();}
function resetInputValidation(){vm.confirmPassword='';vm.password='';vm.login='';if(vm.loginForm){vm.loginForm.username.$setValidity('auth',true);vm.loginForm.password.$setValidity('auth',true);}
if(vm.requestPasswordResetForm){vm.requestPasswordResetForm.email.$setValidity('auth',true);}
if(vm.setPasswordForm){vm.setPasswordForm.password.$setValidity('auth',true);vm.setPasswordForm.confirmPassword.$setValidity('auth',true);}}
function SetTitle(){var title=null;switch(vm.view.toLowerCase()){case'login':title='Login';break;case'password-reset-code-expired':case'request-password-reset':title='Password Reset';break;case'set-password':title='Change Password';break;case'2fa-login':title='Two Factor Authentication';break;}
$scope.$emit('$changeTitle',title);}}}());'use strict';function umbNavigationDirective(){return{restrict:'E',replace:true,template:'<div id="leftcolumn" ng-controller="Umbraco.NavigationController" ng-mouseleave="leaveTree($event)" ng-mouseenter="enterTree($event)" on-outside-click="onOutsideClick()">  <div id="navigation" ng-show="showNavigation" class="fill umb-modalcolumn" ng-animate="\'slide\'" nav-resize ng-class="{\'--notInFront\': infiniteMode}"> <div class="navigation-inner-container"> <div class="umb-language-picker" ng-if="currentSection === \'content\' && languages.length > 1" deep-blur="page.languageSelectorIsOpen = false" on-outside-click="page.languageSelectorIsOpen = false"> <button type="button" class="umb-language-picker__toggle" ng-click="toggleLanguageSelector()" aria-haspopup="true" aria-expanded="{{page.languageSelectorIsOpen}}"> <span> <span class="sr-only"> <localize key="visuallyHiddenTexts_currentLanguage">Current language</localize> <span>: </span> </span> <span>{{selectedLanguage.name}}</span> </span> <i class="umb-language-picker__expand" ng-class="{\'icon-navigation-down\': !page.languageSelectorIsOpen, \'icon-navigation-up\': page.languageSelectorIsOpen}" aria-hidden="true"></i> </button> <div class="umb-language-picker__dropdown" ng-if="page.languageSelectorIsOpen"> <button type="button" class="umb-language-picker__dropdown-item" ng-class="{\'umb-language-picker__dropdown-item--current\': language.active}" ng-click="selectLanguage(language)" ng-repeat="language in languages"> <span class="sr-only"> <localize key="visuallyHiddenTexts_switchLanguage">Switch language to</localize> <span>: </span> </span> <span>{{language.name}}</span> </button> </div> </div>  <div id="tree" ng-show="authenticated"> <umb-tree api="treeApi" on-init="onTreeInit()"> </umb-tree> </div> </div> <div class="offset6" id="navOffset" style="z-index: 10">  <div id="contextMenu" class="umb-modalcolumn fill shadow" ng-if="showContextMenu" ng-animate="\'slide\'"> <umb-context-menu menu-dialog-title="{{menuDialogTitle}}" current-section="{{currentSection}}" current-node="menuNode" menu-actions="menuActions"> </umb-context-menu> </div> <umb-context-dialog ng-if="showContextMenuDialog" dialog-title="menuDialogTitle" current-node="menuNode" view="dialogTemplateUrl"> </umb-context-dialog> </div> <div class="umb-editor__overlay"></div> </div> </div> '};}
angular.module('umbraco.directives').directive('umbNavigation',umbNavigationDirective);'use strict';(function(){'use strict';var umbSearch={template:' <div class="umb-search" on-outside-click="vm.closeSearch()" ng-keydown="vm.handleKeyDown($event)"> <div class="flex items-center"> <label for="app-search" class="umb-search__label"> <i class="umb-search-input-icon icon-search" aria-hidden="true"></i> <span class="sr-only"> <localize key="general_search">Search...</localize> </span> </label> <input class="umb-search-input" type="text" ng-model="vm.searchQuery" ng-model-options="{ debounce: 200 }" ng-change="vm.search(vm.searchQuery)" localize="placeholder" placeholder="@placeholders_search" id="app-search" focus-when="{{vm.searchHasFocus}}"> <button ng-show="vm.searchQuery.length > 0" tabindex="-1" class="umb-search-input-clear umb-animated" ng-click="vm.clearSearch()"> <localize key="general_clear">Clear</localize> </button> </div> <div class="umb-search-results"> <div class="umb-search-group" ng-repeat="(key, group) in vm.searchResults"> <div class="umb-search-group__title">{{key}}</div> <ul class="umb-search-items"> <li class="umb-search-item" ng-repeat="result in group.results" active-result="{{result === vm.activeResult}}"> <a class="umb-search-result__link" ng-href="#/{{result.editorPath}}" ng-click="vm.clickItem(result)"> <i class="umb-search-result__icon {{result.icon}}"></i> <span class="umb-search-result__meta"> <span class="umb-search-result__name">{{result.name}}</span> <span class="umb-search-result__description" ng-show="result.subTitle">{{result.subTitle}}</span> </span> </a> </li> </ul> </div> </div> </div> ',controllerAs:'vm',controller:umbSearchController,bindings:{onClose:'&'}};function umbSearchController($timeout,backdropService,searchService,focusService){var vm=this;vm.$onInit=onInit;vm.$onDestroy=onDestroy;vm.search=search;vm.clickItem=clickItem;vm.clearSearch=clearSearch;vm.handleKeyDown=handleKeyDown;vm.closeSearch=closeSearch;vm.focusSearch=focusSearch;vm.focusBeforeOpening=focusService.getLastKnownFocus();vm.activeResult=null;vm.activeResultGroup=null;function onInit(){vm.searchQuery='';vm.searchResults=[];vm.hasResults=false;focusSearch();backdropService.open();}
function onDestroy(){backdropService.close();}
function clickItem(){closeSearch();}
function clearSearch(){vm.searchQuery='';vm.searchResults=[];vm.hasResults=false;focusSearch();}
function focusSearch(){vm.searchHasFocus=false;$timeout(function(){vm.searchHasFocus=true;});}
function handleKeyDown(event){if(event.keyCode===27){event.stopPropagation();event.preventDefault();closeSearch();return;}
if(vm.hasResults&&(event.keyCode===38||event.keyCode===40)){event.stopPropagation();event.preventDefault();var allGroups=_.values(vm.searchResults);var down=event.keyCode===40;if(vm.activeResultGroup===null){vm.activeResultGroup=down?_.first(allGroups):_.last(allGroups);vm.activeResult=down?_.first(vm.activeResultGroup.results):_.last(vm.activeResultGroup.results);}else if(down){if(vm.activeResult===_.last(vm.activeResultGroup.results)){if(vm.activeResultGroup===_.last(allGroups)){vm.activeResultGroup=_.first(allGroups);}else{vm.activeResultGroup=allGroups[allGroups.indexOf(vm.activeResultGroup)+1];}
vm.activeResult=_.first(vm.activeResultGroup.results);}else{vm.activeResult=vm.activeResultGroup.results[vm.activeResultGroup.results.indexOf(vm.activeResult)+1];}}else{if(vm.activeResult===_.first(vm.activeResultGroup.results)){if(vm.activeResultGroup===_.first(allGroups)){vm.activeResultGroup=_.last(allGroups);}else{vm.activeResultGroup=allGroups[allGroups.indexOf(vm.activeResultGroup)-1];}
vm.activeResult=_.last(vm.activeResultGroup.results);}else{vm.activeResult=vm.activeResultGroup.results[vm.activeResultGroup.results.indexOf(vm.activeResult)-1];}}
$timeout(function(){var resultElementLink=$('.umb-search-item[active-result=\'true\'] .umb-search-result__link');resultElementLink[0].focus();});}}
function closeSearch(){if(vm.focusBeforeOpening){vm.focusBeforeOpening.focus();}
if(vm.onClose){vm.onClose();}}
function search(searchQuery){if(searchQuery.length>0){var search={'term':searchQuery};searchService.searchAll(search).then(function(result){var filtered={};_.each(result,function(value,key){if(value.results.length>0){filtered[key]=value;}});vm.searchResults=filtered;vm.hasResults=Object.keys(vm.searchResults).length>0;});}else{clearSearch();}}}
angular.module('umbraco.directives').component('umbSearch',umbSearch);}());'use strict';function sectionsDirective($timeout,$window,navigationService,treeService,sectionService,appState,eventsService,$location,historyService){return{restrict:'E',replace:true,template:'<div> <div id="applications" ng-class="{faded:stickyNavigation}"> <ul class="sections" data-element="sections"> <li data-element="section-{{section.alias}}" ng-repeat="section in sections | limitTo: visibleSections" ng-class="{current: section.alias == currentSection}"> <a href="#/{{section.alias}}" ng-dblclick="sectionDblClick(section)" ng-click="sectionClick($event, section)" prevent-default ng-attr-aria-current="{{section.alias == currentSection ? \'page\' : undefined}}" aria-label="{{section.name + (section.alias == currentSection ? \' (active)\' : \'\')}}"> <span class="section__name">{{section.name}}</span> </a> </li> <li data-element="section-expand" class="expand" ng-class="{ \'open\': showTray === true, current: currentSectionInOverflow() }" ng-show="visibleSections < sections.length"> <a href="#" ng-click="trayClick()" prevent-default aria-label="More sections"> <span class="section__name">&bull;&bull;&bull;</span> </a> <ul id="applications-tray" class="sections-tray shadow-depth-2" ng-if="showTray" on-outside-click="trayClick()"> <li ng-repeat="section in sections | limitTo: sections.length | limitTo: -(sections.length - visibleSections)" ng-class="{current: section.alias == currentSection}"> <a href="#/{{section.alias}}" ng-dblclick="sectionDblClick(section)" ng-click="sectionClick($event, section)" prevent-default ng-attr-aria-current="{{section.alias == currentSection ? \'page\' : undefined}}" aria-label="{{section.name + (section.alias == currentSection ? \' (active)\' : \'\')}}"> <span class="section__name">{{section.name}}</span> </a> </li> </ul> </li> </ul> </div> </div> ',link:function link(scope,element,attr,ctrl){var sectionItemsWidth=[];var evts=[];scope.sections=[];scope.visibleSections=0;scope.currentSection=appState.getSectionState('currentSection');scope.showTray=false;scope.stickyNavigation=appState.getGlobalState('stickyNavigation');function loadSections(){sectionService.getSectionsForUser().then(function(result){scope.sections=result;scope.visibleSections=scope.sections.length;$timeout(function(){$('#applications .sections li:not(:last)').each(function(index){sectionItemsWidth.push($(this).outerWidth());});});calculateWidth();});}
function calculateWidth(){$timeout(function(){var containerWidth=$('.umb-app-header').outerWidth()-$('.umb-app-header__actions').outerWidth();var trayToggleWidth=$('#applications .sections li.expand').outerWidth();var sectionsWidth=0;for(var i=0;i<sectionItemsWidth.length;i++){var sectionItemWidth=sectionItemsWidth[i];sectionsWidth+=sectionItemWidth;if(sectionsWidth+trayToggleWidth>containerWidth){scope.visibleSections=i;return;}}
scope.visibleSections=scope.sections.length;});}
evts.push(eventsService.on('appState.globalState.changed',function(e,args){if(args.key==='showTray'){scope.showTray=args.value;}
if(args.key==='stickyNavigation'){scope.stickyNavigation=args.value;}}));evts.push(eventsService.on('appState.sectionState.changed',function(e,args){if(args.key==='currentSection'){scope.currentSection=args.value;}}));evts.push(eventsService.on('app.reInitialize',function(e,args){loadSections();}));scope.$on('$destroy',function(){for(var e in evts){eventsService.unsubscribe(evts[e]);}});window.onresize=calculateWidth;scope.sectionClick=function(event,section){if(event.ctrlKey||event.shiftKey||event.metaKey||event.button&&event.button===1){return;}
navigationService.hideSearch();navigationService.showTree(section.alias);if(section.routePath){$location.path(section.routePath);}else{var lastAccessed=historyService.getLastAccessedItemForSection(section.alias);var path=lastAccessed!=null?lastAccessed.link:section.alias;$location.path(path);}
navigationService.clearSearch();};scope.sectionDblClick=function(section){navigationService.reloadSection(section.alias);};scope.trayClick=function(){if(appState.getGlobalState('showTray')===true){navigationService.hideTray();}else{navigationService.showTray();}};scope.currentSectionInOverflow=function(){var currentSection=scope.sections.filter(function(s){return s.alias===scope.currentSection;});return currentSection.length>0&&scope.sections.indexOf(currentSection[0])>scope.visibleSections-1;};loadSections();}};}
angular.module('umbraco.directives').directive('umbSections',sectionsDirective);'use strict';(function(){'use strict';function TourDirective($timeout,$http,$q,tourService,backdropService){function link(scope,el,attr,ctrl){var popover;var pulseElement;var pulseTimer;scope.loadingStep=false;scope.elementNotFound=false;scope.model.nextStep=function(){nextStep();};scope.model.endTour=function(){unbindEvent();tourService.endTour(scope.model);backdropService.close();};scope.model.completeTour=function(){unbindEvent();tourService.completeTour(scope.model).then(function(){backdropService.close();});};scope.model.disableTour=function(){unbindEvent();tourService.disableTour(scope.model).then(function(){backdropService.close();});};function onInit(){popover=el.find('.umb-tour__popover');pulseElement=el.find('.umb-tour__pulse');popover.hide();scope.model.currentStepIndex=0;backdropService.open({disableEventsOnClick:true});startStep();}
function setView(){if(scope.model.currentStep.view&&scope.model.alias){var configuredView=scope.model.currentStep.view;if(scope.model.currentStep.view.indexOf('.html')===-1){var viewAlias=scope.model.currentStep.view.toLowerCase();var tourAlias=scope.model.alias.toLowerCase();configuredView='views/common/tours/'+tourAlias+'/'+viewAlias+'/'+viewAlias+'.html';}
if(configuredView!==scope.configuredView){scope.configuredView=configuredView;}}else{scope.configuredView=null;}}
function nextStep(){popover.hide();pulseElement.hide();$timeout.cancel(pulseTimer);scope.model.currentStepIndex++;if(scope.model.currentStepIndex!==scope.model.steps.length){var upcomingStep=scope.model.steps[scope.model.currentStepIndex];if(upcomingStep.skipStepIfVisible){var tryFindDomEl=document.querySelector(upcomingStep.skipStepIfVisible);if(tryFindDomEl){if(tryFindDomEl.offsetWidth||tryFindDomEl.offsetHeight||tryFindDomEl.getClientRects().length){nextStep();return;}}}
startStep();}else{scope.loadingStep=true;waitForPendingRerequests().then(function(){scope.loadingStep=false;scope.model.currentStep={};setPopoverPosition(null);backdropService.setHighlight(null);backdropService.setOpacity(null);});}}
function startStep(){scope.loadingStep=true;backdropService.setOpacity(scope.model.steps[scope.model.currentStepIndex].backdropOpacity);backdropService.setHighlight(null);waitForPendingRerequests().then(function(){scope.model.currentStep=scope.model.steps[scope.model.currentStepIndex];setView();findHighlightElement();if(scope.model.currentStep.event){bindEvent();}
scope.loadingStep=false;});}
function findHighlightElement(){scope.elementNotFound=false;$timeout(function(){if(scope.model.currentStep&&scope.model.currentStep.type==='intro'){scope.model.currentStep.element=null;scope.model.currentStep.eventElement=null;scope.model.currentStep.event=null;}
if(scope.model.currentStep&&!scope.model.currentStep.element){setPopoverPosition(null);return;}
var element=$(scope.model.currentStep.element);if(element.length===0){scope.elementNotFound=true;setPopoverPosition(null);return;}
var scrollParent=element.scrollParent();var el=element;var offsetTop=0;if(scrollParent[0]===document){offsetTop=el[0].offsetTop;}else{while($.contains(scrollParent[0],el[0])){offsetTop+=el[0].offsetTop;el=el.offsetParent();}}
var scrollToCenterOfContainer=offsetTop-scrollParent[0].clientHeight/2;if(element[0].clientHeight<scrollParent[0].clientHeight){scrollToCenterOfContainer+=element[0].clientHeight/2;}
if(offsetTop>scrollParent[0].clientHeight-200){scrollParent.animate({scrollTop:scrollToCenterOfContainer},function(){setPopoverPosition(element);setPulsePosition();backdropService.setHighlight(scope.model.currentStep.element,scope.model.currentStep.elementPreventClick);});}else{setPopoverPosition(element);setPulsePosition();backdropService.setHighlight(scope.model.currentStep.element,scope.model.currentStep.elementPreventClick);}});}
function setPopoverPosition(element){$timeout(function(){var position='center';var margin=20;var css={};var popoverWidth=popover.outerWidth();var popoverHeight=popover.outerHeight();var popoverOffset=popover.offset();var documentWidth=$(document).width();var documentHeight=$(document).height();if(element){var offset=element.offset();var width=element.outerWidth();var height=element.outerHeight();var space={'top':offset.top,'right':documentWidth-(offset.left+width),'bottom':documentHeight-(offset.top+height),'left':offset.left};position=findMax(space);if(position==='top'){if(offset.left<documentWidth/2){css.top=offset.top-popoverHeight-margin;css.left=offset.left;}else{css.top=offset.top-popoverHeight-margin;css.left=offset.left-popoverWidth+width;}}
if(position==='right'){if(offset.top+popoverHeight<documentHeight){css.top=offset.top;css.left=offset.left+width+margin;}else{css.top=offset.top+height-popoverHeight;css.left=offset.left+width+margin;}}
if(position==='bottom'){if(offset.left<documentWidth/2){css.top=offset.top+height+margin;css.left=offset.left;}else{css.top=offset.top+height+margin;css.left=offset.left-popoverWidth+width;}}
if(position==='left'){if(offset.top+popoverHeight<documentHeight){css.top=offset.top;css.left=offset.left-popoverWidth-margin;}else{css.top=offset.top+height-popoverHeight;css.left=offset.left-popoverWidth-margin;}}}else{css.top='calc(50% - '+popoverHeight/2+'px)';css.left='calc(50% - '+popoverWidth/2+'px)';}
popover.css(css).fadeIn('fast');});}
function setPulsePosition(){if(scope.model.currentStep.event){pulseTimer=$timeout(function(){var clickElementSelector=scope.model.currentStep.eventElement?scope.model.currentStep.eventElement:scope.model.currentStep.element;var clickElement=$(clickElementSelector);var offset=clickElement.offset();var width=clickElement.outerWidth();var height=clickElement.outerHeight();pulseElement.css({'width':width,'height':height,'left':offset.left,'top':offset.top});pulseElement.fadeIn();},1000);}}
function waitForPendingRerequests(){var deferred=$q.defer();var timer=window.setInterval(function(){var requestsReady=false;var animationsDone=false;if($http.pendingRequests.length===0&&document.readyState==='complete'){requestsReady=true;}
if(document.querySelectorAll('.ng-enter, .ng-leave, .umb-editor--animating').length===0){animationsDone=true;}
if(requestsReady&&animationsDone){$timeout(function(){deferred.resolve();clearInterval(timer);});}},50);return deferred.promise;}
function findMax(obj){var keys=Object.keys(obj);var max=keys[0];for(var i=1,n=keys.length;i<n;++i){var k=keys[i];if(obj[k]>obj[max]){max=k;}}
return max;}
function bindEvent(){var bindToElement=scope.model.currentStep.element;var eventName=scope.model.currentStep.event+'.step-'+scope.model.currentStepIndex;var removeEventName='remove.step-'+scope.model.currentStepIndex;var handled=false;if(scope.model.currentStep.eventElement){bindToElement=scope.model.currentStep.eventElement;}
$(bindToElement).on(eventName,function(){if(!handled){unbindEvent();nextStep();handled=true;}});$(bindToElement).on(removeEventName,function(){if(!handled){unbindEvent();nextStep();handled=true;}});}
function unbindEvent(){var eventName=scope.model.currentStep.event+'.step-'+scope.model.currentStepIndex;var removeEventName='remove.step-'+scope.model.currentStepIndex;if(scope.model.currentStep.eventElement){$(scope.model.currentStep.eventElement).off(eventName);$(scope.model.currentStep.eventElement).off(removeEventName);}else{$(scope.model.currentStep.element).off(eventName);$(scope.model.currentStep.element).off(removeEventName);}}
function resize(){findHighlightElement();}
onInit();$(window).on('resize.umbTour',resize);scope.$on('$destroy',function(){$(window).off('resize.umbTour');unbindEvent();$timeout.cancel(pulseTimer);});}
var directive={transclude:true,restrict:'E',replace:true,template:'<div class="umb-tour"> <umb-loader class="umb-tour__loader" ng-if="loadingStep"></umb-loader> <div class="umb-tour__pulse"></div> <div class="umb-tour__popover shadow-depth-2" ng-class="{\'umb-tour__popover--l\': model.currentStep.type === \'intro\' || model.currentStepIndex === model.steps.length, \'umb-tour__popover--promotion\': model.currentStep.type === \'promotion\'}"> <div ng-if="!configuredView && !elementNotFound">  <umb-tour-step ng-if="model.currentStepIndex < model.steps.length" on-close="model.endTour()"> <umb-tour-step-header title="model.currentStep.title"> </umb-tour-step-header> <umb-tour-step-content content="model.currentStep.content"> </umb-tour-step-content> <umb-tour-step-footer> <div class="flex justify-between items-center"> <div> <umb-tour-step-counter current-step="model.currentStepIndex + 1" total-steps="model.steps.length"> </umb-tour-step-counter> <div ng-if="model.allowDisable && model.currentStep.type === \'intro\'"> <button type="button" class="underline" ng-click="model.disableTour()" prevent-default>Don\'t show this tour again</button> </div> </div> <div ng-if="model.currentStep.type !== \'intro\'"> <umb-button size="xs" ng-if="!model.currentStep.event" button-style="action" type="button" action="model.nextStep()" label="Next"></umb-button> </div> <div ng-if="model.currentStep.type === \'intro\'"> <umb-button size="m" button-style="action" type="button" action="model.nextStep()" label="Start tour"></umb-button> </div> </div> </umb-tour-step-footer> </umb-tour-step>  <umb-tour-step ng-if="model.currentStepIndex === model.steps.length" class="tc" hide-close="model.currentStepIndex === model.steps.length"> <umb-tour-step-content> <div class="flex items-center justify-center"> <umb-checkmark size="xl" checked="true"></umb-checkmark> </div> <h3 class="bold">Congratulations!</h3> <p>You have reached the end of the <b>{{model.name}}</b> tour - way to go!</p> </umb-tour-step-content> <umb-tour-step-footer> <umb-button type="button" button-style="action" size="m" action="model.completeTour()" label="Complete"></umb-button> </umb-tour-step-footer> </umb-tour-step> </div>  <div ng-if="configuredView && !loadingStep && !elementNotFound" ng-include="configuredView"></div>  <div ng-if="elementNotFound && !loadingStep"> <umb-tour-step class="tc" on-close="model.endTour()"> <umb-tour-step-header> <h4 class="bold color-red">Oh, we got lost!</h4> </umb-tour-step-header> <umb-tour-step-content> <p>We lost the next step <b>{{ model.currentStep.title }}</b> and don\'t know where to go.</p> <p>Please go back and start the tour again.</p> </umb-tour-step-content> <umb-tour-step-footer> <umb-button size="s" button-style="action" type="button" action="model.endTour()" label="End tour"></umb-button> </umb-tour-step-footer> </umb-tour-step> </div> </div> </div> ',link:link,scope:{model:'='}};return directive;}
angular.module('umbraco.directives').directive('umbTour',TourDirective);}());'use strict';(function(){'use strict';function TourStepDirective(){function link(scope,element,attrs,ctrl){scope.close=function(){if(scope.onClose){scope.onClose();}};}
var directive={restrict:'E',replace:true,transclude:true,template:'<div class="umb-tour-step umb-tour-step--{{size}}"> <div ng-if="hideClose !== true"> <button type="button" class="icon-wrong umb-tour-step__close" hotkey="esc" ng-click="close()"> <span class="sr-only"> <localize key="general_close">Close</localize> </span> </button> </div> <div ng-transclude></div> </div> ',scope:{size:'@?',onClose:'&?',hideClose:'=?'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbTourStep',TourStepDirective);}());'use strict';(function(){'use strict';function TourStepContentDirective(){var directive={restrict:'E',replace:true,transclude:true,template:'<div class="umb-tour-step__content"> <div ng-bind-html="content"></div> <div ng-transclude></div> </div>',scope:{content:'='}};return directive;}
angular.module('umbraco.directives').directive('umbTourStepContent',TourStepContentDirective);}());'use strict';(function(){'use strict';function TourStepCounterDirective(){var directive={restrict:'E',replace:true,template:'<div class="umb-tour-step__counter">{{ currentStep }}/{{ totalSteps }}</div>',scope:{currentStep:'=',totalSteps:'='}};return directive;}
angular.module('umbraco.directives').directive('umbTourStepCounter',TourStepCounterDirective);}());'use strict';(function(){'use strict';function TourStepFooterDirective(){var directive={restrict:'E',replace:true,transclude:true,template:'<div class="umb-tour-step__footer" ng-transclude></div>'};return directive;}
angular.module('umbraco.directives').directive('umbTourStepFooter',TourStepFooterDirective);}());'use strict';(function(){'use strict';function TourStepHeaderDirective(){var directive={restrict:'E',replace:true,transclude:true,template:'<div class="umb-tour-step__header"> <div class="umb-tour-step__title">{{title}}</div> <div ng-transclude></div> </div>',scope:{title:'='}};return directive;}
angular.module('umbraco.directives').directive('umbTourStepHeader',TourStepHeaderDirective);}());'use strict';(function(){'use strict';angular.module('umbraco.directives').component('umbButton',{transclude:true,template:'<div class="umb-button" ng-class="{\'ml0\': vm.generalActions, \'umb-button--block\': vm.blockElement}" data-element="{{ vm.alias ? \'button-\' + vm.alias : \'\' }}"> <div ng-if="vm.innerState"> <div class="icon-check umb-button__success" ng-class="{\'-hidden\': vm.innerState !== \'success\', \'-white\': vm.isPrimaryButtonStyle}"></div> <div class="icon-delete umb-button__error" ng-class="{\'-hidden\': vm.innerState !== \'error\', \'-white\': vm.isPrimaryButtonStyle}"></div> <div class="umb-button__progress" ng-class="{\'-hidden\': vm.innerState !== \'busy\', \'-white\': vm.isPrimaryButtonStyle}"></div> <div ng-if="vm.innerState !== \'init\'" class="umb-button__overlay"></div> </div> <a ng-if="vm.type === \'link\'" ng-href="{{vm.href}}" class="btn umb-button__button {{vm.style}} umb-button--{{vm.size}} umb-outline" ng-click="vm.clickButton($event)" hotkey="{{vm.shortcut}}" hotkey-when-hidden="{{vm.shortcutWhenHidden}}"> <span class="umb-button__content" ng-class="{\'-hidden\': vm.innerState !== \'init\'}"> <i ng-if="vm.icon" class="{{vm.icon}} umb-button__icon" aria-hidden="true"></i> {{vm.buttonLabel}} <span ng-if="vm.showCaret" class="umb-button__caret caret" aria-hidden="true"></span> </span> </a> <button ng-if="vm.type === \'button\'" type="button" class="btn umb-button__button {{vm.style}} umb-button--{{vm.size}} umb-outline" ng-click="vm.clickButton($event)" hotkey="{{vm.shortcut}}" hotkey-when-hidden="{{vm.shortcutWhenHidden}}" ng-disabled="vm.disabled" umb-auto-focus="{{vm.autoFocus && !vm.disabled ? \'true\' : \'false\'}}" aria-haspopup="{{vm.hasPopup}}" aria-expanded="{{vm.isExpanded}}"> <span class="umb-button__content" ng-class="{\'-hidden\': vm.innerState !== \'init\'}"> <i ng-if="vm.icon" class="{{vm.icon}} umb-button__icon" aria-hidden="true"></i> {{vm.buttonLabel}} <span ng-if="vm.showCaret" class="umb-button__caret caret" aria-hidden="true"></span> </span> </button> <button ng-if="vm.type === \'submit\'" type="submit" class="btn umb-button__button {{vm.style}} umb-button--{{vm.size}} umb-outline" hotkey="{{vm.shortcut}}" hotkey-when-hidden="{{vm.shortcutWhenHidden}}" ng-disabled="vm.disabled" umb-auto-focus="{{vm.autoFocus && !vm.disabled ? \'true\' : \'false\'}}"> <span class="umb-button__content" ng-class="{\'-hidden\': vm.innerState !== \'init\'}"> <i ng-if="vm.icon" class="{{vm.icon}} umb-button__icon" aria-hidden="true"></i> {{vm.buttonLabel}} <span ng-if="vm.showCaret" class="umb-button__caret caret" aria-hidden="true"></span> </span> </button> </div> ',controller:UmbButtonController,controllerAs:'vm',bindings:{action:'&?',href:'@?',type:'@',buttonStyle:'@?',state:'<?',shortcut:'@?',shortcutWhenHidden:'@',label:'@?',labelKey:'@?',icon:'@?',disabled:'<?',size:'@?',alias:'@?',addEllipsis:'@?',showCaret:'@?',autoFocus:'<?',hasPopup:'@?',isExpanded:'<?'}});UmbButtonController.$inject=['$timeout','localizationService'];function UmbButtonController($timeout,localizationService){var vm=this;vm.$onInit=onInit;vm.$onChanges=onChanges;vm.clickButton=clickButton;function onInit(){vm.blockElement=false;vm.style=null;vm.innerState='init';vm.generalActions=vm.labelKey==='general_actions';vm.buttonLabel=vm.label;vm.isPrimaryButtonStyle=vm.buttonStyle&&vm.buttonStyle!=='info';if(vm.buttonStyle){if(vm.buttonStyle.startsWith('[')&&vm.buttonStyle.endsWith(']')){var withoutBrackets=vm.buttonStyle.replace(/[\[\]']+/g,'');var array=withoutBrackets.split(/\s?,\s?/g);angular.forEach(array,function(item){vm.style=vm.style+' '+'btn-'+item;if(item==='block'){vm.blockElement=true;}});}else{vm.style='btn-'+vm.buttonStyle;if(vm.buttonStyle==='block'){vm.blockElement=true;}}}
setButtonLabel();}
function onChanges(changes){if(changes.state){if(changes.state.currentValue){vm.innerState=changes.state.currentValue;}
if(changes.state.currentValue==='success'||changes.state.currentValue==='error'){$timeout(function(){vm.innerState='init';},2000);}}
if(changes.disabled){if(changes.disabled.currentValue){vm.disabled=changes.disabled.currentValue;}}
if(changes.label&&changes.label.currentValue){vm.buttonLabel=changes.label.currentValue;setButtonLabel();}
if(changes.labelKey&&changes.labelKey.currentValue){setButtonLabel();}}
function clickButton(event){if(vm.action){vm.action({$event:event});}}
function setButtonLabel(){if(vm.addEllipsis==='true'){vm.buttonLabel=vm.buttonLabel+'...';}
if(vm.labelKey){localizationService.localize(vm.labelKey).then(function(value){vm.buttonLabel=value;if(vm.addEllipsis==='true'){vm.buttonLabel=vm.buttonLabel+'...';}});}}}}());'use strict';(function(){'use strict';function ButtonGroupDirective(){function link(scope){scope.dropdown={isOpen:false};scope.toggleDropdown=function(){scope.dropdown.isOpen=!scope.dropdown.isOpen;};scope.closeDropdown=function(){scope.dropdown.isOpen=false;};scope.executeMenuItem=function(subButton){subButton.handler();scope.closeDropdown();};}
var directive={restrict:'E',replace:true,template:'<div class="btn-group umb-button-group" ng-class="{\'dropup\': direction === \'up\'}"> <umb-button ng-if="defaultButton" alias="{{defaultButton.alias ? defaultButton.alias : \'groupPrimary\' }}" type="button" action="defaultButton.handler()" button-style="{{buttonStyle}}" state="state" label="{{defaultButton.labelKey}}" label-key="{{defaultButton.labelKey}}" shortcut="{{defaultButton.hotKey}}" shortcut-when-hidden="{{defaultButton.hotKeyWhenHidden}}" size="{{size}}" icon="{{icon}}" add-ellipsis="{{defaultButton.addEllipsis}}"> </umb-button> <button data-element="button-group-toggle" type="button" prevent-default class="btn btn-{{buttonStyle}} dropdown-toggle umb-button-group__toggle umb-button--{{size}}" ng-if="subButtons.length > 0" ng-click="toggleDropdown()" aria-haspopup="true" aria-expanded="{{dropdown.isOpen}}"> <span class="caret"> <span class="sr-only"> <localize key="{{labelKey}}">{{label}}</localize> </span> </span> </button> <umb-dropdown ng-show="subButtons.length > 0 && dropdown.isOpen" class="umb-button-group__sub-buttons" on-close="closeDropdown()" deep-blur="closeDropdown()" ng-class="{\'-align-right\': float === \'right\'}"> <umb-dropdown-item ng-repeat="subButton in subButtons"> <button data-element="{{subButton.alias ? \'button-\' + subButton.alias : \'button-group-secondary-\' + $index }}" type="button" ng-click="executeMenuItem(subButton)" hotkey="{{subButton.hotKey}}" hotkey-when-hidden="{{subButton.hotKeyWhenHidden}}" prevent-default> <localize key="{{subButton.labelKey}}">{{subButton.labelKey}}</localize> <span ng-if="subButton.addEllipsis === \'true\'">...</span> </button> </umb-dropdown-item> </umb-dropdown> </div> ',scope:{defaultButton:'=',subButtons:'=',state:'=?',direction:'@?',float:'@?',buttonStyle:'@?',size:'@?',icon:'@?',label:'@?',labelKey:'@?'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbButtonGroup',ButtonGroupDirective);}());'use strict';(function(){'use strict';function ToggleDirective(localizationService,eventsService,$timeout){function link(scope,el,attr,ctrl){scope.displayLabelOn='';scope.displayLabelOff='';function onInit(){scope.inputId=scope.inputId||'umb-toggle_'+String.CreateGuid();setLabelText();$timeout(function(){eventsService.emit('toggleValue',{value:scope.checked});},100);}
function setLabelText(){if(scope.labelOn){scope.displayLabelOn=scope.labelOn;}else{localizationService.localize('general_on').then(function(value){scope.displayLabelOn=value;});}
if(scope.labelOff){scope.displayLabelOff=scope.labelOff;}else{localizationService.localize('general_off').then(function(value){scope.displayLabelOff=value;});}}
scope.click=function(){if(scope.onClick){eventsService.emit('toggleValue',{value:!scope.checked});scope.onClick();}};onInit();}
var directive={restrict:'E',replace:true,template:'<button role="checkbox" aria-checked="{{checked}}" ng-click="click()" type="button" class="umb-toggle" ng-disabled="disabled" ng-class="{\'umb-toggle--checked\': checked, \'umb-toggle--disabled\': disabled}" id="{{inputId}}"> <span ng-if="!labelPosition && showLabels === \'true\' || labelPosition === \'left\' && showLabels === \'true\'"> <span ng-if="!checked" class="umb-toggle__label umb-toggle__label--left">{{ displayLabelOff }}</span> <span ng-if="checked" class="umb-toggle__label umb-toggle__label--left">{{ displayLabelOn }}</span> </span> <div class="umb-toggle__toggle"> <i ng-show="hideIcons !== \'true\'" class="umb-toggle__icon umb-toggle__icon--left icon-check"></i> <i ng-show="hideIcons !== \'true\'" class="umb-toggle__icon umb-toggle__icon--right icon-wrong"></i> <div class="umb-toggle__handler"></div> </div> <span ng-if="labelPosition === \'right\' && showLabels === \'true\'"> <span ng-if="!checked" class="umb-toggle__label umb-toggle__label--right">{{ displayLabelOff }}</span> <span ng-if="checked" class="umb-toggle__label umb-toggle__label--right">{{ displayLabelOn }}</span> </span> </button> ',scope:{checked:'=',disabled:'=',inputId:'@',onClick:'&',labelOn:'@?',labelOff:'@?',labelPosition:'@?',showLabels:'@?',hideIcons:'@?'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbToggle',ToggleDirective);}());'use strict';(function(){'use strict';function ToggleGroupDirective(){function link(scope,el,attr,ctrl){scope.change=function(item){if(item.disabled){return;}
item.checked=!item.checked;if(scope.onClick){scope.onClick({'item':item});}};}
var directive={restrict:'E',replace:true,template:'<div class="umb-toggle-group"> <div class="umb-toggle-group-item" ng-repeat="item in items" ng-class="{\'umb-toggle-group-item--disabled\': item.disabled}"> <umb-toggle class="umb-toggle-group-item__toggle" checked="item.checked" disabled="item.disabled" on-click="change(item)"> </umb-toggle> <div class="umb-toggle-group-item__content" ng-click="change(item)"> <div>{{ item.name }} </div> <div class="umb-toggle-group-item__description">{{ item.description }}</div> </div> </div> </div> ',scope:{items:'=',onClick:'&'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbToggleGroup',ToggleGroupDirective);}());'use strict';(function(){'use strict';function ContentEditController($rootScope,$scope,$routeParams,$q,$window,appState,contentResource,entityResource,navigationService,notificationsService,serverValidationManager,contentEditingHelper,localizationService,formHelper,umbRequestHelper,editorState,$http,eventsService,overlayService,$location,localStorageService,treeService,$exceptionHandler){var evts=[];var infiniteMode=$scope.infiniteModel&&$scope.infiniteModel.infiniteMode;var watchingCulture=false;$scope.defaultButton=null;$scope.subButtons=[];$scope.page={};$scope.page.loading=false;$scope.page.menu={};$scope.page.menu.currentNode=null;$scope.page.menu.currentSection=appState.getSectionState('currentSection');$scope.page.listViewPath=null;$scope.page.isNew=$scope.isNew?true:false;if(infiniteMode){$scope.page.allowInfinitePublishAndClose=$scope.infiniteModel.allowPublishAndClose;$scope.page.allowInfiniteSaveAndClose=$scope.infiniteModel.allowSaveAndClose;}
$scope.page.buttonGroupState='init';$scope.page.hideActionsMenu=infiniteMode?true:false;$scope.page.hideChangeVariant=false;$scope.allowOpen=true;$scope.activeApp=null;function startWatches(content){$scope.$watch('isNew',function(newVal,oldVal){$scope.page.isNew=Object.toBoolean(newVal);if(content.parentId&&content.parentId!==-1&&content.parentId!==-20){loadBreadcrumb();if(!watchingCulture){$scope.$watch('culture',function(value,oldValue){if(value!==oldValue){loadBreadcrumb();}});}}});}
function init(){var content=$scope.content;if(content.id&&content.isChildOfListView&&content.trashed===false){$scope.page.listViewPath='/content/content/edit/'+content.parentId+'?list='+$routeParams.list+'&page='+$routeParams.page+'&filter='+$routeParams.filter+'&orderBy='+$routeParams.orderBy+'&orderDirection='+$routeParams.orderDirection;}
var isAppPresent=false;if($scope.activeApp){_.forEach(content.apps,function(app){if(app.alias===$scope.activeApp.alias){isAppPresent=true;$scope.appChanged(app);}});if(isAppPresent===false){$scope.activeApp=null;}}
if($scope.activeApp===null&&content.apps.length){$scope.appChanged(content.apps[0]);}
else{createButtons($scope.content);}
editorState.set(content);bindEvents();resetVariantFlags();}
function loadBreadcrumb(){var id=$scope.page.isNew?$scope.content.parentId:$scope.content.id;if(!id){return;}
entityResource.getAncestors(id,'document',$scope.culture).then(function(anc){$scope.ancestors=anc;});}
function resetVariantFlags(){if($scope.content.variants.length>1){for(var i=0;i<$scope.content.variants.length;i++){var v=$scope.content.variants[i];if(v.save){v.isDirty=false;}
v.save=false;v.publish=false;}}else{if($scope.content.variants[0].save){$scope.content.variants[0].isDirty=false;}
$scope.content.variants[0].save=true;$scope.content.variants[0].publish=false;}}
function hasVariants(content){return content.variants.length>1;}
function reload(){$scope.page.loading=true;if($scope.page.isNew){loadScaffold().then(function(){$scope.page.loading=false;});}else{loadContent().then(function(){$scope.page.loading=false;});}}
function bindEvents(){for(var e in evts){eventsService.unsubscribe(evts[e]);}
evts.push(eventsService.on('editors.documentType.saved',function(name,args){if(args&&args.documentType&&$scope.content.documentType.id===args.documentType.id){reload();}}));evts.push(eventsService.on('editors.content.reload',function(name,args){if(args&&args.node&&$scope.content.id===args.node.id){reload();loadBreadcrumb();syncTreeNode($scope.content,$scope.content.path);}}));evts.push(eventsService.on('rte.file.uploading',function(){$scope.page.saveButtonState='busy';$scope.page.buttonGroupState='busy';}));evts.push(eventsService.on('rte.file.uploaded',function(){$scope.page.saveButtonState='success';$scope.page.buttonGroupState='success';}));evts.push(eventsService.on('rte.shortcut.save',function(){if($scope.page.showSaveButton){$scope.save();}}));evts.push(eventsService.on('content.saved',function(){localStorageService.clearAll(/^tinymce__/);}));}
function appendRuntimeData(){$scope.content.variants.forEach(function(variant){variant.compositeId=contentEditingHelper.buildCompositeVariantId(variant);variant.htmlId='_content_variant_'+variant.compositeId+'_';});}
function loadContent(){return $scope.getMethod()($scope.contentId).then(function(data){$scope.content=data;appendRuntimeData();init();syncTreeNode($scope.content,$scope.content.path,true);resetLastListPageNumber($scope.content);eventsService.emit('content.loaded',{content:$scope.content});return $q.resolve($scope.content);});}
function loadScaffold(){return $scope.getScaffoldMethod()().then(function(data){$scope.content=data;appendRuntimeData();init();startWatches($scope.content);resetLastListPageNumber($scope.content);eventsService.emit('content.newReady',{content:$scope.content});return $q.resolve($scope.content);});}
function createButtons(content){$scope.page.saveButtonStyle=content.trashed||content.isElement||content.isBlueprint?'primary':'info';if($scope.activeApp&&$scope.activeApp.alias!=='umbContent'&&$scope.activeApp.alias!=='umbInfo'&&$scope.activeApp.alias!=='umbListView'){$scope.defaultButton=null;$scope.subButtons=null;$scope.page.showSaveButton=false;$scope.page.showPreviewButton=false;return;}
if(_.contains($scope.content.allowedActions,'A')){$scope.page.showSaveButton=true;$scope.page.saveButtonEllipsis=content.variants&&content.variants.length>1?'true':'false';}else{$scope.page.showSaveButton=false;}
$scope.page.buttonGroupState='init';var buttons=contentEditingHelper.configureContentEditorButtons({create:$scope.page.isNew,content:content,methods:{saveAndPublish:$scope.saveAndPublish,sendToPublish:$scope.sendToPublish,unpublish:$scope.unpublish,schedulePublish:$scope.schedule,publishDescendants:$scope.publishDescendants}});$scope.defaultButton=buttons.defaultButton;$scope.subButtons=buttons.subButtons;$scope.page.showPreviewButton=true;}
function syncTreeNode(content,path,initialLoad,reloadChildren){if(infiniteMode||!path){return;}
if(!$scope.content.isChildOfListView){navigationService.syncTree({tree:$scope.treeAlias,path:path.split(','),forceReload:initialLoad!==true}).then(function(syncArgs){$scope.page.menu.currentNode=syncArgs.node;if(reloadChildren&&syncArgs.node.expanded){treeService.loadNodeChildren({node:syncArgs.node});}},function(){console.log('A problem occurred syncing the tree! A path is probably incorrect.');});}else if(initialLoad===true){navigationService.syncTree({tree:$scope.treeAlias,path:path.substring(0,path.lastIndexOf(',')).split(','),forceReload:initialLoad!==true});umbRequestHelper.resourcePromise($http.get(content.treeNodeUrl),'Failed to retrieve data for child node '+content.id).then(function(node){$scope.page.menu.currentNode=node;});}}
function checkValidility(){var allControls=$scope.contentForm.$getControls();var childFieldsToMarkAsValid=[];allControls=_.filter(allControls,function(obj){return obj.$name!=='contentHeaderForm'&&obj.$name!=='tabbedContentForm'&&obj.hasOwnProperty('$submitted');});for(var i=0;i<allControls.length;i++){var nestedForm=allControls[i];var nestedFormControls=nestedForm.$getControls();childFieldsToMarkAsValid=recurseFormControls(nestedFormControls,childFieldsToMarkAsValid);}
return childFieldsToMarkAsValid;}
function recurseFormControls(controls,array){for(var i=0;i<controls.length;i++){var controlItem=controls[i];if(controlItem.hasOwnProperty('$submitted')){var childFormControls=controlItem.$getControls();recurseFormControls(childFormControls,array);}else{if(controlItem.hasOwnProperty('$error')){var errorKeys=[];for(var key in controlItem.$error){errorKeys.push(key);controlItem.$setValidity(key,true);}
var obj={'control':controlItem,'errorKeys':errorKeys};array.push(obj);}}}
return array;}
function resetNestedFieldValiation(array){for(var i=0;i<array.length;i++){var item=array[i];var fieldControl=item.control;var fieldErrorKeys=item.errorKeys;for(var j=0;j<fieldErrorKeys.length;j++){fieldControl.$setValidity(fieldErrorKeys[j],false);}}}
function ensureDirtyIsSetIfAnyVariantIsDirty(){$scope.contentForm.$dirty=false;for(var i=0;i<$scope.content.variants.length;i++){if($scope.content.variants[i].isDirty){$scope.contentForm.$dirty=true;return;}}}
function performSave(args){var fieldsToRollback=checkValidility();eventsService.emit('content.saving',{content:$scope.content,action:args.action});return contentEditingHelper.contentEditorPerformSave({saveMethod:args.saveMethod,scope:$scope,content:$scope.content,create:$scope.page.isNew,action:args.action,showNotifications:args.showNotifications,softRedirect:true}).then(function(data){init();$scope.page.isNew=false;syncTreeNode($scope.content,data.path,false,args.reloadChildren);eventsService.emit('content.saved',{content:$scope.content,action:args.action});resetNestedFieldValiation(fieldsToRollback);ensureDirtyIsSetIfAnyVariantIsDirty();return $q.when(data);},function(err){syncTreeNode($scope.content,$scope.content.path);resetNestedFieldValiation(fieldsToRollback);return $q.reject(err);});}
function clearNotifications(content){if(content.notifications){content.notifications=[];}
if(content.variants){for(var i=0;i<content.variants.length;i++){if(content.variants[i].notifications){content.variants[i].notifications=[];}}}}
function resetLastListPageNumber(content){if(!content.isChildOfListView&&!content.isContainer){$rootScope.lastListViewPageViewed=null;}}
function clearDirtyState(variants){for(var i=0;i<variants.length;i++){var v=variants[i];if(v.notifications){var isSuccess=_.find(v.notifications,function(n){return n.type===3;});if(isSuccess){v.isDirty=false;}}}}
function handleHttpException(err){if(err&&!err.status){$exceptionHandler(err);}}
function showValidationNotification(){localizationService.localizeMany(['speechBubbles_validationFailedHeader','speechBubbles_validationFailedMessage']).then(function(data){notificationsService.error(data[0],data[1]);});}
if($scope.page.isNew){$scope.page.loading=true;loadScaffold().then(function(){$scope.page.loading=false;});}else{$scope.page.loading=true;loadContent().then(function(){startWatches($scope.content);$scope.page.loading=false;});}
$scope.unpublish=function(){clearNotifications($scope.content);if(formHelper.submitForm({scope:$scope,action:'unpublish',skipValidation:true})){var dialog={parentScope:$scope,view:'views/content/overlays/unpublish.html',variants:$scope.content.variants,skipFormValidation:true,includeUnpublished:false,submitButtonLabelKey:'content_unpublish',submitButtonStyle:'warning',submit:function submit(model){model.submitButtonState='busy';var selectedVariants=_.filter(model.variants,function(v){return v.save&&v.language;});var culturesForUnpublishing=_.map(selectedVariants,function(v){return v.language.culture;});contentResource.unpublish($scope.content.id,culturesForUnpublishing).then(function(data){formHelper.resetForm({scope:$scope});contentEditingHelper.reBindChangedProperties($scope.content,data);init();syncTreeNode($scope.content,data.path);$scope.page.buttonGroupState='success';eventsService.emit('content.unpublished',{content:$scope.content});overlayService.close();},function(err){$scope.page.buttonGroupState='error';handleHttpException(err);});},close:function close(){overlayService.close();}};overlayService.open(dialog);}};$scope.sendToPublish=function(){clearNotifications($scope.content);if(hasVariants($scope.content)){if(formHelper.submitForm({scope:$scope,action:'publish'})){var dialog={parentScope:$scope,view:'views/content/overlays/sendtopublish.html',variants:$scope.content.variants,skipFormValidation:true,submitButtonLabelKey:'buttons_saveToPublish',submit:function submit(model){model.submitButtonState='busy';clearNotifications($scope.content);return performSave({saveMethod:contentResource.sendToPublish,action:'sendToPublish',showNotifications:false}).then(function(data){formHelper.showNotifications(data);clearNotifications($scope.content);overlayService.close();return $q.when(data);},function(err){clearDirtyState($scope.content.variants);model.submitButtonState='error';dialog.variants=$scope.content.variants;handleHttpException(err);});},close:function close(){overlayService.close();}};overlayService.open(dialog);}else{showValidationNotification();}}else{$scope.page.buttonGroupState='busy';return performSave({saveMethod:contentResource.sendToPublish,action:'sendToPublish'}).then(function(){$scope.page.buttonGroupState='success';},function(err){$scope.page.buttonGroupState='error';handleHttpException(err);});;}};$scope.saveAndPublish=function(){clearNotifications($scope.content);if(hasVariants($scope.content)){if(formHelper.submitForm({scope:$scope,action:'publish'})){var dialog={parentScope:$scope,view:'views/content/overlays/publish.html',variants:$scope.content.variants,skipFormValidation:true,submitButtonLabelKey:'buttons_saveAndPublish',submit:function submit(model){model.submitButtonState='busy';clearNotifications($scope.content);return performSave({saveMethod:contentResource.publish,action:'publish',showNotifications:false}).then(function(data){formHelper.showNotifications(data);clearNotifications($scope.content);overlayService.close();return $q.when(data);},function(err){clearDirtyState($scope.content.variants);model.submitButtonState='error';dialog.variants=$scope.content.variants;handleHttpException(err);});},close:function close(){overlayService.close();}};overlayService.open(dialog);}else{showValidationNotification();}}else{$scope.content.variants[0].save=true;$scope.content.variants[0].publish=true;$scope.page.buttonGroupState='busy';return performSave({saveMethod:contentResource.publish,action:'publish'}).then(function(){$scope.page.buttonGroupState='success';},function(err){$scope.page.buttonGroupState='error';handleHttpException(err);});}};$scope.save=function(){clearNotifications($scope.content);if(hasVariants($scope.content)){if(formHelper.submitForm({scope:$scope,action:'openSaveDialog'})){var dialog={parentScope:$scope,view:'views/content/overlays/save.html',variants:$scope.content.variants,skipFormValidation:true,submitButtonLabelKey:'buttons_save',submit:function submit(model){model.submitButtonState='busy';clearNotifications($scope.content);return performSave({saveMethod:$scope.saveMethod(),action:'save',showNotifications:false}).then(function(data){formHelper.showNotifications(data);clearNotifications($scope.content);overlayService.close();return $q.when(data);},function(err){clearDirtyState($scope.content.variants);model.submitButtonState='error';dialog.variants=$scope.content.variants;handleHttpException(err);});},close:function close(oldModel){overlayService.close();}};overlayService.open(dialog);}else{showValidationNotification();}}else{$scope.content.variants[0].save=true;$scope.page.saveButtonState='busy';return performSave({saveMethod:$scope.saveMethod(),action:'save'}).then(function(){$scope.page.saveButtonState='success';},function(err){$scope.page.saveButtonState='error';handleHttpException(err);});}};$scope.schedule=function(){clearNotifications($scope.content);if(formHelper.submitForm({scope:$scope,action:'schedule'})){if(!hasVariants($scope.content)){$scope.content.variants[0].save=true;}
var dialog={parentScope:$scope,view:'views/content/overlays/schedule.html',variants:Utilities.copy($scope.content.variants),skipFormValidation:true,submitButtonLabelKey:'buttons_schedulePublish',submit:function submit(model){for(var i=0;i<$scope.content.variants.length;i++){$scope.content.variants[i].releaseDate=model.variants[i].releaseDate;$scope.content.variants[i].expireDate=model.variants[i].expireDate;$scope.content.variants[i].releaseDateFormatted=model.variants[i].releaseDateFormatted;$scope.content.variants[i].expireDateFormatted=model.variants[i].expireDateFormatted;$scope.content.variants[i].save=model.variants[i].save;}
model.submitButtonState='busy';clearNotifications($scope.content);return performSave({saveMethod:contentResource.saveSchedule,action:'schedule',showNotifications:false}).then(function(data){formHelper.showNotifications(data);clearNotifications($scope.content);overlayService.close();return $q.when(data);},function(err){clearDirtyState($scope.content.variants);if(!hasVariants($scope.content)){formHelper.showNotifications(err.data);}
model.submitButtonState='error';dialog.variants=Utilities.copy($scope.content.variants);handleHttpException(err);});},close:function close(){overlayService.close();}};overlayService.open(dialog);}else{showValidationNotification();}};$scope.publishDescendants=function(){clearNotifications($scope.content);if(formHelper.submitForm({scope:$scope,action:'publishDescendants'})){if(!hasVariants($scope.content)){$scope.content.variants[0].save=true;$scope.content.variants[0].publish=true;}
var dialog={parentScope:$scope,view:'views/content/overlays/publishdescendants.html',variants:$scope.content.variants,skipFormValidation:true,submitButtonLabelKey:'buttons_publishDescendants',submit:function submit(model){model.submitButtonState='busy';clearNotifications($scope.content);return performSave({saveMethod:function saveMethod(content,create,files,showNotifications){return contentResource.publishWithDescendants(content,create,model.includeUnpublished,files,showNotifications);},action:'publishDescendants',showNotifications:false,reloadChildren:model.includeUnpublished}).then(function(data){formHelper.showNotifications(data);clearNotifications($scope.content);overlayService.close();return $q.when(data);},function(err){clearDirtyState($scope.content.variants);if(!hasVariants($scope.content)){formHelper.showNotifications(err.data);}
model.submitButtonState='error';dialog.variants=$scope.content.variants;handleHttpException(err);});},close:function close(){overlayService.close();}};overlayService.open(dialog);}else{showValidationNotification();}};$scope.preview=function(content){var previewWindow=$window.open('preview/?init=true','umbpreview');var query='id='+content.id;if($scope.culture){query+='#?culture='+$scope.culture;}
var redirect=Umbraco.Sys.ServerVariables.umbracoSettings.umbracoPath+'/preview/?'+query;if(!_.contains(content.allowedActions,'A')){previewWindow.location.href=redirect;}else{var selectedVariant=$scope.content.variants[0];if($scope.culture){var found=_.find($scope.content.variants,function(v){return v.language&&v.language.culture===$scope.culture;});if(found){selectedVariant=found;}}
selectedVariant.save=true;performSave({saveMethod:$scope.saveMethod(),action:'save'}).then(function(data){previewWindow.location.href=redirect;},function(err){});}};$scope.publishAndClose=function(content){$scope.publishAndCloseButtonState='busy';performSave({saveMethod:contentResource.publish,action:'publish'}).then(function(){if($scope.infiniteModel.submit){$scope.infiniteModel.contentNode=content;$scope.infiniteModel.submit($scope.infiniteModel);}
$scope.publishAndCloseButtonState='success';});};$scope.saveAndClose=function(content){$scope.saveAndCloseButtonState='busy';performSave({saveMethod:$scope.saveMethod(),action:'save'}).then(function(){if($scope.infiniteModel.submit){$scope.infiniteModel.contentNode=content;$scope.infiniteModel.submit($scope.infiniteModel);}
$scope.saveAndCloseButtonState='success';});};$scope.appChanged=function(activeApp){$scope.activeApp=activeApp;_.forEach($scope.content.apps,function(app){app.active=false;if(app.alias===$scope.activeApp.alias){app.active=true;}});$scope.$broadcast('editors.apps.appChanged',{app:activeApp});createButtons($scope.content);};$scope.appAnchorChanged=function(app,anchor){$scope.$broadcast('editors.apps.appAnchorChanged',{app:app,anchor:anchor});};$scope.close=function(){if($scope.infiniteModel.close){$scope.infiniteModel.close($scope.infiniteModel);}};$scope.onBack=function(){if($scope.infiniteModel&&$scope.infiniteModel.close){$scope.infiniteModel.close($scope.infiniteModel);}else{$location.path('/'+$routeParams.section+'/'+$routeParams.tree+'/'+$routeParams.method+'/'+$scope.content.parentId);}};$scope.$on('$destroy',function(){for(var e in evts){eventsService.unsubscribe(evts[e]);}
serverValidationManager.clear();});}
function createDirective(){var directive={restrict:'E',replace:true,template:'<div> <umb-load-indicator ng-if="page.loading"></umb-load-indicator> <form name="contentForm" ng-submit="save()" novalidate val-form-manager> <umb-editor-view ng-if="!page.loading"> <umb-variant-content-editors page="page" content="content" culture="culture" segment="segment" on-select-app="appChanged(app)" on-select-app-anchor="appAnchorChanged(app, anchor)" on-back="onBack()" show-back="!(infiniteModel && infiniteModel.infiniteMode)"> </umb-variant-content-editors> <umb-editor-footer> <umb-editor-footer-content-left> <umb-breadcrumbs ng-if="ancestors && ancestors.length > 0" ancestors="ancestors" for-new-entity="page.isNew" entity-type="content"> </umb-breadcrumbs> </umb-editor-footer-content-left> <umb-editor-footer-content-right> <umb-button ng-if="infiniteModel.infiniteMode" action="close()" button-style="link" label-key="general_close" type="button"> </umb-button> <umb-button alias="preview" ng-if="!page.isNew && content.allowPreview && page.showPreviewButton" type="button" button-style="link" action="preview(content)" label-key="buttons_saveAndPreview"> </umb-button> <umb-button ng-if="page.showSaveButton" alias="save" type="button" button-style="{{page.saveButtonStyle}}" state="page.saveButtonState" action="save(content)" label-key="buttons_save" shortcut="ctrl+s" add-ellipsis="{{page.saveButtonEllipsis}}"> </umb-button> <umb-button-group ng-if="defaultButton && !content.trashed && !content.isElement" button-style="success" default-button="defaultButton" sub-buttons="subButtons" state="page.buttonGroupState" direction="up" float="right" label-key="buttons_morePublishingOptions" label="More publishing options"> </umb-button-group> <umb-button ng-if="infiniteModel.infiniteMode && page.allowInfiniteSaveAndClose" action="saveAndClose(content)" button-style="primary" state="saveAndCloseButtonState" label-key="buttons_saveAndClose" type="button"> </umb-button> <umb-button ng-if="infiniteModel.infiniteMode && page.allowInfinitePublishAndClose" action="publishAndClose(content)" button-style="primary" state="publishAndCloseButtonState" label-key="buttons_publishAndClose" type="button"> </umb-button> </umb-editor-footer-content-right> </umb-editor-footer> </umb-editor-view> </form> </div> ',controller:'Umbraco.Editors.Content.EditorDirectiveController',scope:{contentId:'=',isNew:'=?',treeAlias:'@',page:'=?',saveMethod:'&',getMethod:'&',getScaffoldMethod:'&?',culture:'=?',segment:'=?',infiniteModel:'=?'}};return directive;}
angular.module('umbraco.directives').controller('Umbraco.Editors.Content.EditorDirectiveController',ContentEditController);angular.module('umbraco.directives').directive('contentEditor',createDirective);}());'use strict';(function(){'use strict';function ContentNodeInfoDirective($timeout,logResource,eventsService,userService,localizationService,dateHelper,editorService,redirectUrlsResource,overlayService,entityResource){function link(scope){var evts=[];var isInfoTab=false;var auditTrailLoaded=false;var labels={};scope.publishStatus=[];scope.currentVariant=null;scope.currentUrls=[];scope.disableTemplates=Umbraco.Sys.ServerVariables.features.disabledFeatures.disableTemplates;scope.allowChangeDocumentType=false;scope.allowChangeTemplate=false;scope.allTemplates=[];function onInit(){entityResource.getAll('Template').then(function(templates){scope.allTemplates=templates;});scope.currentVariant=_.find(scope.node.variants,function(v){return v.active;});updateCurrentUrls();scope.isInfiniteMode=editorService.getNumberOfEditors()>0?true:false;userService.getCurrentUser().then(function(user){var hasAccessToSettings=user.allowedSections.indexOf('settings')!==-1?true:false;scope.allowChangeDocumentType=hasAccessToSettings;scope.allowChangeTemplate=hasAccessToSettings;});var keys=['general_deleted','content_unpublished','content_published','content_publishedPendingChanges','content_notCreated','prompt_unsavedChanges','prompt_doctypeChangeWarning','general_history','auditTrails_historyIncludingVariants','content_itemNotPublished','general_choose'];localizationService.localizeMany(keys).then(function(data){labels.deleted=data[0];labels.unpublished=data[1];labels.published=data[2];labels.publishedPendingChanges=data[3];labels.notCreated=data[4];labels.unsavedChanges=data[5];labels.doctypeChangeWarning=data[6];labels.notPublished=data[9];scope.historyLabel=scope.node.variants&&scope.node.variants.length===1?data[7]:data[8];scope.chooseLabel=data[10];setNodePublishStatus();if(scope.currentUrls&&scope.currentUrls.length===0){if(scope.node.id>0){scope.currentUrls.push({text:labels.notPublished,isUrl:false});}else{scope.currentUrls.push({text:labels.notCreated,isUrl:false});}}});scope.auditTrailOptions={'id':scope.node.id};formatDatesToLocal();scope.availableTemplates=scope.node.allowedTemplates;scope.documentType=scope.node.documentType;scope.urlTrackerDisabled=false;if(scope.documentType!==null){scope.previewOpenUrl='#/settings/documenttypes/edit/'+scope.documentType.id;}
var activeApp=_.find(scope.node.apps,function(a){return a.active;});if(activeApp.alias==='umbInfo'){loadRedirectUrls();loadAuditTrail();}
scope.disableTemplates=scope.disableTemplates||scope.node.isElement;}
scope.auditTrailPageChange=function(pageNumber){scope.auditTrailOptions.pageNumber=pageNumber;loadAuditTrail(true);};scope.openDocumentType=function(documentType){var variantIsDirty=_.some(scope.node.variants,function(variant){return variant.isDirty;});if(variantIsDirty){var confirm={title:labels.unsavedChanges,view:'default',content:labels.doctypeChangeWarning,submitButtonLabelKey:'general_continue',submitButtonStyle:'warning',closeButtonLabelKey:'general_cancel',submit:function submit(){openDocTypeEditor(documentType);overlayService.close();},close:function close(){overlayService.close();}};overlayService.open(confirm);}else{openDocTypeEditor(documentType);}};function openDocTypeEditor(documentType){var editor={id:documentType.id,submit:function submit(model){editorService.close();},close:function close(){editorService.close();}};editorService.documentTypeEditor(editor);}
scope.openTemplate=function(){var template=_.findWhere(scope.allTemplates,{alias:scope.node.template});if(!template){return;}
var templateEditor={id:template.id,submit:function submit(model){editorService.close();},close:function close(){editorService.close();}};editorService.templateEditor(templateEditor);};scope.updateTemplate=function(templateAlias){scope.node.template=templateAlias;};scope.openRollback=function(){var rollback={node:scope.node,submit:function submit(model){var args={node:scope.node};eventsService.emit('editors.content.reload',args);editorService.close();},close:function close(){editorService.close();}};editorService.rollback(rollback);};function loadAuditTrail(forceReload){if(auditTrailLoaded&&!forceReload){return;}
scope.loadingAuditTrail=true;logResource.getPagedEntityLog(scope.auditTrailOptions).then(function(data){userService.getCurrentUser().then(function(currentUser){angular.forEach(data.items,function(item){item.timestampFormatted=dateHelper.getLocalDate(item.timestamp,currentUser.locale,'LLL');});});scope.auditTrail=data.items;scope.auditTrailOptions.pageNumber=data.pageNumber;scope.auditTrailOptions.pageSize=data.pageSize;scope.auditTrailOptions.totalItems=data.totalItems;scope.auditTrailOptions.totalPages=data.totalPages;setAuditTrailLogTypeColor(scope.auditTrail);scope.loadingAuditTrail=false;auditTrailLoaded=true;});}
function loadRedirectUrls(){scope.loadingRedirectUrls=true;redirectUrlsResource.getEnableState().then(function(response){scope.urlTrackerDisabled=response.enabled!==true;if(scope.urlTrackerDisabled===false){redirectUrlsResource.getRedirectsForContentItem(scope.node.udi).then(function(data){scope.redirectUrls=data.searchResults;scope.hasRedirects=typeof data.searchResults!=='undefined'&&data.searchResults.length>0;scope.loadingRedirectUrls=false;});}else{scope.loadingRedirectUrls=false;}});}
function setAuditTrailLogTypeColor(auditTrail){angular.forEach(auditTrail,function(item){switch(item.logType){case'Save':item.logTypeColor='primary';break;case'Publish':case'PublishVariant':item.logTypeColor='success';break;case'Unpublish':case'UnpublishVariant':item.logTypeColor='warning';break;case'Delete':item.logTypeColor='danger';break;default:item.logTypeColor='gray';}});}
function setNodePublishStatus(){scope.status={};if(scope.node.trashed===true){scope.status.color='danger';return;}
if(scope.currentVariant.state==='NotCreated'){scope.status.color='gray';}else if(scope.currentVariant.state==='Draft'){scope.status.color='gray';}else if(scope.currentVariant.state==='Published'){scope.status.color='success';}else if(scope.currentVariant.state==='PublishedPendingChanges'){scope.status.color='success';}}
function formatDatesToLocal(){userService.getCurrentUser().then(function(currentUser){scope.currentVariant.createDateFormatted=dateHelper.getLocalDate(scope.currentVariant.createDate,currentUser.locale,'LLL');scope.currentVariant.releaseDateFormatted=dateHelper.getLocalDate(scope.currentVariant.releaseDate,currentUser.locale,'LLL');scope.currentVariant.expireDateFormatted=dateHelper.getLocalDate(scope.currentVariant.expireDate,currentUser.locale,'LLL');});}
function updateCurrentUrls(){if(scope.node.isElement){scope.currentUrls=null;return;}
if(scope.node.variants.length>1){scope.currentUrls=_.filter(scope.node.urls,function(url){return scope.currentVariant.language&&scope.currentVariant.language.culture===url.culture;});}else{scope.currentUrls=scope.node.urls;}
scope.currentUrlsHaveMultipleCultures=_.keys(_.groupBy(scope.currentUrls,function(url){return url.culture;})).length>1;}
evts.push(eventsService.on('app.tabChange',function(event,args){$timeout(function(){if(args.alias==='umbInfo'){isInfoTab=true;loadAuditTrail();loadRedirectUrls();setNodePublishStatus();formatDatesToLocal();}else{isInfoTab=false;}});}));scope.$watch('node.updateDate',function(newValue,oldValue){if(!newValue){return;}
if(newValue===oldValue){return;}
if(isInfoTab){loadAuditTrail(true);loadRedirectUrls();setNodePublishStatus();formatDatesToLocal();}
updateCurrentUrls();});scope.$on('$destroy',function(){for(var e in evts){eventsService.unsubscribe(evts[e]);}});onInit();}
var directive={require:'^^umbVariantContent',restrict:'E',replace:true,template:'<div class="umb-package-details"> <div class="umb-package-details__main-content"> <umb-box ng-if="currentUrls" data-element="node-info-urls"> <umb-box-header title-key="general_links"></umb-box-header> <umb-box-content class="block-form"> <ul class="nav nav-stacked mb0"> <li ng-repeat="url in currentUrls"> <a href="{{url.text}}" target="_blank" ng-if="url.isUrl"> <span ng-if="currentUrlsHaveMultipleCultures && url.culture" style="font-size: 13px; color: #cccccc; width: 50px;display: inline-block">{{url.culture}}</span> <i class="icon icon-out" aria-hidden="true"></i> <span>{{url.text}}</span> </a> <div ng-if="!url.isUrl" style="margin-top: 4px;"> <span ng-if="currentUrlsHaveMultipleCultures && url.culture" style="font-size: 13px; color: #cccccc; width: 50px;display: inline-block">{{url.culture}}</span> <em>{{url.text}}</em> </div> </li> </ul> </umb-box-content> </umb-box> <umb-box data-element="node-info-redirects" style="display:none;" ng-cloak ng-show="!urlTrackerDisabled && hasRedirects"> <umb-box-header title-key="redirectUrls_redirectUrlManagement"></umb-box-header> <umb-box-content class="block-form"> <div style="position: relative;"> <div ng-if="loadingRedirectUrls" style="background: rgba(255, 255, 255, 0.8); position: absolute; top: 0; left: 0; right: 0; bottom: 0;"></div> <umb-load-indicator ng-if="loadingRedirectUrls"></umb-load-indicator> <div ng-show="hasRedirects"> <p><localize key="redirectUrls_panelInformation" class="ng-isolate-scope ng-scope">The following URLs redirect to this content item:</localize></p> <ul class="nav nav-stacked" style="margin-bottom: 0;"> <li ng-repeat="redirectUrl in redirectUrls"> <a href="{{redirectUrl.originalUrl}}" target="_blank"> <i ng-class="value.icon" class="icon-out" aria-hidden="true"></i> {{redirectUrl.originalUrl}} </a> </li> </ul> </div> </div> </umb-box-content> </umb-box> <umb-box data-element="node-info-history"> <umb-box-header title="{{historyLabel}}"> <umb-button ng-hide="node.trashed" type="button" button-style="outline" action="openRollback()" label-key="actions_rollback" size="xs" add-ellipsis="true"> </umb-button> </umb-box-header> <umb-box-content class="block-form"> <div style="position: relative;"> <div ng-show="loadingAuditTrail" style="background: rgba(255, 255, 255, 0.8); position: absolute; top: 0; left: 0; right: 0; bottom: 0;"></div> <umb-load-indicator ng-show="loadingAuditTrail"></umb-load-indicator> <div ng-show="auditTrail.length === 0" style="padding: 10px;"> <umb-empty-state position="center" size="small"> <localize key="content_noChanges"></localize> </umb-empty-state> </div> <div class="history"> <div ng-show="auditTrail.length > 1" class="history-line"></div> <div class="history-item" ng-repeat="item in auditTrail"> <div class="history-item__break"> <div class="history-item__avatar"> <umb-avatar color="secondary" size="xs" name="{{item.userName}}" img-src="{{item.userAvatars[3]}}" img-srcset="{{item.userAvatars[4]}} 2x, {{item.userAvatars[4]}} 3x"> </umb-avatar> </div> <div> <div>{{ item.userName }}</div> <div class="history-item__date">{{item.timestampFormatted}}</div> </div> </div> <div class="history-item__break"> <umb-badge class="history-item__badge" size="xs" color="{{item.logTypeColor}}"> <localize key="auditTrails_small{{ item.logType }}">{{ item.logType }}</localize> </umb-badge> <span> <localize key="auditTrails_{{ item.logType | lowercase }}" tokens="[item.parameters]">{{ item.comment }}</localize> </span> </div> </div> </div> </div> <div class="flex justify-center"> <umb-pagination ng-if="auditTrailOptions.totalPages > 1" page-number="auditTrailOptions.pageNumber" total-pages="auditTrailOptions.totalPages" on-change="auditTrailPageChange(pageNumber)"> </umb-pagination> </div> </umb-box-content> </umb-box> </div> <div class="umb-package-details__sidebar"> <umb-box data-element="node-info-general"> <umb-box-header title-key="general_general"></umb-box-header> <umb-box-content class="block-form"> <umb-control-group data-element="node-info-status" label="@general_status"> <umb-badge size="xs" color="{{status.color}}"> <umb-variant-state variant="currentVariant"></umb-variant-state> </umb-badge> </umb-control-group> <umb-control-group ng-show="node.id !== 0" data-element="node-info-create-date" label="@template_createdDate"> {{currentVariant.createDateFormatted}} </umb-control-group> <umb-control-group ng-show="node.id !== 0 && currentVariant.releaseDateFormatted" data-element="node-info-publish-date" label="@content_releaseDate"> {{currentVariant.releaseDateFormatted}} </umb-control-group> <umb-control-group ng-show="node.id !== 0 && currentVariant.expireDateFormatted" data-element="node-info-expire-date" label="@content_expireDate"> {{currentVariant.expireDateFormatted}} </umb-control-group> <umb-control-group data-element="node-info-document-type" label="@content_documentType"> <umb-node-preview style="min-width: 100%; margin-bottom: 0;" icon="node.icon" name="node.contentTypeName" alias="documentType.alias" allow-open="allowChangeDocumentType" on-open="openDocumentType(documentType)"> </umb-node-preview> </umb-control-group> <umb-control-group ng-if="disableTemplates == false" data-element="node-info-template" label="@template_template"> <div class="flex items-center"> <select class="input-block-level" ng-model="node.template" ng-options="key as value for (key, value) in availableTemplates" ng-change="updateTemplate(node.template)"> <option>{{chooseLabel}}...</option> </select> <button type="button" ng-show="allowChangeTemplate && node.template !== null" class="umb-node-preview__action" style="margin-left:15px;" ng-click="openTemplate()"> <localize key="general_open">Open</localize> </button> </div> </umb-control-group> <umb-control-group ng-show="node.id !== 0" data-element="node-info-id" label="Id"> <div>{{ node.id }}</div> <small>{{ node.key }}</small> </umb-control-group> </umb-box-content> </umb-box> </div> </div> ',scope:{node:'='},link:link};return directive;}
angular.module('umbraco.directives').directive('umbContentNodeInfo',ContentNodeInfoDirective);}());'use strict';(function(){'use strict';function tabbedContentDirective($timeout){function link($scope,$element){var appRootNode=$element[0];var propertyGroupNodesDictionary={};var scrollableNode=appRootNode.closest('.umb-scrollable');scrollableNode.addEventListener('scroll',onScroll);scrollableNode.addEventListener('mousewheel',cancelScrollTween);function onScroll(event){var viewFocusY=scrollableNode.scrollTop+scrollableNode.clientHeight*0.5;for(var i in $scope.content.tabs){var group=$scope.content.tabs[i];var node=propertyGroupNodesDictionary[group.id];if(viewFocusY>=node.offsetTop&&viewFocusY<=node.offsetTop+node.clientHeight){setActiveAnchor(group);return;}}}
function setActiveAnchor(tab){if(tab.active!==true){var i=$scope.content.tabs.length;while(i--){$scope.content.tabs[i].active=false;}
tab.active=true;}}
function getActiveAnchor(){var i=$scope.content.tabs.length;while(i--){if($scope.content.tabs[i].active===true)
return $scope.content.tabs[i];}
return false;}
function getScrollPositionFor(id){if(propertyGroupNodesDictionary[id]){return propertyGroupNodesDictionary[id].offsetTop-20;}
return null;}
function scrollTo(id){var y=getScrollPositionFor(id);if(getScrollPositionFor!==null){var viewportHeight=scrollableNode.clientHeight;var from=scrollableNode.scrollTop;var to=Math.min(y,scrollableNode.scrollHeight-viewportHeight);var animeObject={_y:from};$scope.scrollTween=anime({targets:animeObject,_y:to,easing:'easeOutExpo',duration:200+Math.min(Math.abs(to-from)/viewportHeight*100,400),update:function update(){scrollableNode.scrollTo(0,animeObject._y);}});}}
function jumpTo(id){var y=getScrollPositionFor(id);if(getScrollPositionFor!==null){cancelScrollTween();scrollableNode.scrollTo(0,y);}}
function cancelScrollTween(){if($scope.scrollTween){$scope.scrollTween.pause();}}
$scope.registerPropertyGroup=function(element,appAnchor){propertyGroupNodesDictionary[appAnchor]=element;};$scope.$on('editors.apps.appChanged',function($event,$args){if($args.app.alias==='umbContent'){var activeAnchor=getActiveAnchor();$timeout(jumpTo.bind(null,[activeAnchor.id]));}});$scope.$on('editors.apps.appAnchorChanged',function($event,$args){if($args.app.alias==='umbContent'){setActiveAnchor($args.anchor);scrollTo($args.anchor.id);}});$scope.$on('$destroy',function(){cancelScrollTween();scrollableNode.removeEventListener('scroll',onScroll);scrollableNode.removeEventListener('mousewheel',cancelScrollTween);});}
function controller($scope){this.content=$scope.content;if($scope.contentNodeModel){$scope.defaultVariant=_.find($scope.contentNodeModel.variants,function(variant){return!variant.segment&&(variant.language&&variant.language.isDefault||!variant.language);});}
$scope.unlockInvariantValue=function(property){property.unlockInvariantValue=!property.unlockInvariantValue;};$scope.$watch('tabbedContentForm.$dirty',function(newValue,oldValue){if(newValue===true){$scope.content.isDirty=true;}});$scope.propertyEditorDisabled=function(property){if(property.unlockInvariantValue){return false;}
var contentLanguage=$scope.content.language;var canEditCulture=!contentLanguage||property.culture===contentLanguage.culture||property.culture==null&&contentLanguage.isDefault;var canEditSegment=property.segment===$scope.content.segment;return!canEditCulture||!canEditSegment;};}
var directive={restrict:'E',replace:true,template:' <div> <ng-form name="tabbedContentForm"> <div class="umb-group-panel" retrive-dom-element="registerPropertyGroup(element[0], attributes.appAnchor)" data-app-anchor="{{group.id}}" data-element="group-{{group.alias}}" ng-repeat="group in content.tabs track by group.label"> <div class="umb-group-panel__header"> <div id="group-{{group.id}}">{{ group.label }}</div> </div> <div class="umb-group-panel__content"> <umb-property data-element="property-{{property.alias}}" ng-repeat="property in group.properties track by property.alias" property="property" show-inherit="propertyEditorDisabled(property)" inherits-from="defaultVariant.displayName"> <div ng-class="{\'o-40 cursor-not-allowed\': propertyEditorDisabled(property) }"> <umb-property-editor model="property" preview="propertyEditorDisabled(property)"> </umb-property-editor> </div> </umb-property> </div> </div> <umb-empty-state ng-if="content.tabs.length === 0" position="center"> <localize key="content_noProperties"></localize> </umb-empty-state> </ng-form> </div> ',controller:controller,link:link,scope:{content:'=',contentNodeModel:'=?'}};return directive;}
angular.module('umbraco.directives').directive('umbTabbedContent',tabbedContentDirective);}());'use strict';(function(){'use strict';var umbVariantContent={template:' <div> <umb-load-indicator ng-if="vm.editor.loading"> </umb-load-indicator> <div class="umb-split-view__content" ng-show="!vm.editor.loading"> <ng-form name="contentHeaderForm" ng-if="vm.content.apps.length > 0"> <umb-editor-content-header menu="vm.page.menu" hide-menu="vm.page.hideActionsMenu" name="vm.editor.content.name" name-disabled="vm.nameDisabled" editor="vm.editor" content="vm.content" on-select-navigation-item="vm.selectApp(item)" on-select-anchor-item="vm.selectAppAnchor(item, anchor)" hide-change-variant="vm.page.hideChangeVariant" show-back-button="vm.showBackButton()" on-back="vm.onBack()" split-view-open="vm.editorCount > 1" on-open-in-split-view="vm.openSplitView(variant)" on-close-split-view="vm.onCloseSplitView()" on-select-variant="vm.selectVariant(variant)" server-validation-name-field="{{\'Variants[\' + vm.editorIndex + \'].Name\'}}"> </umb-editor-content-header> </ng-form> <umb-editor-container ng-if="vm.content.apps.length > 0">  <div ng-show="vm.content.trashed" class="umb-editor--trashed-message"> <i class="icon icon-trash"></i> <localize key="content_nodeIsInTrash">This item is in the Recycle Bin</localize> </div> <div class="umb-editor-sub-views"> <div ng-repeat="app in vm.editor.variantApps track by app.alias"> <umb-editor-sub-view model="app" content="vm.content" variant-content="vm.editor.content"> </umb-editor-sub-view></div> </div> </umb-editor-container> <umb-empty-state ng-if="vm.content.apps.length === 0" position="center"> <localize key="content_noProperties"></localize> </umb-empty-state> </div> </div> ',bindings:{content:'<',page:'<',editor:'<',editorIndex:'<',editorCount:'<',onCloseSplitView:'&',onSelectVariant:'&',onOpenSplitView:'&',onSelectApp:'&',onSelectAppAnchor:'&',onBack:'&?',showBack:'<?'},controllerAs:'vm',controller:umbVariantContentController};function umbVariantContentController($scope){var unsubscribe=[];var vm=this;vm.$onInit=onInit;vm.$postLink=postLink;vm.$onDestroy=onDestroy;vm.selectVariant=selectVariant;vm.openSplitView=openSplitView;vm.selectApp=selectApp;vm.selectAppAnchor=selectAppAnchor;vm.showBackButton=showBackButton;function onInit(){vm.editor.variantApps=Utilities.copy(vm.content.apps);var activeApp=vm.content.apps.find(function(app){return app.active;});onAppChanged(activeApp);}
function showBackButton(){return vm.page.listViewPath!==null&&vm.showBack;}
function postLink(){unsubscribe.push($scope.$watch('vm.editor.content.name',function(newValue,oldValue){if(newValue!==oldValue){vm.editor.content.isDirty=true;}}));}
function onDestroy(){for(var i=0;i<unsubscribe.length;i++){unsubscribe[i]();}}
function selectVariant(variant){if(vm.onSelectVariant){vm.onSelectVariant({'variant':variant});}}
function selectApp(item){if(vm.onSelectApp){vm.onSelectApp({'app':item});}}
$scope.$on('editors.apps.appChanged',function($event,$args){var activeApp=$args.app;_.forEach(vm.editor.variantApps,function(app){app.active=app.alias===activeApp.alias;});onAppChanged(activeApp);});function onAppChanged(activeApp){vm.nameDisabled=activeApp&&activeApp.alias!=='umbContent'&&activeApp.alias!=='umbInfo'&&activeApp.alias!=='umbListView';}
function selectAppAnchor(item,anchor){if(vm.onSelectAppAnchor){vm.onSelectAppAnchor({'app':item,'anchor':anchor});}}
function openSplitView(variant){if(vm.onOpenSplitView){vm.onOpenSplitView({'variant':variant});}}}
angular.module('umbraco.directives').component('umbVariantContent',umbVariantContent);}());'use strict';(function(){'use strict';var umbVariantContentEditors={template:' <div class="umb-split-views"> <div class="umb-split-view" ng-repeat="editor in vm.editors track by editor.compositeId"> <umb-variant-content page="vm.page" content="vm.content" editor="editor" editor-index="$index" editor-count="vm.editors.length" on-open-split-view="vm.openSplitView(variant)" on-close-split-view="vm.closeSplitView($index)" on-select-variant="vm.selectVariant(variant, $index)" on-select-app="vm.selectApp(app)" on-select-app-anchor="vm.selectAppAnchor(app, anchor)" on-back="vm.onBack()" show-back="vm.showBack"> </umb-variant-content> </div> </div> ',bindings:{page:'<',content:'<',culture:'<',segment:'<',onSelectApp:'&?',onSelectAppAnchor:'&?',onBack:'&?',showBack:'<?'},controllerAs:'vm',controller:umbVariantContentEditorsController};function umbVariantContentEditorsController($scope,$location,contentEditingHelper){var prevContentDateUpdated=null;var vm=this;vm.$onInit=onInit;vm.$onChanges=onChanges;vm.$doCheck=doCheck;vm.$postLink=postLink;vm.openSplitView=openSplitView;vm.closeSplitView=closeSplitView;vm.selectVariant=selectVariant;vm.selectApp=selectApp;vm.selectAppAnchor=selectAppAnchor;vm.getScope=getScope;vm.editors=[];function onInit(){prevContentDateUpdated=Utilities.copy(vm.content.updateDate);setActiveVariant();}
function postLink(){}
function onChanges(changes){if(changes.culture&&!changes.culture.isFirstChange()&&changes.culture.currentValue!==changes.culture.previousValue){setActiveVariant();}else if(changes.segment&&!changes.segment.isFirstChange()&&changes.segment.currentValue!==changes.segment.previousValue){setActiveVariant();}}
function doCheck(){if(!angular.equals(vm.content.updateDate,prevContentDateUpdated)){setActiveVariant();prevContentDateUpdated=Utilities.copy(vm.content.updateDate);}}
function splitViewChanged(){$scope.$broadcast('editors.content.splitViewChanged',{editors:vm.editors});}
function setActiveVariant(){var activeVariant=null;_.each(vm.content.variants,function(v){if((vm.culture==='invariant'||v.language&&v.language.culture===vm.culture)&&v.segment===vm.segment){activeVariant=v;}});if(!activeVariant){activeVariant=vm.content.variants[0];}
insertVariantEditor(0,activeVariant);if(vm.editors.length>1){for(var s=1;s<vm.editors.length;s++){var variant=_.find(vm.content.variants,function(v){return(!v.language||v.language.culture===vm.editors[s].content.language.culture)&&v.segment===vm.editors[s].content.segment;});vm.editors[s].content=variant;}}}
function insertVariantEditor(index,variant){if(vm.editors[index]){if(vm.editors[index].content===variant){return;}
vm.editors[index].content.active=false;}
variant.active=true;var variantCulture=variant.language?variant.language.culture:'invariant';var variantSegment=variant.segment;var currentCulture=index<vm.editors.length?vm.editors[index].culture:null;var currentSegment=index<vm.editors.length?vm.editors[index].segment:null;if(index>=vm.editors.length||currentCulture!==variantCulture||currentSegment!==variantSegment){vm.editors.splice(index,1,{compositeId:variant.compositeId,content:variant,culture:variantCulture,segment:variantSegment});}else{vm.editors[index].content=variant;}}
function openSplitView(selectedVariant){var contentApp=vm.content.apps.find(function(app){return app.alias==='umbContent';});if(contentApp){selectApp(contentApp);}
insertVariantEditor(vm.editors.length,selectedVariant);splitViewChanged();}
$scope.$on('editors.content.splitViewRequest',function(event,args){requestSplitView(args);});vm.requestSplitView=requestSplitView;function requestSplitView(args){var culture=args.culture;var segment=args.segment;var variant=_.find(vm.content.variants,function(v){return(!v.language||v.language.culture===culture)&&v.segment===segment;});if(variant!=null){openSplitView(variant);}}
function closeSplitView(editorIndex){var editor=vm.editors[editorIndex];vm.editors.splice(editorIndex,1);editor.content.active=false;$location.search({'cculture':vm.editors[0].content.language?vm.editors[0].content.language.culture:null,'csegment':vm.editors[0].content.segment});splitViewChanged();}
function selectVariant(variant,editorIndex){var variantCulture=variant.language?variant.language.culture:'invariant';var variantSegment=variant.segment||null;if(vm.editors.find(function(editor){return(!editor.content.language||editor.content.language.culture===variantCulture)&&editor.content.segment===variantSegment;})){return;}
if(editorIndex===0){$location.search('cculture',variantCulture).search('csegment',variantSegment);}else{insertVariantEditor(editorIndex,variant);}}
function selectApp(app){if(vm.onSelectApp){vm.onSelectApp({'app':app});}}
function selectAppAnchor(app,anchor){if(vm.onSelectAppAnchor){vm.onSelectAppAnchor({'app':app,'anchor':anchor});}}
function getScope(){return $scope;}}
angular.module('umbraco.directives').component('umbVariantContentEditors',umbVariantContentEditors);}());'use strict';(function(){'use strict';function umbNotificationList(){var vm=this;}
var umbNotificationListComponent={template:' <span class="db" ng-repeat="notification in vm.notifications">   <span class="db umb-list-item__description" ng-class="{\'text-success\': notification.type === 3, \'text-error\': notification.type === 2 || notification.type === 4}"> {{notification.message}} </span> </span> ',bindings:{notifications:'<'},controllerAs:'vm',controller:umbNotificationList};angular.module('umbraco.directives').component('umbVariantNotificationList',umbNotificationListComponent);}());'use strict';(function(){'use strict';function umbVariantStateController($scope,$element){var vm=this;}
var umbVariantStateComponent={template:' <span ng-switch="vm.variant.state"> <span ng-switch-when="NotCreated"><localize key="content_notCreated"></localize></span> <span ng-switch-when="Draft"><localize key="content_unpublished"></localize></span> <span ng-switch-when="PublishedPendingChanges"><localize key="content_publishedPendingChanges"></localize></span> <span ng-switch-when="Published"><localize key="content_published"></localize></span> </span> ',bindings:{variant:'<'},controllerAs:'vm',controller:umbVariantStateController};angular.module('umbraco.directives').component('umbVariantState',umbVariantStateComponent);}());'use strict';(function(){'use strict';function EditorSubHeaderDirective(){var directive={transclude:true,restrict:'E',replace:true,scope:{'appearance':'@?'},template:'<div class="umb-editor-sub-header umb-editor-sub-header--{{appearance}}" umb-sticky-bar ng-transclude> </div> '};return directive;}
angular.module('umbraco.directives').directive('umbEditorSubHeader',EditorSubHeaderDirective);}());'use strict';(function(){'use strict';function EditorSubHeaderContentLeftDirective(){var directive={transclude:true,restrict:'E',replace:true,template:'<div class="umb-editor-sub-header__content-left" ng-transclude></div> '};return directive;}
angular.module('umbraco.directives').directive('umbEditorSubHeaderContentLeft',EditorSubHeaderContentLeftDirective);}());'use strict';(function(){'use strict';function EditorSubHeaderContentRightDirective(){var directive={transclude:true,restrict:'E',replace:true,template:'<div class="umb-editor-sub-header__content-right" ng-transclude></div> '};return directive;}
angular.module('umbraco.directives').directive('umbEditorSubHeaderContentRight',EditorSubHeaderContentRightDirective);}());'use strict';(function(){'use strict';function EditorSubHeaderSectionDirective(){var directive={transclude:true,restrict:'E',replace:true,template:'<div class="umb-editor-sub-header__section" ng-transclude></div> '};return directive;}
angular.module('umbraco.directives').directive('umbEditorSubHeaderSection',EditorSubHeaderSectionDirective);}());'use strict';(function(){'use strict';function BreadcrumbsDirective($location,navigationService){function link(scope,el,attr,ctrl){scope.allowOnOpen=false;scope.open=function(ancestor){if(scope.onOpen&&scope.allowOnOpen){scope.onOpen({'ancestor':ancestor});}};scope.openPath=function(ancestor,event){if(event.ctrlKey||event.shiftKey||event.metaKey||event.button&&event.button===1){return;}
event.stopPropagation();event.preventDefault();var path=scope.pathTo(ancestor);$location.path(path);navigationService.clearSearch(['cculture','csegment']);};scope.pathTo=function(ancestor){return'/'+scope.entityType+'/'+scope.entityType+'/edit/'+ancestor.id;};function onInit(){if('onOpen' in attr){scope.allowOnOpen=true;}}
onInit();}
var directive={restrict:'E',replace:true,template:'<ul class="umb-breadcrumbs"> <li class="umb-breadcrumbs__ancestor" ng-repeat="ancestor in ancestors">  <a ng-if="(!$last || forNewEntity) && !allowOnOpen" ng-href="#{{::pathTo(ancestor)}}" ng-click="openPath(ancestor, $event)" class="umb-breadcrumbs__ancestor-link" title="{{ancestor.name}}">{{ancestor.name}}</a>  <a ng-if="(!$last || forNewEntity) && allowOnOpen" href="#" ng-click="open(ancestor)" class="umb-breadcrumbs__ancestor-link" title="{{ancestor.name}}" prevent-default>{{ancestor.name}}</a> <span ng-if="(!$last || forNewEntity)" class="umb-breadcrumbs__separator">&#47;</span> <span class="umb-breadcrumbs__ancestor-text" ng-if="$last && !forNewEntity" title="{{ancestor.name}}">{{ancestor.name}}</span> </li> </ul> ',scope:{ancestors:'=',forNewEntity:'=',entityType:'@',onOpen:'&'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbBreadcrumbs',BreadcrumbsDirective);}());'use strict';(function(){'use strict';function EditorDirective(){var directive={restrict:'E',replace:true,template:'<div class="umb-editor" ng-style="model.style" ng-class="{\'umb-editor--small\': model.size === \'small\', \'umb-editor--animating\': model.animating}"> <div ng-if="!model.view && !model.animating" ng-transclude></div> <div ng-if="model.view && !model.animating" ng-include="model.view"></div> <div ng-if="model.showOverlay" class="umb-editor__overlay"></div> </div>',scope:{model:'='}};return directive;}
angular.module('umbraco.directives').directive('umbEditor',EditorDirective);}());'use strict';(function(){'use strict';function EditorContainerDirective(overlayHelper){function link(scope,el,attr,ctrl){scope.numberOfOverlays=0;scope.$watch(function(){return overlayHelper.getNumberOfOverlays();},function(newValue){scope.numberOfOverlays=newValue;});}
var directive={transclude:true,restrict:'E',replace:true,template:' <div data-element="editor-container" class="umb-editor-container umb-panel-body umb-scrollable row-fluid" ng-class="{\'-stop-scrolling\': numberOfOverlays > 0}">  <div> <umb-overlay-backdrop></umb-overlay-backdrop> </div> <div class="umb-pane"> <div ng-transclude></div> </div> </div> ',link:link};return directive;}
angular.module('umbraco.directives').directive('umbEditorContainer',EditorContainerDirective);}());'use strict';(function(){'use strict';function EditorContentHeader(serverValidationManager,localizationService,editorState){function link(scope){var unsubscribe=[];if(!scope.serverValidationNameField){scope.serverValidationNameField='Name';}
if(!scope.serverValidationAliasField){scope.serverValidationAliasField='Alias';}
scope.isNew=scope.editor.content.state=='NotCreated';localizationService.localizeMany([scope.isNew?'placeholders_a11yCreateItem':'placeholders_a11yEdit','placeholders_a11yName',scope.isNew?'general_new':'general_edit']).then(function(data){scope.a11yMessage=data[0];scope.a11yName=data[1];var title=data[2]+': ';if(!scope.isNew){scope.a11yMessage+=' '+scope.editor.content.name;title+=scope.editor.content.name;}else{var name=editorState.current.contentTypeName;scope.a11yMessage+=' '+name;scope.a11yName=name+' '+scope.a11yName;title+=name;}
scope.$emit('$changeTitle',title);});scope.vm={};scope.vm.hasVariants=false;scope.vm.hasSubVariants=false;scope.vm.hasCulture=false;scope.vm.hasSegments=false;scope.vm.dropdownOpen=false;scope.vm.variantsWithError=[];scope.vm.defaultVariant=null;scope.vm.errorsOnOtherVariants=false;function updateVaraintErrors(){scope.content.variants.forEach(function(variant){variant.hasError=scope.variantHasError(variant);});checkErrorsOnOtherVariants();}
function checkErrorsOnOtherVariants(){var check=false;scope.content.variants.forEach(function(variant){if(variant.active!==true&&variant.hasError){check=true;}});scope.vm.errorsOnOtherVariants=check;}
function onVariantValidation(valid,errors,allErrors,culture,segment){if(errors.findIndex(function(error){return error.propertyAlias!==null;})===-1){return;}
if(culture==='invariant'&&scope.vm.defaultVariant){culture=scope.vm.defaultVariant.language.culture;}
var index=scope.vm.variantsWithError.findIndex(function(item){return item.culture===culture&&item.segment===segment;});if(valid===true){if(index!==-1){scope.vm.variantsWithError.splice(index,1);}}else{if(index===-1){scope.vm.variantsWithError.push({'culture':culture,'segment':segment});}}
scope.$evalAsync(updateVaraintErrors);}
function onInit(){scope.content.variants.forEach(function(variant){if(variant.language!==null&&variant.language.isDefault){scope.vm.defaultVariant=variant;}
if(variant.language!==null){scope.vm.hasCulture=true;}
if(variant.segment!==null){scope.vm.hasSegments=true;}});scope.vm.hasVariants=scope.vm.hasCulture||scope.vm.hasSegments;scope.vm.hasSubVariants=scope.vm.hasCulture&&scope.vm.hasSegments;updateVaraintErrors();scope.vm.variantMenu=[];if(scope.vm.hasCulture){scope.content.variants.forEach(function(v){if(v.language!==null&&v.segment===null){var variantMenuEntry={key:String.CreateGuid(),open:v.language&&v.language.culture===scope.editor.culture,variant:v,subVariants:scope.content.variants.filter(function(subVariant){return subVariant.language.culture===v.language.culture&&subVariant.segment!==null;})};scope.vm.variantMenu.push(variantMenuEntry);}});}else{scope.content.variants.forEach(function(v){scope.vm.variantMenu.push({key:String.CreateGuid(),variant:v});});}
scope.editor.variantApps.forEach(function(app){if(app.alias==='umbContent'){app.anchors=scope.editor.content.tabs;}});scope.content.variants.forEach(function(variant){if(variant.language&&scope.vm.defaultVariant&&variant.language.culture===scope.vm.defaultVariant.language.culture&&variant.segment===null){unsubscribe.push(serverValidationManager.subscribe(null,'invariant',null,onVariantValidation,null));}
unsubscribe.push(serverValidationManager.subscribe(null,variant.language!==null?variant.language.culture:null,null,onVariantValidation,variant.segment));});}
scope.goBack=function(){if(scope.onBack){scope.onBack();}};scope.selectVariant=function(event,variant){if(scope.onSelectVariant){scope.vm.dropdownOpen=false;scope.onSelectVariant({'variant':variant});}};scope.selectNavigationItem=function(item){if(scope.onSelectNavigationItem){scope.onSelectNavigationItem({'item':item});}};scope.selectAnchorItem=function(item,anchor){if(scope.onSelectAnchorItem){scope.onSelectAnchorItem({'item':item,'anchor':anchor});}};scope.closeSplitView=function(){if(scope.onCloseSplitView){scope.onCloseSplitView();}};scope.openInSplitView=function(event,variant){if(scope.onOpenInSplitView){scope.vm.dropdownOpen=false;scope.onOpenInSplitView({'variant':variant});}};scope.variantHasError=function(variant){if(scope.vm.variantsWithError.find(function(item){return(!variant.language||item.culture===variant.language.culture)&&item.segment===variant.segment;})!==undefined){return true;}
return false;};onInit();scope.$on('$destroy',function(){for(var u in unsubscribe){unsubscribe[u]();}});}
var directive={transclude:true,restrict:'E',replace:true,template:'<div data-element="editor-header" class="umb-editor-header" ng-class="{\'-split-view-active\': splitViewOpen === true}"> <div class="flex items-center" style="height: 100%;"> <div ng-if="showBackButton === true && splitViewOpen !== true" style="margin-right: 15px;"> <button type="button" class="umb-editor-header__back" ng-click="goBack()" prevent-default> <i class="fa fa-arrow-left" aria-hidden="true"></i> <span class="sr-only"><localize key="visuallyHiddenTexts_goBack">Go back</localize></span> </button> </div> <div class="flex items-center" style="flex: 1;"> <div id="nameField" class="umb-editor-header__name-and-description" style="flex: 1 1 auto;"> <div> <p tabindex="0" class="sr-only"> {{a11yMessage}} </p> </div> <div class="umb-editor-header__name-wrapper"> <label for="headerName" class="sr-only">{{a11yName}}</label> <ng-form name="headerNameForm"> <input data-element="editor-name-field" type="text" class="umb-editor-header__name-input" localize="placeholder" placeholder="@placeholders_entername" name="headerName" id="headerName" ng-model="name" ng-class="{\'name-is-empty\': $parent.name===null || $parent.name===\'\'}" ng-disabled="nameDisabled" umb-auto-focus focus-on-filled="true" val-server-field="{{serverValidationNameField}}" required aria-required="true" aria-invalid="{{contentForm.headerNameForm.headerName.$invalid ? true : false}}" autocomplete="off" maxlength="255"> </ng-form> <button type="button" ng-if="vm.hasVariants === true && hideChangeVariant !== true" class="umb-variant-switcher__toggle umb-outline" ng-click="vm.dropdownOpen = !vm.dropdownOpen" ng-class="{\'--error\': vm.errorsOnOtherVariants}"> <span ng-bind="editor.content.displayName"></span> <ins class="umb-variant-switcher__expand" ng-class="{\'icon-navigation-down\': !vm.dropdownOpen, \'icon-navigation-up\': vm.dropdownOpen}">&nbsp;</ins> </button> <span ng-if="vm.hasVariants === true && hideChangeVariant" class="umb-variant-switcher__toggle"> <span ng-bind="editor.content.displayName"></span> </span> <umb-dropdown ng-if="vm.dropdownOpen" class="umb-variant-switcher" ng-class="{\'--has-sub-variants\': vm.hasSubVariants === true}" on-close="vm.dropdownOpen = false" umb-keyboard-list> <umb-dropdown-item ng-repeat-start="entry in vm.variantMenu track by entry.key" class="umb-variant-switcher__item" ng-class="{\'--current\': entry.variant === editor.content, \'--active\': entry.variant.active && vm.dropdownOpen, \'--error\': entry.variant.active !== true && entry.variant.hasError, \'--state-notCreated\':entry.variant.state===\'NotCreated\' && entry.variant.name == null, \'--state-draft\':entry.variant.state===\'Draft\' || (entry.variant.state===\'NotCreated\' && entry.variant.name != null)}"> <button type="button" ng-if="entry.subVariants && entry.subVariants.length > 0" class="umb-variant-switcher__item-expand-button umb-outline" ng-click="entry.open = !entry.open"> <i class="icon icon-navigation-down" ng-if="entry.open"></i> <i class="icon icon-navigation-right" ng-if="!entry.open"></i> </button> <button type="button" class="umb-variant-switcher__name-wrapper umb-outline" ng-click="selectVariant($event, entry.variant)" prevent-default> <span class="umb-variant-switcher__name" ng-bind="entry.variant.displayName"></span> <umb-variant-state variant="entry.variant" class="umb-variant-switcher__state"></umb-variant-state> </button> <div ng-if="splitViewOpen !== true && !entry.variant.active" class="umb-variant-switcher__split-view umb-outline" ng-click="openInSplitView($event, entry.variant)">Open in split view</div> </umb-dropdown-item> <div ng-repeat-end ng-if="entry.open === true && entry.subVariants && entry.subVariants.length > 0" class="umb-variant-switcher__sub-variants umb-outline"> <umb-dropdown-item ng-repeat="subVariant in entry.subVariants track by $index" class="umb-variant-switcher__item" ng-class="{\'--current\': subVariant === editor.content, \'--active\': subVariant.active && vm.dropdownOpen, \'--error\': subVariant.active !== true && subVariant.hasError, \'--state-notCreated\':subVariant.state===\'NotCreated\', \'--state-draft\':subVariant.state===\'Draft\'}"> <button type="button" class="umb-variant-switcher__name-wrapper umb-outline" ng-click="selectVariant($event, subVariant)" prevent-default> <span class="umb-variant-switcher__name" ng-bind="subVariant.segment"></span> <umb-variant-state variant="subVariant" class="umb-variant-switcher__state"></umb-variant-state> </button> <div ng-if="splitViewOpen !== true && !subVariant.active" class="umb-variant-switcher__split-view umb-outline" ng-click="openInSplitView($event, subVariant)">Open in split view</div> </umb-dropdown-item> </div> </umb-dropdown> </div> </div> </div> <div ng-if="splitViewOpen"> <a class="umb-editor-header__close-split-view" ng-click="closeSplitView()"> <i class="icon-delete"></i> </a> </div> <div ng-if="editor.variantApps && splitViewOpen !== true"> <umb-editor-navigation data-element="editor-sub-views" navigation="editor.variantApps" on-select="selectNavigationItem(item)" on-anchor-select="selectAnchorItem(item, anchor)"> </umb-editor-navigation> </div> <div ng-if="menu.currentNode && splitViewOpen !== true && hideActionsMenu !== true"> <umb-editor-menu data-element="editor-actions" current-node="menu.currentNode" current-section="{{menu.currentSection}}"> </umb-editor-menu> </div> </div> </div> ',scope:{name:'=',nameDisabled:'<?',menu:'=',hideActionsMenu:'<?',content:'=',editor:'=',hideChangeVariant:'<?',onSelectNavigationItem:'&?',onSelectAnchorItem:'&?',showBackButton:'<?',onBack:'&?',splitViewOpen:'=?',onOpenInSplitView:'&?',onCloseSplitView:'&?',onSelectVariant:'&?',serverValidationNameField:'@?',serverValidationAliasField:'@?'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbEditorContentHeader',EditorContentHeader);}());'use strict';(function(){'use strict';function EditorFooterDirective(){var directive={transclude:true,restrict:'E',replace:true,template:' <div data-element="editor-footer" class="umb-editor-footer"> <div class="umb-editor-footer-content" ng-transclude></div> </div> '};return directive;}
angular.module('umbraco.directives').directive('umbEditorFooter',EditorFooterDirective);}());'use strict';(function(){'use strict';function EditorFooterContentLeftDirective(){var directive={transclude:true,restrict:'E',replace:true,template:'<div class="umb-editor-footer-content__left-side" ng-transclude></div> '};return directive;}
angular.module('umbraco.directives').directive('umbEditorFooterContentLeft',EditorFooterContentLeftDirective);}());'use strict';(function(){'use strict';function EditorFooterContentRightDirective(){var directive={transclude:true,restrict:'E',replace:true,template:'<div class="umb-editor-footer-content__right-side" ng-transclude></div> '};return directive;}
angular.module('umbraco.directives').directive('umbEditorFooterContentRight',EditorFooterContentRightDirective);}());'use strict';(function(){'use strict';function EditorHeaderDirective(editorService,localizationService,editorState,$rootScope){function link(scope,$injector){scope.vm={};scope.vm.dropdownOpen=false;scope.vm.currentVariant='';scope.loading=true;scope.accessibility={};scope.accessibility.a11yMessage='';scope.accessibility.a11yName='';scope.accessibility.a11yMessageVisible=false;scope.accessibility.a11yNameVisible=false;if(editorState.current){setAccessibilityForEditorState();scope.loading=false;}else{scope.loading=false;}
scope.goBack=function(){if(scope.onBack){scope.onBack();}};scope.selectNavigationItem=function(item){if(scope.onSelectNavigationItem){scope.onSelectNavigationItem({'item':item});}};scope.openIconPicker=function(){var iconPicker={icon:scope.icon.split(' ')[0],color:scope.icon.split(' ')[1],submit:function submit(model){if(model.icon){if(model.color){scope.icon=model.icon+' '+model.color;}else{scope.icon=model.icon;}
scope.iconForm.$setDirty();}
editorService.close();},close:function close(){editorService.close();}};editorService.iconPicker(iconPicker);};function setAccessibilityForEditorState(){var isNew=editorState.current.id===0||editorState.current.id==='0'||editorState.current.id===-1||editorState.current.id===0||editorState.current.id==='-1';var contentTypeName='';if(editorState.current.contentTypeName){contentTypeName=editorState.current.contentTypeName;}
var setTitle=false;if(scope.setpagetitle!==undefined){setTitle=scope.setpagetitle;}
setAccessibilityHeaderDirective(isNew,scope.editorfor,scope.nameLocked,scope.name,contentTypeName,setTitle);}
function setAccessibilityHeaderDirective(isNew,editorFor,nameLocked,entityName,contentTypeName,setTitle){var localizeVars=[isNew?'visuallyHiddenTexts_createItem':'visuallyHiddenTexts_edit','visuallyHiddenTexts_name',isNew?'general_new':'general_edit'];if(editorFor){localizeVars.push(editorFor);}
localizationService.localizeMany(localizeVars).then(function(data){if(nameLocked){scope.accessibility.a11yName=entityName;if(setTitle){SetPageTitle(entityName);}}else{scope.accessibility.a11yMessage=data[0];scope.accessibility.a11yName=data[1];var title=data[2]+':';if(!isNew){scope.accessibility.a11yMessage+=' '+entityName;title+=' '+entityName;}else{var name='';if(contentTypeName){name=editorState.current.contentTypeName;}else if(editorFor){name=data[3];}
if(name!==''){scope.accessibility.a11yMessage+=' '+name;scope.accessibility.a11yName=name+' '+scope.accessibility.a11yName;title+=' '+name;}}
if(setTitle&&title!==data[2]+':'){SetPageTitle(title);}}
scope.accessibility.a11yMessageVisible=!isEmptyOrSpaces(scope.accessibility.a11yMessage);scope.accessibility.a11yNameVisible=!isEmptyOrSpaces(scope.accessibility.a11yName);});}
function isEmptyOrSpaces(str){return str===null||str===undefined||str.trim==='';}
function SetPageTitle(title){scope.$emit('$changeTitle',title);}
$rootScope.$on('$setAccessibleHeader',function(event,isNew,editorFor,nameLocked,name,contentTypeName,setTitle){setAccessibilityHeaderDirective(isNew,editorFor,nameLocked,name,contentTypeName,setTitle);});}
var directive={transclude:true,restrict:'E',replace:true,template:' <div data-element="editor-header" class="umb-editor-header" ng-class="{\'-split-view-active\': splitViewOpen === true}"> <umb-loader ng-show="loading"></umb-loader> <div class="flex items-center" style="height: 100%;" ng-hide="loading"> <div ng-if="showBackButton === true && splitViewOpen !== true" style="margin-right: 15px;"> <button type="button" class="umb-editor-header__back" ng-click="goBack()" prevent-default> <i class="fa fa-arrow-left" aria-hidden="true"></i> <span class="sr-only"><localize key="visuallyHiddenTexts_goBack">Go back</localize></span> </button> </div> <div class="flex items-center" style="flex: 1;"> <ng-form data-element="editor-icon" name="iconForm"> <button type="button" class="umb-panel-header-icon" ng-if="!hideIcon" ng-click="openIconPicker()" ng-class="{\'-placeholder\': $parent.icon===\'\' || $parent.icon===null}" title="{{$parent.icon}}"> <i class="icon {{$parent.icon}}" ng-if="$parent.icon!==\'\' && $parent.icon!==null" aria-hidden="true"></i> <span class="umb-panel-header-icon-text" ng-if="$parent.icon===\'\' || $parent.icon===null"> <localize key="settings_addIcon">Add icon</localize> </span> </button> </ng-form> <div id="nameField" class="umb-editor-header__name-and-description" style="flex: 1 1 auto;"> <div> <p tabindex="0" class="sr-only" ng-show="accessibility.a11yMessageVisible"> {{accessibility.a11yMessage}} </p> </div> <div class="umb-editor-header__name-wrapper" ng-show="!nameLocked || !hideAlias"> <label for="headerName" class="sr-only" ng-show="accessibility.a11yNameVisible">{{accessibility.a11yName}}</label> <ng-form name="headerNameForm"> <input data-element="editor-name-field" no-password-manager type="text" id="headerName" class="umb-editor-header__name-input" localize="placeholder" placeholder="@placeholders_entername" name="headerName" ng-show="!nameLocked" ng-model="name" ng-class="{\'name-is-empty\': $parent.name===null || $parent.name===\'\'}" umb-auto-focus focus-on-filled="true" val-server-field="Name" required aria-required="true" aria-invalid="{{contentForm.headerNameForm.headerName.$invalid ? true : false}}" autocomplete="off" maxlength="255"> </ng-form> <umb-generate-alias data-element="editor-alias" class="umb-panel-header-alias" ng-if="!hideAlias" alias="$parent.alias" alias-from="$parent.name" enable-lock="aliasLocked !== true" validation-position="\'right\'" server-validation-field="Alias"> </umb-generate-alias> </div> <h1 class="umb-panel-header-name" id="editor-headline-{{$id}}" ng-if="nameLocked" title="{{key}}">{{ name }}</h1> <input data-element="editor-description" no-password-manager type="text" class="umb-panel-header-description" localize="placeholder" placeholder="@placeholders_enterDescription" ng-if="!hideDescription && !descriptionLocked" ng-model="$parent.description"> <p class="umb-panel-header-locked-description" id="editor-description-{{$id}}" ng-if="descriptionLocked">{{ description }}</p> </div> </div> <div ng-if="navigation && splitViewOpen !== true"> <umb-editor-navigation data-element="editor-sub-views" navigation="navigation" on-select="selectNavigationItem(item)"> </umb-editor-navigation> </div> <div ng-if="menu.currentNode && splitViewOpen !== true && hideActionsMenu !== true"> <umb-editor-menu data-element="editor-actions" current-node="menu.currentNode" current-section="{{menu.currentSection}}"> </umb-editor-menu> </div> </div> </div> ',scope:{name:'=',nameLocked:'=',menu:'=',hideActionsMenu:'<?',icon:'=',hideIcon:'@',alias:'=',aliasLocked:'<',hideAlias:'=',description:'=',hideDescription:'@',descriptionLocked:'@',navigation:'=',onSelectNavigationItem:'&?',key:'=',onBack:'&?',showBackButton:'<?',editorfor:'=',setpagetitle:'='},link:link};return directive;}
angular.module('umbraco.directives').directive('umbEditorHeader',EditorHeaderDirective);}());'use strict';(function(){'use strict';function EditorMenuDirective($injector,treeService,navigationService,umbModelMapper,appState){function link(scope,el,attr,ctrl){scope.dropdown={isOpen:false};function onInit(){getOptions();}
scope.executeMenuItem=function(action){appState.setMenuState('currentNode',scope.currentNode);navigationService.executeMenuAction(action,scope.currentNode,scope.currentSection);scope.dropdown.isOpen=false;};function getOptions(){if(!scope.currentNode){return;}
if(!scope.actions){treeService.getMenu({treeNode:scope.currentNode}).then(function(data){scope.actions=data.menuItems;});}};onInit();}
var directive={restrict:'E',replace:true,template:'<div class="pull-right" style="position: relative;"> <umb-button type="button" button-style="white" action="dropdown.isOpen = !dropdown.isOpen" label-key="general_actions" show-caret="true" has-popup="true" is-expanded="dropdown.isOpen"> </umb-button> <umb-dropdown ng-if="dropdown.isOpen" class="umb-actions" on-close="dropdown.isOpen = false" deep-blur="dropdown.isOpen = false"> <umb-dropdown-item class="umb-action" ng-class="{\'sep\':action.separatorm, \'-opens-dialog\': action.opensDialog}" ng-repeat="action in actions"> <button type="button" ng-click="executeMenuItem(action)"> <i class="icon icon-{{action.cssclass}}" aria-hidden="true"></i>  <span class="menu-label" aria-hidden="true">{{action.name}}</span>  <span class="sr-only" ng-if="action.textDescription"> <localize key="visuallyHiddenTexts_{{action.alias}}Description" tokens="[currentNode.name]"></localize> </span>  <span class="sr-only" ng-if="!action.textDescription">{{action.name}} {{currentNode.name}}</span> </button> </umb-dropdown-item> </umb-dropdown> </div> ',link:link,scope:{currentNode:'=',currentSection:'@'}};return directive;}
angular.module('umbraco.directives').directive('umbEditorMenu',EditorMenuDirective);}());'use strict';(function(){'use strict';function EditorNavigationDirective($window,$timeout,eventsService,windowResizeListener){function link(scope){scope.showNavigation=true;scope.showMoreButton=false;scope.showDropdown=false;scope.overflowingItems=0;scope.itemsLimit=6;scope.moreButton={alias:'more',active:false,name:'More'};scope.openNavigationItem=function(item){scope.showDropdown=false;runItemAction(item);setItemToActive(item);if(scope.onSelect){scope.onSelect({'item':item});}
eventsService.emit('app.tabChange',item);};scope.openAnchorItem=function(item,anchor){if(scope.onAnchorSelect){scope.onAnchorSelect({'item':item,'anchor':anchor});}
if(item.active!==true){scope.openNavigationItem(item);}};scope.toggleDropdown=function(){scope.showDropdown=!scope.showDropdown;};scope.hideDropdown=function(){scope.showDropdown=false;};function onInit(){var firstRun=true;scope.$watch('navigation.length',function(newVal,oldVal){if(firstRun||newVal!==undefined&&newVal!==oldVal){firstRun=false;scope.showNavigation=newVal>1;calculateVisibleItems($window.innerWidth);}});}
function calculateVisibleItems(windowWidth){if(!windowWidth){return;}
scope.itemsLimit=0;if(windowWidth>1500){scope.itemsLimit=6;}else if(windowWidth>700){scope.itemsLimit=4;}
if(scope.navigation.length>scope.itemsLimit){scope.showMoreButton=true;scope.overflowingItems=scope.itemsLimit-scope.navigation.length;}else{scope.showMoreButton=false;scope.overflowingItems=0;}}
function runItemAction(selectedItem){if(selectedItem.action){selectedItem.action(selectedItem);}}
function setItemToActive(selectedItem){if(selectedItem.view){angular.forEach(scope.navigation,function(item,index){item.active=false;});selectedItem.active=true;var selectedItemIndex=scope.navigation.indexOf(selectedItem);if(selectedItemIndex+1>scope.itemsLimit){scope.moreButton.active=true;}else{scope.moreButton.active=false;}}}
var resizeCallback=function resizeCallback(size){if(size&&size.width){calculateVisibleItems(size.width);}};windowResizeListener.register(resizeCallback);scope.$on('$destroy',function(){windowResizeListener.unregister(resizeCallback);});onInit();}
var directive={restrict:'E',replace:true,template:'<ul class="umb-sub-views-nav" ng-show="showNavigation"> <li ng-repeat="navItem in navigation | limitTo: itemsLimit"> <div ng-show="navItem.alias !== \'more\'" ng-class="navItem.errorClass"> <umb-editor-navigation-item item="navItem" on-open="openNavigationItem(item)" on-open-anchor="openAnchorItem(item, anchor)" hotkey="$index + 1"> </umb-editor-navigation-item> </div> </li> <li ng-show="showMoreButton" style="position: relative;"> <div class="umb-sub-views-nav-item umb-sub-views-nav-item-more"> <a data-element="sub-view-{{moreButton.alias}}" ng-click="toggleDropdown()" ng-class="{\'is-active\': moreButton.active}"> <div class="umb-sub-views-nav-item-more__icon"><i></i><i></i><i></i></div> <span class="umb-sub-views-nav-item-text">{{ moreButton.name }}</span> </a> <umb-dropdown ng-show="showDropdown" on-close="hideDropdown()" class="umb-sub-views-nav-item-more__dropdown"> <umb-dropdown-item ng-repeat="navItem in navigation | limitTo: overflowingItems"> <umb-editor-navigation-item item="navItem" on-open="openNavigationItem(item)" on-open-anchor="openAnchorItem(item, anchor)" index="{{$index}}"> </umb-editor-navigation-item> </umb-dropdown-item> </umb-dropdown> </div> </li> </ul> ',scope:{navigation:'=',onSelect:'&',onAnchorSelect:'&'},link:link};return directive;}
angular.module('umbraco.directives.html').directive('umbEditorNavigation',EditorNavigationDirective);}());'use strict';(function(){'use strict';function UmbEditorNavigationItemController($scope,$element,$attrs){var vm=this;vm.clicked=function(){vm.onOpen({item:vm.item});};vm.anchorClicked=function(anchor,$event){vm.onOpenAnchor({item:vm.item,anchor:anchor});$event.stopPropagation();$event.preventDefault();};vm.mouseOver=function(){$scope.$digest();};var componentNode=$element[0];componentNode.classList.add('umb-sub-views-nav-item');componentNode.addEventListener('mouseover',vm.mouseOver);$scope.$on('$destroy',function(){componentNode.removeEventListener('mouseover',vm.mouseOver);});}
angular.module('umbraco.directives.html').component('umbEditorNavigationItem',{template:'<button data-element="sub-view-{{vm.item.alias}}" type="button" ng-click="vm.clicked()" hotkey="{{::vm.hotkey}}" hotkey-when-hidden="true" ng-class="{\'is-active\': vm.item.active, \'-has-error\': vm.item.hasError}" ng-disabled="vm.item.disabled" class="umb-sub-views-nav-item__action umb-outline umb-outline--thin"> <i class="icon {{ vm.item.icon }}" aria-hidden="true"></i> <span class="umb-sub-views-nav-item-text">{{ vm.item.name }}</span> <div ng-show="vm.item.badge" class="badge -type-{{vm.item.badge.type}}">{{vm.item.badge.count}}</div> </button> <ul class="dropdown-menu umb-sub-views-nav-item__anchor_dropdown" ng-if="vm.item.anchors && vm.item.anchors.length > 1"> <li ng-repeat="anchor in vm.item.anchors" ng-class="{\'is-active\': vm.item.active && anchor.active}"> <a href="#group-{{anchor.id}}" ng-click="vm.anchorClicked(anchor, $event)" prevent-default> <span class="sr-only"><localize key="visuallyHiddenTexts_jumpTo">Jump to</localize></span> {{anchor.label}} <span class="sr-only"><localize key="visuallyHiddenTexts_group"> group</localize></span> </a> </li> </ul> ',controller:UmbEditorNavigationItemController,controllerAs:'vm',bindings:{item:'=',onOpen:'&',onOpenAnchor:'&',hotkey:'<'}});}());'use strict';(function(){'use strict';function EditorsDirective($timeout,eventsService){function link(scope,el,attr,ctrl){var evts=[];var allowedNumberOfVisibleEditors=3;var aboveBackDropCssClass='above-backdrop';var sectionId='#leftcolumn';var isLeftColumnAbove=false;scope.editors=[];function addEditor(editor){editor.inFront=true;editor.moveRight=true;editor.level=0;editor.styleIndex=0;scope.editors.push(editor);if(scope.editors.length===1){isLeftColumnAbove=$(sectionId).hasClass(aboveBackDropCssClass);if(isLeftColumnAbove){$(sectionId).removeClass(aboveBackDropCssClass);}}
$timeout(function(){editor.moveRight=false;});editor.animating=true;setTimeout(revealEditorContent.bind(this,editor),400);updateEditors();}
function removeEditor(editor){editor.moveRight=true;editor.animating=true;setTimeout(removeEditorFromDOM.bind(this,editor),400);updateEditors(-1);if(scope.editors.length===1){if(isLeftColumnAbove){$('#leftcolumn').addClass(aboveBackDropCssClass);}
isLeftColumnAbove=false;}}
function revealEditorContent(editor){editor.animating=false;scope.$digest();}
function removeEditorFromDOM(editor){var index=scope.editors.indexOf(editor);if(index!==-1){scope.editors.splice(index,1);}
updateEditors();scope.$digest();}
function updateEditors(offset){offset=offset||0;var len=scope.editors.length;var calcLen=len+offset;var ceiling=Math.min(calcLen,allowedNumberOfVisibleEditors);var origin=Math.max(calcLen-1,0)-ceiling;var i=0;while(i<len){var iEditor=scope.editors[i];iEditor.styleIndex=Math.min(i+1,allowedNumberOfVisibleEditors);iEditor.level=Math.max(i-origin,-1);iEditor.inFront=iEditor.level>=ceiling;i++;}}
evts.push(eventsService.on('appState.editors.open',function(name,args){addEditor(args.editor);}));evts.push(eventsService.on('appState.editors.close',function(name,args){if(args&&args.editor){removeEditor(args.editor);}
if(args&&!args.editor&&args.editors.length===0){scope.editors=[];}}));scope.$on('$destroy',function(){for(var e in evts){eventsService.unsubscribe(evts[e]);}});}
var directive={restrict:'E',replace:true,template:'<div class="umb-editors"> <umb-editor-repeater class="umb-editor" ng-repeat="model in editors" ng-class="{\'umb-editor--small\': model.size === \'small\', \'umb-editor--medium\': model.size === \'medium\', \'umb-editor--animating\': model.animating, \'umb-editor--notInFront\': model.inFront !== true, \'umb-editor--infiniteMode\': model.infiniteMode, \'umb-editor--moveRight\': model.moveRight, \'umb-editor--n0\': model.styleIndex === 0, \'umb-editor--n1\': model.styleIndex === 1, \'umb-editor--n2\': model.styleIndex === 2, \'umb-editor--n3\': model.styleIndex === 3, \'umb-editor--outOfRange\': model.level === -1, \'umb-editor--level0\': model.level === 0, \'umb-editor--level1\': model.level === 1, \'umb-editor--level2\': model.level === 2, \'umb-editor--level3\': model.level === 3}"> <div ng-if="!model.view && !model.animating" ng-transclude></div> <div ng-if="model.view && !model.animating && !model.$parentScope" ng-include="model.view"></div> <div ng-show="model.$parentScope" class="scoped-view"></div> <div class="umb-editor__overlay"></div> </umb-editor-repeater> </div> ',link:link};return directive;}
function EditorRepeaterDirective($http,$templateCache,$compile,angularHelper){function link(scope,el,attr,ctrl){var editor=scope&&scope.$parent?scope.$parent.model:null;if(!editor){return;}
var unsubscribe=[];if(editor.$parentScope){var element=el.find('.scoped-view');$http.get(editor.view,{cache:$templateCache}).then(function(response){var templateScope=editor.$parentScope.$new();unsubscribe.push(function(){templateScope.$destroy();});templateScope.model=editor;element.show();if(editor.$parentForm){element.html('<ng-form name=\'infiniteEditorForm\'>'+response.data+'</ng-form>');}
$compile(element)(templateScope);if(editor.$parentForm){editor.$parentForm.$addControl(templateScope.infiniteEditorForm);}});}
scope.$on('$destroy',function(){for(var i=0;i<unsubscribe.length;i++){unsubscribe[i]();}});}
var directive={restrict:'E',replace:true,transclude:true,scope:{editors:'='},template:'<div ng-transclude></div>',link:link};return directive;}
angular.module('umbraco.directives').directive('umbEditors',EditorsDirective);angular.module('umbraco.directives').directive('umbEditorRepeater',EditorRepeaterDirective);}());'use strict';(function(){'use strict';function EditorSubViewDirective(){function link(scope){if(!scope.model.view){throw'No view defined for the content app';}}
var directive={restrict:'E',replace:true,template:'<div class="umb-editor-sub-view" ng-class="\'sub-view-\' + model.name" val-sub-view="model"> <div class="umb-editor-sub-view__content" ng-show="model.active === true" ng-include="model.view"> </div> </div> ',scope:{model:'=',variantContent:'=?',content:'='},link:link};return directive;}
angular.module('umbraco.directives').directive('umbEditorSubView',EditorSubViewDirective);}());'use strict';(function(){'use strict';function EditorSubViewsDirective(){function link(scope,el,attr,ctrl){}
var directive={restrict:'E',replace:true,template:'<div class="umb-editor-sub-views"> <div id="sub-view-{{$index}}" class="umb-editor-sub-view" ng-repeat="subView in subViews track by subView.alias" ng-class="\'sub-view-\' + subView.name" val-sub-view="subView"> <div class="umb-editor-sub-view__content" ng-show="subView.active === true" ng-include="subView.view"> </div> </div> </div> ',scope:{subViews:'=',model:'='},link:link};return directive;}
angular.module('umbraco.directives').directive('umbEditorSubViews',EditorSubViewsDirective);}());'use strict';(function(){'use strict';function EditorViewDirective(){function link(scope,el,attr){if(attr.footer){scope.footer=attr.footer;}}
var directive={transclude:true,restrict:'E',replace:true,template:' <div class="umb-panel umb-editor-wrapper" ng-class="{ \'-no-footer\': footer === \'false\' }" ng-transclude> </div> ',link:link};return directive;}
angular.module('umbraco.directives').directive('umbEditorView',EditorViewDirective);}());'use strict';(function(){'use strict';function DeepBlurDirective($timeout){function controller($scope,$element,$attrs){var leaveExpr=$attrs.deepBlur,dom=$element[0];function containsDom(parent,dom){while(dom){if(dom===parent){return true;}
dom=dom.parentNode;}
return false;}
function onBlur(e){var targetElement=e.relatedTarget;if(!containsDom(dom,targetElement)){$timeout(function(){$scope.$apply(leaveExpr);},10);}}
dom.addEventListener('blur',onBlur,true);}
var directive={restrict:'A',controller:controller};return directive;}
angular.module('umbraco.directives').directive('deepBlur',DeepBlurDirective);}());'use strict';(function(){'use strict';function onDelayedMouseleaveDirective($timeout,$parse){function link(scope,element,attrs,ctrl){var active=false;var fn=$parse(attrs.onDelayedMouseleave);var leave_f=function leave_f(event){var callback=function callback(){fn(scope,{$event:event});};active=false;$timeout(function(){if(active===false){scope.$apply(callback);}},650);};var enter_f=function enter_f(event,args){active=true;};element.on('mouseleave',leave_f);element.on('mouseenter',enter_f);scope.$on('$destroy',function(){element.off('mouseleave',leave_f);element.off('mouseenter',enter_f);});}
var directive={restrict:'A',link:link};return directive;}
angular.module('umbraco.directives').directive('onDelayedMouseleave',onDelayedMouseleaveDirective);}());'use strict';(function(){'use strict';function onDragEndDirective(){function link(scope,elm,attrs){var f=function f(){scope.$apply(attrs.onDragEnd);};elm.on('dragend',f);scope.$on('$destroy',function(){elm.off('dragend',f);});}
var directive={link:link};return directive;}
angular.module('umbraco.directives').directive('onDragEnd',onDragEndDirective);}());'use strict';(function(){'use strict';function onDragEnterDirective(){function link(scope,elm,attrs){var f=function f(){scope.$apply(attrs.onDragEnter);};elm.on('dragenter',f);scope.$on('$destroy',function(){elm.off('dragenter',f);});}
var directive={link:link};return directive;}
angular.module('umbraco.directives').directive('onDragEnter',onDragEnterDirective);}());'use strict';(function(){'use strict';function onDragLeaveDirective($timeout){return function(scope,elm,attrs){var f=function f(event){var rect=this.getBoundingClientRect();var getXY=function getCursorPosition(event){var x,y;if(typeof event.clientX==='undefined'){x=event.pageX+document.documentElement.scrollLeft;y=event.pageY+document.documentElement.scrollTop;}else{x=event.clientX+document.body.scrollLeft+document.documentElement.scrollLeft;y=event.clientY+document.body.scrollTop+document.documentElement.scrollTop;}
return{x:x,y:y};};var e=getXY(event.originalEvent);if(e.x>rect.left+rect.width-1||e.x<rect.left||e.y>rect.top+rect.height-1||e.y<rect.top){scope.$apply(attrs.onDragLeave);}};elm.on('dragleave',f);scope.$on('$destroy',function(){elm.off('dragleave',f);});};}
angular.module('umbraco.directives').directive('onDragLeave',onDragLeaveDirective);}());'use strict';(function(){'use strict';function onDragOverDirective(){function link(scope,elm,attrs){var f=function f(){scope.$apply(attrs.onDragOver);};elm.on('dragover',f);scope.$on('$destroy',function(){elm.off('dragover',f);});}
var directive={link:link};return directive;}
angular.module('umbraco.directives').directive('onDragOver',onDragOverDirective);}());'use strict';(function(){'use strict';function onDragStartDirective($timeout){function link(scope,elm,attrs){var f=function f(){scope.$apply(attrs.onDragStart);};elm.on('dragstart',f);scope.$on('$destroy',function(){elm.off('dragstart',f);});}
var directive={link:link};return directive;}
angular.module('umbraco.directives').directive('onDragStart',onDragStartDirective);}());'use strict';(function(){'use strict';function onDropDirective(){function link(scope,elm,attrs){var f=function f(){scope.$apply(attrs.onDrop);};elm.on('drop',f);scope.$on('$destroy',function(){elm.off('drop',f);});}
var directive={link:link};return directive;}
angular.module('umbraco.directives').directive('onDrop',onDropDirective);}());'use strict';(function(){'use strict';function onOutsideClickDirective($timeout,angularHelper){return function(scope,element,attrs){var eventBindings=[];function oneTimeClick(event){var el=event.target.nodeName;var els=['INPUT','A','BUTTON'];if(els.indexOf(el)>=0){return;}
var parents=$(event.target).parents('a,button,.umb-overlay,.umb-tour');if(parents.length>0){return;}
var oldDialog=$(event.target).parents('#old-dialog-service');if(oldDialog.length===1){return;}
var floatpanel=$(event.target).closest('.mce-floatpanel');if(floatpanel.length===1){return;}
var flatpickr=$(event.target).closest('.flatpickr-calendar');if(flatpickr.length===1){return;}
if($(element).has($(event.target)).length>0){return;}
scope.$apply(attrs.onOutsideClick);}
$timeout(function(){if('bindClickOn' in attrs){eventBindings.push(scope.$watch(function(){return attrs.bindClickOn;},function(newValue){if(newValue==='true'){$(document).on('click',oneTimeClick);}else{$(document).off('click',oneTimeClick);}}));}else{$(document).on('click',oneTimeClick);}
scope.$on('$destroy',function(){$(document).off('click',oneTimeClick);for(var e in eventBindings){eventBindings[e]();}});});};}
angular.module('umbraco.directives').directive('onOutsideClick',onOutsideClickDirective);}());'use strict';(function(){'use strict';function onRightClickDirective($parse){document.oncontextmenu=function(e){if(e.target.hasAttribute('on-right-click')){e.preventDefault();e.stopPropagation();return false;}};return function(scope,el,attrs){el.on('contextmenu',function(e){e.preventDefault();e.stopPropagation();var fn=$parse(attrs.onRightClick);scope.$apply(function(){fn(scope,{$event:e});});return false;});};}
angular.module('umbraco.directives').directive('onRightClick',onRightClickDirective);}());'use strict';angular.module('umbraco.directives').directive('checklistModel',['$parse','$compile',function($parse,$compile){function contains(arr,item){if(Utilities.isArray(arr)){for(var i=0;i<arr.length;i++){if(angular.equals(arr[i],item)){return true;}}}
return false;}
function add(arr,item){arr=Utilities.isArray(arr)?arr:[];for(var i=0;i<arr.length;i++){if(angular.equals(arr[i],item)){return arr;}}
arr.push(item);return arr;}
function remove(arr,item){if(Utilities.isArray(arr)){for(var i=0;i<arr.length;i++){if(angular.equals(arr[i],item)){arr.splice(i,1);break;}}}
return arr;}
function postLinkFn(scope,elem,attrs){$compile(elem)(scope);var getter=$parse(attrs.checklistModel);var setter=getter.assign;var value=$parse(attrs.checklistValue)(scope.$parent);scope.$watch('checked',function(newValue,oldValue){if(newValue===oldValue){return;}
var current=getter(scope.$parent);if(newValue===true){setter(scope.$parent,add(current,value));}else{setter(scope.$parent,remove(current,value));}});scope.$parent.$watch(attrs.checklistModel,function(newArr,oldArr){scope.checked=contains(newArr,value);},true);}
return{restrict:'A',priority:1000,terminal:true,scope:true,compile:function compile(tElement,tAttrs){if(tElement[0].tagName!=='INPUT'||!tElement.attr('type','checkbox')){throw'checklist-model should be applied to `input[type="checkbox"]`.';}
if(!tAttrs.checklistValue){throw'You should provide `checklist-value`.';}
tElement.removeAttr('checklist-model');tElement.attr('ng-model','checked');return postLinkFn;}};}]);'use strict';angular.module('umbraco.directives').directive('contenteditable',function(){return{require:'ngModel',link:function link(scope,element,attrs,ngModel){function read(){ngModel.$setViewValue(element.html());}
ngModel.$render=function(){element.html(ngModel.$viewValue||'');};element.on('focus',function(){var range=document.createRange();range.selectNodeContents(element[0]);var sel=window.getSelection();sel.removeAllRanges();sel.addRange(range);});element.on('blur keyup change',function(){scope.$apply(read);});}};});'use strict';function fixNumber($parse){return{restrict:'A',require:'ngModel',link:function link(scope,elem,attrs,ctrl){var modelVal=scope.$eval(attrs.ngModel);if(modelVal){var asNum=parseFloat(modelVal,10);if(!isNaN(asNum)){$parse(attrs.ngModel).assign(scope,asNum);}}
ctrl.$parsers.push(function(value){if(value===0){return 0;}
return parseFloat(value||'',10);});ctrl.$formatters.push(function(value){if(Utilities.isString(value)){return parseFloat(value,10);}
return value;});if(typeof elem.prop('validity')==='undefined'){return;}
elem.on('input',function(e){var validity=elem.prop('validity');scope.$apply(function(){ctrl.$setValidity('number',!validity.badInput);});});}};}
angular.module('umbraco.directives').directive('fixNumber',fixNumber);'use strict';angular.module('umbraco.directives').directive('focusWhen',function($timeout){return{restrict:'A',link:function link(scope,elm,attrs,ctrl){var delayTimer;attrs.$observe('focusWhen',function(newValue){if(newValue==='true'&&document.activeelement!==elm[0]){delayTimer=$timeout(function(){elm[0].focus();});}});scope.$on('$destroy',function(){$timeout.cancel(delayTimer);});}};});'use strict';function hexBgColor(){return{restrict:'A',link:function link(scope,element,attr,formCtrl){function setBackgroundColor(color){element[0].style.backgroundColor='#'+color;}
if(attr.hexBgInline===undefined||attr.hexBgInline!==undefined&&attr.hexBgInline==='true'){var origColor=null;if(attr.hexBgOrig){origColor=attr.hexBgOrig;}
attr.$observe('hexBgColor',function(newVal){if(newVal){if(!origColor){origColor=element.css('border-color');}
var match=newVal.match(/^#?([0-9a-f]{3}|[0-9a-f]{6})$/i);if(match&&match.length){setBackgroundColor(match[1]);return;}
match=newVal.match(/^#?([0-9a-f]{4}|[0-9a-f]{8})$/i);if(match&&match.length){setBackgroundColor(match[1]);return;}}
setBackgroundColor(origColor);});}}};}
angular.module('umbraco.directives').directive('hexBgColor',hexBgColor);'use strict';angular.module('umbraco.directives').directive('hotkey',function($window,keyboardService,$log,focusService){return function(scope,el,attrs){var options={};var keyCombo=attrs.hotkey;if(!keyCombo){keyCombo=scope.$eval(attrs['hotkey']);}
function activate(){if(keyCombo){if(keyCombo.length===1){options={inputDisabled:true};}
keyboardService.bind(keyCombo,function(){focusService.rememberFocus();var element=$(el);var activeElementType=document.activeElement.tagName;var clickableElements=['A','BUTTON'];if(element.is('a,div,button,input[type=\'button\'],input[type=\'submit\'],input[type=\'checkbox\']')&&!element.is(':disabled')){if(element.is(':visible')||attrs.hotkeyWhenHidden){if(attrs.hotkeyWhen&&attrs.hotkeyWhen==='false'){return;}
if(keyCombo==='enter'&&clickableElements.indexOf(activeElementType)===0){document.activeElement.trigger('click');}else{element.trigger('click');}}}else{element.trigger('focus');}},options);el.on('$destroy',function(){keyboardService.unbind(keyCombo);});}}
activate();};});'use strict';angular.module('umbraco.directives').directive('preventDefault',function(){return function(scope,element,attrs){var enabled=true;if(attrs.preventDefault){attrs.$observe('preventDefault',function(newVal){enabled=newVal==='false'||newVal===0||newVal===false?false:true;});}
$(element).on('click',function(event){if(event.metaKey||event.ctrlKey){return;}else{if(enabled===true){event.preventDefault();}}});};});'use strict';angular.module('umbraco.directives').directive('preventEnterSubmit',function(){return function(scope,element,attrs){var enabled=true;if(attrs.preventEnterSubmit){attrs.$observe('preventEnterSubmit',function(newVal){enabled=newVal==='false'||newVal===0||newVal===false?false:true;});}
$(element).on('keypress',function(event){if(event.which===13){event.preventDefault();}});};});'use strict';angular.module('umbraco.directives').directive('resizeToContent',function($window,$timeout){return function(scope,el,attrs){var iframe=el[0];var iframeWin=iframe.contentWindow||iframe.contentDocument.parentWindow;if(iframeWin.document.body){$timeout(function(){var height=iframeWin.document.documentElement.scrollHeight||iframeWin.document.body.scrollHeight;el.height(height);},3000);}};});'use strict';angular.module('umbraco.directives').directive('selectOnFocus',function(){return function(scope,el,attrs){$(el).on('click',function(){var editmode=$(el).data('editmode');if(!editmode){this.select();$(el).data('editmode',true);}}).on('blur',function(){$(el).data('editmode',false);});};});'use strict';angular.module('umbraco.directives').directive('umbAutoFocus',function($timeout){return function(scope,element,attr){var update=function update(){if(element.val()===''||attr.focusOnFilled){element.trigger('focus');}};if(attr.umbAutoFocus!=='false'){$timeout(function(){update();});}};});'use strict';angular.module('umbraco.directives').directive('umbAutoResize',function($timeout){return{require:['^?umbTabs','ngModel'],link:function link(scope,element,attr,controllersArr){var domEl=element[0];var domElType=domEl.type;var umbTabsController=controllersArr[0];var ngModelController=controllersArr[1];function resizeInput(){if(domEl.scrollWidth!==domEl.clientWidth){if(ngModelController.$modelValue){element.width(domEl.scrollWidth);}}
if(!ngModelController.$modelValue&&attr.placeholder){attr.$set('size',attr.placeholder.length);element.width('auto');}}
function resizeTextarea(){if(domEl.scrollHeight!==domEl.clientHeight){element.height(domEl.scrollHeight);}}
var update=function update(force){if(force===true){if(domElType==='textarea'){element.height(0);}else if(domElType==='text'){element.width(0);}}
if(domElType==='textarea'){resizeTextarea();}else if(domElType==='text'){resizeInput();}};if(umbTabsController!=null){umbTabsController.onTabShown(function(args){update();});}
var unbindModelWatcher=scope.$watch(function(){return ngModelController.$modelValue;},function(newValue){$timeout(function(){update(true);});});scope.$on('$destroy',function(){element.off('keyup keydown keypress change',update);element.off('blur',update(true));unbindModelWatcher();});}};});'use strict';(function(){'use strict';function UmbCheckboxController($timeout,localizationService){var vm=this;vm.$onInit=onInit;vm.change=change;function onInit(){vm.inputId=vm.inputId||'umb-check_'+String.CreateGuid();if(vm.labelKey){localizationService.localize(vm.labelKey).then(function(data){if(data.indexOf('[')===-1){vm.text=data;}});}}
function change(){if(vm.onChange){$timeout(function(){vm.onChange({model:vm.model,value:vm.value});},0);}}}
var component={template:'<label class="checkbox umb-form-check umb-form-check--checkbox {{vm.cssClass}}" ng-class="{ \'umb-form-check--disabled\': vm.disabled }"> <div class="umb-form-check__symbol"> <input ng-if="vm.disableDirtyCheck" type="checkbox" id="{{vm.inputId}}" name="{{vm.name}}" value="{{vm.value}}" class="umb-form-check__input" val-server-field="{{vm.serverValidationField}}" ng-model="vm.model" ng-disabled="vm.disabled" ng-required="vm.required" ng-change="vm.change()" no-dirty-check> <input ng-if="!vm.disableDirtyCheck" type="checkbox" id="{{vm.inputId}}" name="{{vm.name}}" value="{{vm.value}}" class="umb-form-check__input" val-server-field="{{vm.serverValidationField}}" ng-model="vm.model" ng-disabled="vm.disabled" ng-required="vm.required" ng-change="vm.change()"> <span class="umb-form-check__state" aria-hidden="true"> <span class="umb-form-check__check"> <i class="umb-form-check__icon icon-check"></i> </span> </span> </div> <div class="umb-form-check__info" ng-transclude> <i ng-if="vm.iconClass.length" class="{{vm.iconClass}}" aria-hidden="true"></i> <span ng-if="vm.text.length" class="umb-form-check__text">{{vm.text}}</span> </div> </label> ',controller:UmbCheckboxController,controllerAs:'vm',transclude:true,bindings:{model:'=',inputId:'@',value:'@',name:'@',text:'@',labelKey:'@?',serverValidationField:'@',disabled:'<',required:'<',onChange:'&?',cssClass:'@?',iconClass:'@?',disableDirtyCheck:'=?'}};angular.module('umbraco.directives').component('umbCheckbox',component);}());'use strict';(function(){'use strict';function UmbRadiobuttonController($timeout){var vm=this;vm.$onInit=onInit;vm.change=change;function onInit(){vm.inputId=vm.inputId||'umb-radio_'+String.CreateGuid();if(vm.labelKey){localizationService.localize(vm.labelKey).then(function(data){if(data.indexOf('[')===-1){vm.text=data;}});}}
function change(){if(vm.onChange){$timeout(function(){vm.onChange({model:vm.model,value:vm.value});},0);}}}
var component={template:'<label class="radio umb-form-check umb-form-check--radiobutton" ng-class="{ \'umb-form-check--disabled\': vm.disabled }"> <div class="umb-form-check__symbol"> <input type="radio" id="{{vm.inputId}}" name="{{vm.name}}" value="{{vm.value}}" class="umb-form-check__input" ng-model="vm.model" ng-disabled="vm.disabled" ng-required="vm.required" ng-change="vm.change()"> <span class="umb-form-check__state" aria-hidden="true"> <span class="umb-form-check__check"></span> </span> </div> <div class="umb-form-check__info" ng-transclude> <span class="umb-form-check__text">{{vm.text}}</span> </div> </label> ',controller:UmbRadiobuttonController,controllerAs:'vm',transclude:true,bindings:{model:'=',inputId:'@',value:'@',name:'@',text:'@',labelKey:'@?',disabled:'<',required:'<',onChange:'&?'}};angular.module('umbraco.directives').component('umbRadiobutton',component);}());'use strict';angular.module('umbraco.directives').directive('umbRawModel',function(){return{restrict:'A',require:'ngModel',template:'<textarea ng-model="jsonEditing"></textarea>',replace:true,scope:{model:'=umbRawModel',validateOn:'='},link:function link(scope,element,attrs,ngModelCtrl){function setEditing(value){scope.jsonEditing=Utilities.copy(jsonToString(value));}
function updateModel(value){scope.model=stringToJson(value);}
function setValid(){ngModelCtrl.$setValidity('json',true);}
function setInvalid(){ngModelCtrl.$setValidity('json',false);}
function stringToJson(text){try{return Utilities.fromJson(text);}catch(err){setInvalid();return text;}}
function jsonToString(object){return Utilities.toJson(object,true);}
function isValidJson(model){var flag=true;try{Utilities.fromJson(model);}catch(err){flag=false;}
return flag;}
setEditing(scope.model);var onInputChange=function onInputChange(newval,oldval){if(newval!==oldval){if(isValidJson(newval)){setValid();updateModel(newval);}else{setInvalid();}}};if(scope.validateOn){element.on(scope.validateOn,function(){scope.$apply(function(){onInputChange(scope.jsonEditing);});});}else{scope.$watch('jsonEditing',onInputChange,true);}
scope.$watch('model',function(newval,oldval){if(newval!==oldval){setEditing(newval);}},true);}};});'use strict';(function(){'use strict';function SelectWhen($timeout){function link(scope,el,attr,ctrl){attr.$observe('umbSelectWhen',function(newValue){if(newValue==='true'){$timeout(function(){el.select();});}});}
var directive={restrict:'A',link:link};return directive;}
angular.module('umbraco.directives').directive('umbSelectWhen',SelectWhen);}());'use strict';angular.module('umbraco.directives').directive('gridRte',function(tinyMceService,angularHelper,assetsService,$q,$timeout,eventsService){return{scope:{uniqueId:'=',value:'=',configuration:'=',datatypeKey:'@',ignoreUserStartNodes:'@'},template:' <div> <umb-load-indicator ng-if="isLoading"></umb-load-indicator> <div disable-hotkeys class="umb-rte" id="{{textAreaHtmlId}}" ng-style="{ visibility : isLoading ? \'hidden\' : \'visible\' }"></div> </div> ',replace:true,link:function link(scope,element,attrs){scope.isLoading=true;var promises=[];scope.textAreaHtmlId=scope.uniqueId+'_'+String.CreateGuid();if(typeof tinymce==='undefined'){promises.push(assetsService.loadJs('lib/tinymce/tinymce.min.js',scope));}
var editorConfig=scope.configuration?scope.configuration:null;if(!editorConfig||Utilities.isString(editorConfig)){editorConfig=tinyMceService.defaultPrevalues();editorConfig.toolbar=_.without(editorConfig,'umbmacro');}
if(!scope.configuration.maxImageSize&&scope.configuration.maxImageSize!==0){editorConfig.maxImageSize=tinyMceService.defaultPrevalues().maxImageSize;}
scope.config={ignoreUserStartNodes:scope.ignoreUserStartNodes==='true'};scope.dataTypeKey=scope.datatypeKey;var tinyMceEditor=null;promises.push(tinyMceService.getTinyMceEditorConfig({htmlId:scope.textAreaHtmlId,stylesheets:editorConfig.stylesheets,toolbar:editorConfig.toolbar,mode:editorConfig.mode}));function pinToolbar(){tinyMceService.pinToolbar(tinyMceEditor);}
function unpinToolbar(){tinyMceService.unpinToolbar(tinyMceEditor);}
$q.all(promises).then(function(result){var standardConfig=result[promises.length-1];var baseLineConfigObj={maxImageSize:editorConfig.maxImageSize};angular.extend(baseLineConfigObj,standardConfig);baseLineConfigObj.setup=function(editor){tinyMceEditor=editor;tinyMceService.initializeEditor({editor:editor,model:scope,currentForm:angularHelper.getCurrentForm(scope)});editor.on('init',function(e){scope.isLoading=false;editor.getBody().style.overflow='hidden';$timeout(function(){if(scope.value===null){editor.focus();}},400);});editor.on('blur',function(e){angularHelper.safeApply(scope,function(){unpinToolbar();$('.umb-panel-body').off('scroll',pinToolbar);});});editor.on('focus',function(e){angularHelper.safeApply(scope,function(){pinToolbar();$('.umb-panel-body').on('scroll',pinToolbar);});});editor.on('click',function(e){angularHelper.safeApply(scope,function(){pinToolbar();$('.umb-panel-body').on('scroll',pinToolbar);});});};function loadTinyMce(){$timeout(function(){tinymce.init(baseLineConfigObj);},150,false);}
loadTinyMce();var tabShownListener=eventsService.on('app.tabChange',function(e,args){var tabId=args.id;var myTabId=element.closest('.umb-tab-pane').attr('rel');if(String(tabId)===myTabId){if(tinyMceEditor!==undefined&&tinyMceEditor!=null){tinyMceEditor.execCommand('mceAutoResize',false,null,null);}}});scope.$on('$destroy',function(){eventsService.unsubscribe(tabShownListener);$('.umb-panel-body').off('scroll',pinToolbar);if(tinyMceEditor!==undefined&&tinyMceEditor!=null){tinyMceEditor.destroy();}});});}};});'use strict';(function(){'use strict';function BoxDirective(){var directive={restrict:'E',replace:true,transclude:true,template:'<div class="umb-box" ng-transclude></div>'};return directive;}
angular.module('umbraco.directives').directive('umbBox',BoxDirective);}());'use strict';(function(){'use strict';function BoxContentDirective(){var directive={restrict:'E',replace:true,transclude:true,template:'<div class="umb-box-content" ng-transclude></div>'};return directive;}
angular.module('umbraco.directives').directive('umbBoxContent',BoxContentDirective);}());'use strict';(function(){'use strict';function BoxHeaderDirective(localizationService){var directive={restrict:'E',replace:true,transclude:true,template:'<div class="umb-box-header"> <div> <div class="umb-box-header-title" ng-if="titleLabel"> {{titleLabel}} </div> <div class="umb-box-header-description" ng-if="descriptionLabel"> {{descriptionLabel}} </div> </div> <ng-transclude></ng-transclude> </div> ',scope:{titleKey:'@?',title:'@?',descriptionKey:'@?',description:'@?'},link:function link(scope){scope.titleLabel=scope.title;if(scope.titleKey){localizationService.localize(scope.titleKey,[],scope.title).then(function(data){scope.titleLabel=data;});}
scope.descriptionLabel=scope.description;if(scope.descriptionKey){localizationService.localize(scope.descriptionKey,[],scope.description).then(function(data){scope.descriptionLabel=data;});}}};return directive;}
angular.module('umbraco.directives').directive('umbBoxHeader',BoxHeaderDirective);}());'use strict';angular.module('umbraco.directives.html').directive('umbControlGroup',function(localizationService){return{scope:{label:'@label',description:'@',hideLabel:'@',alias:'@',labelFor:'@',required:'@?'},require:'?^^form',transclude:true,restrict:'E',replace:true,template:'<div class="umb-property"> <div class="control-group umb-control-group" ng-class="{error: !formValid(), hidelabel:hideLabel==\'true\'}"> <div class="umb-el-wrap"> <label ng-if="hideLabel!==\'true\'" class="control-label" for="{{alias}}"> <span ng-bind-html="labelstring"></span> <span ng-if="required"> <strong class="umb-control-required">*</strong> </span> <small ng-if="descriptionstring">{{descriptionstring}}</small> </label> <div class="controls controls-row" ng-transclude></div> </div> </div> </div> ',link:function link(scope,element,attr,formCtrl){scope.formValid=function(){if(formCtrl&&scope.labelFor){return formCtrl[scope.labelFor].$valid;}
return true;};if(scope.label&&scope.label[0]==='@'){localizationService.localize(scope.label.substring(1)).then(function(data){scope.labelstring=data;});}else{scope.labelstring=scope.label;}
if(scope.description&&scope.description[0]==='@'){localizationService.localize(scope.description.substring(1)).then(function(data){scope.descriptionstring=data;});}else{scope.descriptionstring=scope.description;}}};});'use strict';angular.module('umbraco.directives.html').directive('umbPane',function(){return{transclude:true,restrict:'E',replace:true,template:'<div class="umb-pane" ng-transclude> </div>'};});'use strict';angular.module('umbraco.directives.html').directive('umbPanel',function($timeout,$log){return{restrict:'E',replace:true,transclude:'true',template:'<div class="umb-panel tabbable" ng-transclude> </div> '};});'use strict';angular.module('umbraco.directives').directive('umbImageCrop',function($timeout,cropperHelper){return{restrict:'E',replace:true,template:'<div class="umb-cropper umb-property-editor" ng-show="src"> <div class="crop-container"> <div class="viewport" ng-style="style()"> <img ng-src="{{src}}" ng-style="dimensions.image"> <div class="overlay" ng-style="dimensions.image"></div> </div> </div> <div class="crop-slider-wrapper" ng-if="loaded"> <i class="icon-picture"></i> <div class="crop-slider"> <umb-range-slider ng-model="sliderValue" options="sliderOptions" on-setup="setup(slider)" on-slide="slide(values)" on-change="change(values)"> </umb-range-slider> </div> <i class="icon-picture" style="font-size: 22px"></i> </div> </div> ',scope:{src:'=',width:'@',height:'@',crop:'=',center:'=',maxSize:'@'},link:function link(scope,element,attrs){var sliderRef=null;scope.width=400;scope.height=320;scope.dimensions={image:{},cropper:{},viewport:{},margin:20,scale:{min:0,max:3,current:1}};scope.sliderOptions={'start':scope.dimensions.scale.current,'step':0.001,'tooltips':[false],'format':{to:function to(value){return parseFloat(parseFloat(value).toFixed(3));},from:function from(value){return parseFloat(parseFloat(value).toFixed(3));}},'range':{'min':scope.dimensions.scale.min,'max':scope.dimensions.scale.max}};scope.setup=function(slider){sliderRef=slider;sliderRef.noUiSlider.set(scope.dimensions.scale.current);sliderRef.noUiSlider.updateOptions({'range':{'min':scope.dimensions.scale.min,'max':scope.dimensions.scale.max}});};scope.slide=function(values){if(values){scope.dimensions.scale.current=parseFloat(values);}};scope.change=function(values){if(values){scope.dimensions.scale.current=parseFloat(values);}};scope.style=function(){return{'height':parseInt(scope.dimensions.viewport.height,10)+'px','width':parseInt(scope.dimensions.viewport.width,10)+'px'};};var $viewport=element.find('.viewport');var $image=element.find('img');var $overlay=element.find('.overlay');var $container=element.find('.crop-container');var constraints={left:{max:scope.dimensions.margin,min:scope.dimensions.margin},top:{max:scope.dimensions.margin,min:scope.dimensions.margin}};scope.constraints=constraints;var setConstraints=function setConstraints(){constraints.left.min=scope.dimensions.margin+scope.dimensions.cropper.width-scope.dimensions.image.width;constraints.top.min=scope.dimensions.margin+scope.dimensions.cropper.height-scope.dimensions.image.height;};var setDimensions=function setDimensions(originalImage){originalImage.width('auto');originalImage.height('auto');var image={};image.originalWidth=originalImage.width();image.originalHeight=originalImage.height();image.width=image.originalWidth;image.height=image.originalHeight;image.left=originalImage[0].offsetLeft;image.top=originalImage[0].offsetTop;scope.dimensions.image=image;var _viewPortW=parseInt(scope.width,10);var _viewPortH=parseInt(scope.height,10);if(scope.maxSize){var ratioCalculation=cropperHelper.scaleToMaxSize(_viewPortW,_viewPortH,scope.maxSize);_viewPortW=ratioCalculation.width;_viewPortH=ratioCalculation.height;}
scope.dimensions.viewport.width=_viewPortW+2*scope.dimensions.margin;scope.dimensions.viewport.height=_viewPortH+2*scope.dimensions.margin;scope.dimensions.cropper.width=_viewPortW;scope.dimensions.cropper.height=_viewPortH;};var resizeImageToScale=function resizeImageToScale(ratio){var size=cropperHelper.calculateSizeToRatio(scope.dimensions.image.originalWidth,scope.dimensions.image.originalHeight,ratio);scope.dimensions.image.width=size.width;scope.dimensions.image.height=size.height;setConstraints();validatePosition(scope.dimensions.image.left,scope.dimensions.image.top);};var resizeImageToCrop=function resizeImageToCrop(){scope.dimensions.image=cropperHelper.convertToStyle(scope.crop,{width:scope.dimensions.image.originalWidth,height:scope.dimensions.image.originalHeight},scope.dimensions.cropper,scope.dimensions.margin);var ratioCalculation=cropperHelper.calculateAspectRatioFit(scope.dimensions.image.originalWidth,scope.dimensions.image.originalHeight,scope.dimensions.cropper.width,scope.dimensions.cropper.height,true);scope.dimensions.scale.current=scope.dimensions.image.ratio;scope.dimensions.scale.min=ratioCalculation.ratio;scope.dimensions.scale.max=2;};var validatePosition=function validatePosition(left,top){if(left>constraints.left.max){left=constraints.left.max;}
if(left<=constraints.left.min){left=constraints.left.min;}
if(top>constraints.top.max){top=constraints.top.max;}
if(top<=constraints.top.min){top=constraints.top.min;}
if(scope.dimensions.image.left!==left){scope.dimensions.image.left=left;}
if(scope.dimensions.image.top!==top){scope.dimensions.image.top=top;}};var calculateCropBox=function calculateCropBox(){scope.crop=cropperHelper.pixelsToCoordinates(scope.dimensions.image,scope.dimensions.cropper.width,scope.dimensions.cropper.height,scope.dimensions.margin);};var onStartDragPosition,top,left;$overlay.draggable({drag:function drag(event,ui){scope.$apply(function(){validatePosition(ui.position.left,ui.position.top);});},stop:function stop(event,ui){scope.$apply(function(){validatePosition(ui.position.left,ui.position.top);calculateCropBox();scope.dimensions.image.rnd=Math.random();});}});var init=function init(image){scope.loaded=false;setDimensions(image);var createDefaultCrop=!scope.crop;if(createDefaultCrop){calculateCropBox();}
resizeImageToCrop();if(createDefaultCrop){scope.dimensions.scale.current=scope.dimensions.scale.min;resizeImageToScale(scope.dimensions.scale.min);}
setConstraints();scope.loaded=true;};scope.$watchCollection('[width, height]',function(newValues,oldValues){if(newValues!==oldValues){setDimensions($image);setConstraints();}});var throttledResizing=_.throttle(function(){resizeImageToScale(scope.dimensions.scale.current);calculateCropBox();},15);scope.$watch('dimensions.scale.current',function(newValue,oldValue){if(scope.loaded){throttledResizing();}});$image.on('load',function(){$timeout(function(){init($image);});});}};});'use strict';(function(){'use strict';function umbImageGravityController($scope,$element,$timeout){var vm=this;vm.dimensions={width:0,height:0,left:0,top:0};var htmlImage=null;var htmlOverlay=null;var draggable=null;vm.loaded=false;vm.$onInit=onInit;vm.$onChanges=onChanges;vm.$postLink=postLink;vm.$onDestroy=onDestroy;vm.style=style;vm.setFocalPoint=setFocalPoint;function style(){if(vm.dimensions.width<=0||vm.dimensions.height<=0){setDimensions();}
return{'top':vm.dimensions.top+'px','left':vm.dimensions.left+'px'};};function setFocalPoint(event){$scope.$emit('imageFocalPointStart');var offsetX=event.offsetX-10;var offsetY=event.offsetY-10;calculateGravity(offsetX,offsetY);lazyEndEvent();};function onInit(){if(!vm.center){vm.center={left:0.5,top:0.5};}}
function postLink(){htmlImage=$element.find('img');htmlOverlay=$element.find('.overlay');draggable=htmlOverlay.draggable({containment:'parent',start:function start(){$scope.$apply(function(){$scope.$emit('imageFocalPointStart');});},stop:function stop(){$scope.$apply(function(){var offsetX=htmlOverlay[0].offsetLeft;var offsetY=htmlOverlay[0].offsetTop;calculateGravity(offsetX,offsetY);});lazyEndEvent();}});$(window).on('resize.umbImageGravity',function(){$scope.$apply(function(){resized();});});$scope.$on('editors.content.splitViewChanged',function(){$timeout(resized,200);});htmlImage.on('load',function(){$timeout(function(){vm.isCroppable=true;vm.hasDimensions=true;if(vm.src){if(vm.src.endsWith('.svg')){vm.isCroppable=false;vm.hasDimensions=false;}else{var type=vm.src.substring(vm.src.indexOf('/')+1,vm.src.indexOf(';base64'));if(type.startsWith('svg')){vm.isCroppable=false;vm.hasDimensions=false;}}}
setDimensions();vm.loaded=true;if(vm.onImageLoaded){vm.onImageLoaded({'isCroppable':vm.isCroppable,'hasDimensions':vm.hasDimensions});}},100);});}
function onDestroy(){$(window).off('resize.umbImageGravity');if(htmlOverlay){}
if(htmlImage){htmlImage.off('load');}}
function resized(){$timeout(function(){setDimensions();});if(htmlOverlay.is(':visible')){var offsetX=htmlOverlay[0].offsetLeft;var offsetY=htmlOverlay[0].offsetTop;calculateGravity(offsetX,offsetY);}}
function onChanges(changes){if(changes.center&&!changes.center.isFirstChange()&&changes.center.currentValue&&!angular.equals(changes.center.currentValue,changes.center.previousValue)){setDimensions();}}
function setDimensions(){if(vm.isCroppable&&htmlImage&&vm.center){vm.dimensions.width=htmlImage.width();vm.dimensions.height=htmlImage.height();vm.dimensions.left=vm.center.left*vm.dimensions.width-10;vm.dimensions.top=vm.center.top*vm.dimensions.height-10;}
return vm.dimensions.width;};function calculateGravity(offsetX,offsetY){vm.onValueChanged({left:(offsetX+10)/vm.dimensions.width,top:(offsetY+10)/vm.dimensions.height});};var lazyEndEvent=_.debounce(function(){$scope.$apply(function(){$scope.$emit('imageFocalPointStop');});},2000);}
var umbImageGravityComponent={template:'<div class="umb-cropper-gravity"> <div class="gravity-container" ng-show="vm.loaded"> <div class="viewport"> <img ng-show="vm.isCroppable" ng-src="{{vm.src}}" style="max-width: 100%; max-height: 100%" ng-click="vm.setFocalPoint($event)" draggable="false"> <img ng-show="!vm.isCroppable && !vm.hasDimensions" ng-src="{{vm.src}}" width="200" height="200" draggable="false" style="cursor: default;"> <div ng-show="vm.isCroppable" class="overlay" ng-style="vm.style()"> </div> </div> </div> </div> ',bindings:{src:'<',center:'<',onImageLoaded:'&?',onValueChanged:'&'},controllerAs:'vm',controller:umbImageGravityController};angular.module('umbraco.directives').component('umbImageGravity',umbImageGravityComponent);}());'use strict';angular.module('umbraco.directives').directive('umbImageThumbnail',function($timeout,localizationService,cropperHelper,$log){return{restrict:'E',replace:true,template:'<div class="umb-crop-thumbnail-container" ng-style="{height: height, width: width, overflow: \'hidden\', position: \'relative\'}" ng-show="loaded"> <img ng-src="{{src}}" ng-style="preview" class="noScale"> </div> ',scope:{src:'=',width:'@',height:'@',center:'=',crop:'=',maxSize:'@'},link:function link(scope,element,attrs){var $image=element.find('img');scope.loaded=false;$image.on('load',function(){$timeout(function(){$image.width('auto');$image.height('auto');scope.image={};scope.image.width=$image[0].width;scope.image.height=$image[0].height;if(scope.maxSize){var ratioCalculation=cropperHelper.calculateAspectRatioFit(scope.width,scope.height,scope.maxSize,scope.maxSize,false);scope.width=ratioCalculation.width;scope.height=ratioCalculation.height;}
setPreviewStyle();scope.loaded=true;});});scope.$watchCollection('[crop, center]',function(newValues,oldValues){setPreviewStyle();});scope.$watch('center',function(){setPreviewStyle();},true);function setPreviewStyle(){if(scope.crop&&scope.image){scope.preview=cropperHelper.convertToStyle(scope.crop,scope.image,{width:scope.width,height:scope.height},0);}else if(scope.image){var p=cropperHelper.calculateAspectRatioFit(scope.image.width,scope.image.height,scope.width,scope.height,true);if(scope.center){var xy=cropperHelper.alignToCoordinates(p,scope.center,{width:scope.width,height:scope.height});p.top=xy.top;p.left=xy.left;}else{}
p.position='absolute';scope.preview=p;}}}};});'use strict';angular.module('umbraco.directives').directive('localize',function($log,localizationService){return{restrict:'E',scope:{key:'@',tokens:'=',watchTokens:'@'},replace:true,link:function link(scope,element,attrs){var key=scope.key;scope.text='';function render(){element.html(localizationService.tokenReplace(scope.text,scope.tokens||null));}
localizationService.localize(key).then(function(value){scope.text=value;render();});if(scope.watchTokens==='true'){scope.$watch('tokens',render,true);}}};}).directive('localize',function($log,localizationService){return{restrict:'A',link:function link(scope,element,attrs){var keys=attrs.localize.split(',');Utilities.forEach(keys,function(value,key){var attr=element.attr(value);if(attr){if(attr[0]==='@'){attr=attr.substring(1);}
var t=localizationService.tokenize(attr,scope);localizationService.localize(t.key,t.tokens).then(function(val){element.attr(value,val);});}});}};});'use strict';(function(){'use strict';function MediaNodeInfoDirective($timeout,$location,eventsService,userService,dateHelper,editorService,mediaHelper,mediaResource,$q){function link(scope,element,attrs,ctrl){var evts=[];scope.allowChangeMediaType=false;scope.loading=true;scope.changeContentPageNumber=changeContentPageNumber;scope.contentOptions={};scope.contentOptions.entityType='DOCUMENT';scope.hasContentReferences=false;scope.changeMediaPageNumber=changeMediaPageNumber;scope.mediaOptions={};scope.mediaOptions.entityType='MEDIA';scope.hasMediaReferences=false;scope.changeMemberPageNumber=changeMemberPageNumber;scope.memberOptions={};scope.memberOptions.entityType='MEMBER';scope.hasMemberReferences=false;function onInit(){userService.getCurrentUser().then(function(user){angular.forEach(user.sections,function(section){if(section.alias==='settings'){scope.allowChangeMediaType=true;}});});scope.mediaType=scope.node.contentType;setMediaLink();formatDatesToLocal();setMediaExtension();}
function formatDatesToLocal(){userService.getCurrentUser().then(function(currentUser){scope.node.createDateFormatted=dateHelper.getLocalDate(scope.node.createDate,currentUser.locale,'LLL');scope.node.updateDateFormatted=dateHelper.getLocalDate(scope.node.updateDate,currentUser.locale,'LLL');});}
function setMediaLink(){scope.nodeUrl=scope.node.mediaLink;var match=/.*\/(.*)/.exec(scope.nodeUrl);if(match){scope.nodeFileName=match[1];}else{scope.nodeFileName=scope.nodeUrl;}}
function setMediaExtension(){scope.node.extension=mediaHelper.getFileExtension(scope.nodeUrl);}
scope.openMediaType=function(mediaType){var editor={id:mediaType.id,submit:function submit(model){editorService.close();},close:function close(){editorService.close();}};editorService.mediaTypeEditor(editor);};scope.openSVG=function(){var popup=window.open('','_blank');var html='<!DOCTYPE html><body><img src="'+scope.nodeUrl+'"/>'+'<script>history.pushState(null, null,"'+$location.$$absUrl+'");</script></body>';popup.document.open();popup.document.write(html);popup.document.close();};scope.$watch('node.updateDate',function(newValue,oldValue){if(!newValue){return;}
if(newValue===oldValue){return;}
setMediaLink();formatDatesToLocal();setMediaExtension();});function changeContentPageNumber(pageNumber){scope.contentOptions.pageNumber=pageNumber;loadContentRelations();}
function changeMediaPageNumber(pageNumber){scope.mediaOptions.pageNumber=pageNumber;loadMediaRelations();}
function changeMemberPageNumber(pageNumber){scope.memberOptions.pageNumber=pageNumber;loadMemberRelations();}
function loadContentRelations(){return mediaResource.getPagedReferences(scope.node.id,scope.contentOptions).then(function(data){scope.contentReferences=data;scope.hasContentReferences=data.items.length>0;});}
function loadMediaRelations(){return mediaResource.getPagedReferences(scope.node.id,scope.mediaOptions).then(function(data){scope.mediaReferences=data;scope.hasMediaReferences=data.items.length>0;});}
function loadMemberRelations(){return mediaResource.getPagedReferences(scope.node.id,scope.memberOptions).then(function(data){scope.memberReferences=data;scope.hasMemberReferences=data.items.length>0;});}
scope.$on('$destroy',function(){for(var e in evts){eventsService.unsubscribe(evts[e]);}});onInit();evts.push(eventsService.on('app.tabChange',function(event,args){$timeout(function(){if(args.alias==='umbInfo'){$q.all([loadContentRelations(),loadMediaRelations(),loadMemberRelations()]).then(function(){scope.loading=false;});}});}));}
var directive={restrict:'E',replace:true,template:'<div class="umb-package-details"> <umb-load-indicator ng-if="loading === true"></umb-load-indicator>  <div class="umb-package-details__main-content" ng-if="loading === false">  <umb-box data-element="node-info-urls" class="mb4"> <umb-box-header title-key="general_links"></umb-box-header> <umb-box-content class="block-form"> <umb-empty-state ng-if="!nodeUrl" size="small"> <localize key="content_noMediaLink"></localize> </umb-empty-state> <ul ng-if="nodeUrl" class="nav nav-stacked" style="margin-bottom: 0;"> <li> <a ng-attr-href="{{node.extension !== \'svg\' ? nodeUrl : undefined}}" ng-click="node.extension === \'svg\' && openSVG()" target="_blank"> <i class="icon icon-out"></i> <span>{{nodeFileName}}</span> </a> </li> </ul> </umb-box-content> </umb-box>  <umb-box ng-if="(hasContentReferences === false) && (hasMediaReferences === false) && (hasMemberReferences === false) && loading === false"> <umb-box-header title-key="references_tabName"></umb-box-header> <umb-box-content> <umb-empty-state size="small"> This Media item has no references. </umb-empty-state> </umb-box-content> </umb-box>  <div ng-if="loading === false">  <div ng-if="contentReferences.items.length > 0"> <h5 class="mt0" style="margin-bottom: 20px;"> <localize key="references_labelUsedByDocuments">Used in Documents</localize> </h5> <div class="umb-table"> <div class="umb-table-head"> <div class="umb-table-row"> <div class="umb-table-cell"></div> <div class="umb-table-cell umb-table__name not-fixed"><localize key="general_name">Name</localize></div> <div class="umb-table-cell"><localize key="content_alias">Alias</localize></div> <div class="umb-table-cell umb-table-cell--nano"><localize key="general_open" style="visibility:hidden;">Open</localize></div> </div> </div> <div class="umb-table-body"> <div class="umb-table-row" ng-repeat="reference in contentReferences.items"> <div class="umb-table-cell"><i class="umb-table-body__icon {{reference.icon}}"></i></div> <div class="umb-table-cell umb-table__name"><span>{{::reference.name}}</span></div> <div class="umb-table-cell"><span title="{{::reference.alias}}">{{::reference.alias}}</span></div> <div class="umb-table-cell umb-table-cell--nano"><a ng-href="#/content/content/edit/{{::reference.id}}"><localize key="general_open">Open</localize></a></div> </div> </div> </div>  <div class="flex justify-center"> <umb-pagination ng-if="contentReferences.totalPages" page-number="contentReferences.pageNumber" total-pages="contentReferences.totalPages" on-change="changeContentPageNumber(pageNumber)"> </umb-pagination> </div> </div>  <div ng-if="memberReferences.items.length > 0"> <h5 class="mt0" style="margin-bottom: 20px;"> <localize key="references_labelUsedByMembers">Used in Members</localize> </h5> <div class="umb-table"> <div class="umb-table-head"> <div class="umb-table-row"> <div class="umb-table-cell"></div> <div class="umb-table-cell umb-table__name not-fixed"><localize key="general_name">Name</localize></div> <div class="umb-table-cell"><localize key="content_alias">Alias</localize></div> <div class="umb-table-cell umb-table-cell--nano"><localize key="general_open" style="visibility:hidden;">Open</localize></div> </div> </div> <div class="umb-table-body"> <div class="umb-table-row" ng-repeat="reference in memberReferences.items"> <div class="umb-table-cell"><i class="umb-table-body__icon {{reference.icon}}"></i></div> <div class="umb-table-cell umb-table__name"><span>{{::reference.name}}</span></div> <div class="umb-table-cell"><span title="{{::reference.alias}}">{{::reference.alias}}</span></div> <div class="umb-table-cell umb-table-cell--nano"><a href="#/member/member/edit/{{::reference.key}}"><localize key="general_open">Open</localize></a></div> </div> </div> </div>  <div class="flex justify-center"> <umb-pagination ng-if="memberReferences.totalPages" page-number="memberReferences.pageNumber" total-pages="memberReferences.totalPages" on-change="changeMemberPageNumber(pageNumber)"> </umb-pagination> </div> </div>  <div ng-if="mediaReferences.items.length > 0"> <h5 class="mt0" style="margin-bottom: 20px;"> <localize key="references_labelUsedByMedia">Used in Media</localize> </h5> <div class="umb-table"> <div class="umb-table-head"> <div class="umb-table-row"> <div class="umb-table-cell"></div> <div class="umb-table-cell umb-table__name not-fixed"><localize key="general_name">Name</localize></div> <div class="umb-table-cell"><localize key="content_alias">Alias</localize></div> <div class="umb-table-cell umb-table-cell--nano"><localize key="general_open" style="visibility:hidden;">Open</localize></div> </div> </div> <div class="umb-table-body"> <div class="umb-table-row" ng-repeat="reference in mediaReferences.items"> <div class="umb-table-cell"><i class="umb-table-body__icon {{reference.icon}}"></i></div> <div class="umb-table-cell umb-table__name"><span>{{::reference.name}}</span></div> <div class="umb-table-cell"><span title="{{::reference.alias}}">{{::reference.alias}}</span></div> <div class="umb-table-cell umb-table-cell--nano"><a href="#/media/media/edit/{{::reference.id}}"><localize key="general_open">Open</localize></a></div> </div> </div> </div>  <div class="flex justify-center"> <umb-pagination ng-if="mediaReferences.totalPages" page-number="mediaReferences.pageNumber" total-pages="mediaReferences.totalPages" on-change="changeMediaPageNumber(pageNumber)"> </umb-pagination> </div> </div> </div> </div>  <div class="umb-package-details__sidebar" ng-if="loading === false">  <umb-box data-element="node-info-general"> <umb-box-header title-key="general_general"></umb-box-header> <umb-box-content class="block-form"> <umb-control-group ng-if="node.id !== 0" data-element="node-info-create-date" label="@content_createDate"> {{node.createDateFormatted}} by {{ node.owner.name }} </umb-control-group> <umb-control-group ng-if="node.id !== 0" data-element="node-info-update-date" label="@content_updateDate"> {{node.updateDateFormatted}} </umb-control-group> <umb-control-group data-element="node-info-media-type" label="@content_mediatype"> <umb-node-preview style="max-width: 100%; margin-bottom: 0px;" icon="node.icon" name="node.contentTypeName" allow-open="allowChangeMediaType" on-open="openMediaType(mediaType)"> </umb-node-preview> </umb-control-group> <umb-control-group ng-if="node.id !== 0" data-element="node-info-id" label="Id"> <div>{{ node.id }}</div> <small>{{ node.key }}</small> </umb-control-group> </umb-box-content> </umb-box> </div> </div> ',scope:{node:'='},link:link};return directive;}
angular.module('umbraco.directives').directive('umbMediaNodeInfo',MediaNodeInfoDirective);}());'use strict';(function(){'use strict';function MemberGroupNodeInfoDirective(eventsService,userService,dateHelper){function link(scope,element,attrs,ctrl){var evts=[];function onInit(){formatDatesToLocal();}
function formatDatesToLocal(){userService.getCurrentUser().then(function(currentUser){scope.node.createDateFormatted=dateHelper.getLocalDate(scope.node.createDate,currentUser.locale,'LLL');scope.node.updateDateFormatted=dateHelper.getLocalDate(scope.node.updateDate,currentUser.locale,'LLL');});}
scope.$watch('node.updateDate',function(newValue,oldValue){if(!newValue){return;}
if(newValue===oldValue){return;}
formatDatesToLocal();});scope.$on('$destroy',function(){for(var e in evts){eventsService.unsubscribe(evts[e]);}});onInit();}
var directive={restrict:'E',replace:true,template:'<div class="umb-package-details"> <div class="umb-package-details__main-content"> <umb-box> <umb-box-header title-key="content_membergroup"></umb-box-header> <umb-box-content class="block-form"> <umb-empty-state size="small"> <localize key="member_memberGroupNoProperties">Member groups have no additional properties for editing.</localize> </umb-empty-state> </umb-box-content> </umb-box> </div> <div class="umb-package-details__sidebar"> <umb-box data-element="node-info-general"> <umb-box-header title-key="general_general"></umb-box-header> <umb-box-content class="block-form"> <umb-control-group ng-if="node.id !== 0" data-element="node-info-id" label="Id"> <div>{{ node.id }}</div> <small>{{ node.key }}</small> </umb-control-group> </umb-box-content> </umb-box> </div> </div> ',scope:{node:'='},link:link};return directive;}
angular.module('umbraco.directives').directive('umbMembergroupNodeInfo',MemberGroupNodeInfoDirective);}());'use strict';(function(){'use strict';function MemberNodeInfoDirective($timeout,$location,eventsService,userService,dateHelper,editorService){function link(scope,element,attrs,ctrl){var evts=[];scope.allowChangeMemberType=false;function onInit(){formatDatesToLocal();}
function formatDatesToLocal(){userService.getCurrentUser().then(function(currentUser){scope.node.createDateFormatted=dateHelper.getLocalDate(scope.node.createDate,currentUser.locale,'LLL');scope.node.updateDateFormatted=dateHelper.getLocalDate(scope.node.updateDate,currentUser.locale,'LLL');});}
scope.openMemberType=function(memberType){var editor={id:memberType.id,submit:function submit(model){editorService.close();},close:function close(){editorService.close();}};editorService.memberTypeEditor(editor);};scope.$watch('node.updateDate',function(newValue,oldValue){if(!newValue){return;}
if(newValue===oldValue){return;}
formatDatesToLocal();});scope.$on('$destroy',function(){for(var e in evts){eventsService.unsubscribe(evts[e]);}});onInit();}
var directive={restrict:'E',replace:true,template:'<div class="umb-package-details"> <div class="umb-package-details__main-content"> <umb-box data-element="node-info-membership" ng-repeat="group in node.tabs| filter: {properties:{view:\'readonlyvalue\'}} track by group.label"> <div class="umb-group-panel__header"> <div>{{ group.label }}</div> </div> <div class="umb-group-panel__content"> <umb-property data-element="property-{{group.alias}}" ng-repeat="property in group.properties | filter: {view:\'readonlyvalue\'} track by property.alias" property="property"> <umb-property-editor model="property"></umb-property-editor> </umb-property> </div> </umb-box> </div> <div class="umb-package-details__sidebar"> <umb-box data-element="node-info-general"> <umb-box-header title-key="general_general"></umb-box-header> <umb-box-content class="block-form"> <umb-control-group ng-if="node.id !== 0" data-element="node-info-create-date" label="@content_createDate"> {{node.createDateFormatted}} by {{ node.owner.name }} </umb-control-group> <umb-control-group ng-if="node.id !== 0" data-element="node-info-update-date" label="@content_updateDate"> {{node.updateDateFormatted}} </umb-control-group> <umb-control-group data-element="node-info-document-type" label="@content_membertype"> <umb-node-preview style="max-width: 100%; margin-bottom: 0px;" icon="node.icon" name="node.contentTypeName" alias="node.contentTypeAlias" allow-open="allowChangeMemberType" on-open="openMemberType(node)"> </umb-node-preview> </umb-control-group> <umb-control-group ng-if="node.id !== 0" data-element="node-info-id" label="Id"> <div>{{ node.id }}</div> <small>{{ node.key }}</small> </umb-control-group> </umb-box-content> </umb-box> </div> </div> ',scope:{node:'='},link:link};return directive;}
angular.module('umbraco.directives').directive('umbMemberNodeInfo',MemberNodeInfoDirective);}());'use strict';(function(){'use strict';function NotificationDirective(notificationsService){function link(scope,el,attr,ctrl){scope.notifications=notificationsService.current;scope.$watch('notificationsService.current',function(newVal,oldVal,scope){if(newVal){scope.notifications=newVal;}});}
var directive={restrict:'E',replace:true,template:'<div class="umb-notifications" id="umb-notifications-wrapper" ng-cloak> <ul class="umb-notifications__notifications" aria-live="assertive" aria-relevant="additions"> <li ng-repeat="notification in notifications" class="alert alert-block alert-{{notification.type}} umb-notifications__notification animated -half-second fadeIn" ng-class="{\'-no-border -extra-padding\': notification.type === \'form\'}"> <div ng-if="notification.view"> <div ng-include="notification.view"></div> </div> <div ng-if="notification.headline"> <a ng-if="notification.url" ng-href="{{notification.url}}" target="{{notification.target}}" rel="noreferrer"> <strong ng-bind="notification.headline"></strong> <span ng-bind-html="notification.message"></span> </a> <div ng-if="!notification.url"> <strong ng-bind="notification.headline"></strong> <span ng-bind-html="notification.message"></span> </div> </div> <button type="button" class="close -align-right" ng-click="removeNotification($index)" aria-hidden="true"> <span aria-hidden="true">&times;</span> </button> </li> </ul> </div> ',link:link};return directive;}
angular.module('umbraco.directives').directive('umbNotifications',NotificationDirective);}());'use strict';(function(){'use strict';function OverlayDirective($timeout,formHelper,overlayHelper,localizationService,$q,$templateCache,$http,$compile){function link(scope,el,attr,ctrl){scope.directive={enableConfirmButton:false};var overlayNumber=0;var numberOfOverlays=0;var isRegistered=false;var modelCopy={};var unsubscribe=[];function activate(){setView();setButtonText();modelCopy=makeModelCopy(scope.model);$timeout(function(){if(scope.position==='target'&&scope.model.event){setTargetPosition();if('ResizeObserver' in window){var resizeObserver=new ResizeObserver(setTargetPosition);var contentArea=document.getElementById('contentwrapper');resizeObserver.observe(el[0]);if(contentArea){resizeObserver.observe(contentArea);}
unsubscribe.push(function(){resizeObserver.disconnect();});}}
registerOverlay();setOverlayIndent();focusOnOverlayHeading();});}
function focusOnOverlayHeading(){var heading=el.find('.umb-overlay__title');if(heading){heading.focus();}}
function setView(){if(scope.view){if(scope.view.indexOf('.html')===-1){var viewAlias=scope.view.toLowerCase();scope.view='views/common/overlays/'+viewAlias+'/'+viewAlias+'.html';}
if(scope.parentScope){var element=el.find('.scoped-view');$http.get(scope.view,{cache:$templateCache}).then(function(response){var templateScope=scope.parentScope.$new();unsubscribe.push(function(){templateScope.$destroy();});templateScope.model=scope.model;element.html(response.data);element.show();$compile(element)(templateScope);});}}}
function setButtonText(){var labelKeys=['general_close','general_submit'];localizationService.localizeMany(labelKeys).then(function(values){if(!scope.model.closeButtonLabelKey&&!scope.model.closeButtonLabel){scope.model.closeButtonLabel=values[0];}
if(!scope.model.submitButtonLabelKey&&!scope.model.submitButtonLabel){scope.model.submitButtonLabel=values[1];}});}
function registerOverlay(){overlayNumber=overlayHelper.registerOverlay();$(document).on('keydown.overlay-'+overlayNumber,function(event){if(event.which===27){numberOfOverlays=overlayHelper.getNumberOfOverlays();if(numberOfOverlays===overlayNumber&&!scope.model.disableEscKey){scope.$apply(function(){scope.closeOverLay();});}
event.stopPropagation();event.preventDefault();}
if(event.which===13){numberOfOverlays=overlayHelper.getNumberOfOverlays();if(numberOfOverlays===overlayNumber){var activeElementType=document.activeElement.tagName;var clickableElements=['A','BUTTON'];var submitOnEnter=document.activeElement.hasAttribute('overlay-submit-on-enter');var submitOnEnterValue=submitOnEnter?document.activeElement.getAttribute('overlay-submit-on-enter'):'';if(clickableElements.indexOf(activeElementType)>=0){}else if(activeElementType==='TEXTAREA'&&!submitOnEnter){}else if(submitOnEnter&&submitOnEnterValue==='false'){}else{scope.$apply(function(){scope.submitForm(scope.model);});event.preventDefault();}}}});isRegistered=true;}
function unregisterOverlay(){if(isRegistered){overlayHelper.unregisterOverlay();$(document).off('keydown.overlay-'+overlayNumber);isRegistered=false;}}
function makeModelCopy(object){var newObject={};for(var key in object){if(key!=='event'&&key!=='parentScope'){newObject[key]=Utilities.copy(object[key]);}}
return newObject;}
function setOverlayIndent(){var overlayIndex=overlayNumber-1;var indentSize=overlayIndex*20;var overlayWidth=el[0].clientWidth;el.css('width',overlayWidth-indentSize);if(scope.position==='center'&&overlayIndex>0||scope.position==='target'&&overlayIndex>0){var overlayTopPosition=el[0].offsetTop;el.css('top',overlayTopPosition+indentSize);}}
function setTargetPosition(){var container=$('#contentwrapper');var containerLeft=container[0].offsetLeft;var containerRight=containerLeft+container[0].offsetWidth;var containerTop=container[0].offsetTop;var containerBottom=containerTop+container[0].offsetHeight;var mousePositionClickX=null;var mousePositionClickY=null;var elementHeight=null;var elementWidth=null;var position={right:'inherit',left:'inherit',top:'inherit',bottom:'inherit'};mousePositionClickX=scope.model.event.pageX;mousePositionClickY=scope.model.event.pageY;elementHeight=el[0].clientHeight;elementWidth=el[0].clientWidth;position.left=mousePositionClickX-elementWidth/2;position.top=mousePositionClickY-elementHeight/2;if(position.left+elementWidth>containerRight){position.right=10;position.left='inherit';}
if(position.top+elementHeight>containerBottom){position.bottom=10;position.top='inherit';}
if(position.left<containerLeft){position.left=containerLeft+10;position.right='inherit';}
if(position.top<containerTop){position.top=10;position.bottom='inherit';}
el.css(position);}
scope.submitForm=function(model){if(scope.model.submit){if(formHelper.submitForm({scope:scope,skipValidation:scope.model.skipFormValidation,keepServerValidation:true})){if(scope.model.confirmSubmit&&scope.model.confirmSubmit.enable&&!scope.directive.enableConfirmButton){$q.when(scope.model.submit(model,modelCopy,scope.directive.enableConfirmButton)).then(function(){formHelper.resetForm({scope:scope});});}else{unregisterOverlay();$q.when(scope.model.submit(model,modelCopy,scope.directive.enableConfirmButton)).then(function(){formHelper.resetForm({scope:scope});});}}}};scope.cancelConfirmSubmit=function(){scope.model.confirmSubmit.show=false;};scope.closeOverLay=function(){unregisterOverlay();if(scope.model&&scope.model.close){scope.model=modelCopy;scope.model.close(scope.model);}else{scope.model.show=false;scope.model=null;}};scope.outSideClick=function(){if(!scope.model.disableBackdropClick){scope.closeOverLay();}};unsubscribe.push(unregisterOverlay);scope.$on('$destroy',function(){for(var i=0;i<unsubscribe.length;i++){unsubscribe[i]();}});activate();}
var directive={transclude:true,restrict:'E',replace:true,template:'<div data-element="overlay" class="umb-overlay umb-overlay-{{position}} umb-overlay--{{model.size}}" on-outside-click="outSideClick()" role="dialog" aria-labelledby="umb-overlay-title" aria-describedby="umb-overlay-description"> <ng-form class="umb-overlay__form" name="overlayForm" novalidate val-form-manager> <div data-element="overlay-header" class="umb-overlay-header" ng-show="!model.hideHeader"> <h1 class="umb-overlay__title" id="umb-overlay-title">{{model.title}}</h1> <p class="umb-overlay__subtitle" id="umb-overlay-description" ng-if="model.subtitle">{{model.subtitle}}</p> </div> <div data-element="overlay-content" class="umb-overlay-container form-horizontal"> <ng-transclude></ng-transclude> <div ng-if="view && !parentScope" ng-include="view"></div> <div class="scoped-view"></div> </div>  <div class="umb-overlay__item-details" ng-if="model.itemDetails"> <div class="umb-overlay__item-details-title-wrapper" ng-if="model.itemDetails.icon || model.itemDetails.title"> <i class="{{ model.itemDetails.icon }} umb-overlay__item-details-icon" ng-if="model.itemDetails.icon" aria-hidden="true"></i> <h2 class="umb-overlay__item-details-title" ng-if="model.itemDetails.title">{{ model.itemDetails.title }}</h2> </div> <p class="umb-overlay__item-details-description" ng-if="model.itemDetails.description">{{ model.itemDetails.description }}</p> </div> <div data-element="overlay-footer" class="umb-overlay-drawer" ng-class="{\'-auto-height\': model.confirmSubmit.show}"> <div ng-if="model.confirmSubmit.show"> <h2 class="red" ng-if="model.confirmSubmit.title"> <i class="icon-alert" aria-hidden="true"></i> {{ model.confirmSubmit.title }} </h2> <p ng-if="model.confirmSubmit.description">{{ model.confirmSubmit.description }}</p> <label class="checkbox no-indent"> <input type="checkbox" ng-model="directive.enableConfirmButton"> <strong>{{model.confirmSubmit.checkboxLabel}}</strong> </label> <div class="umb-overlay-drawer__align-right"> <umb-button alias="overlayCancelSubmit" action="cancelConfirmSubmit()" button-style="link" label="Cancel" type="button"> </umb-button> <umb-button data-element="overlay-confirm-submit" button-style="success" label="Confirm" type="button" disabled="!directive.enableConfirmButton" action="submitForm(model)" auto-focus="true"> </umb-button> </div> </div> <div class="umb-overlay-drawer__align-right" ng-if="!model.confirmSubmit.show"> <umb-button alias="overlayClose" action="closeOverLay()" button-style="link" label-key="{{model.closeButtonLabelKey}}" label="{{model.closeButtonLabel}}" type="button"> </umb-button> <umb-button alias="overlaySubmit" button-style="{{model.submitButtonStyle || \'success\'}}" label-key="{{model.submitButtonLabelKey}}" label="{{model.submitButtonLabel}}" ng-if="model.submit && model.hideSubmitButton !== true" type="button" disabled="model.disableSubmitButton" action="submitForm(model)" state="model.submitButtonState" auto-focus="true"> </umb-button> </div> </div> </ng-form> </div> ',scope:{ngShow:'=',model:'=',view:'=',position:'@',size:'=?',parentScope:'=?'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbOverlay',OverlayDirective);}());'use strict';(function(){'use strict';function OverlayBackdropDirective(overlayHelper){function link(scope,el,attr,ctrl){scope.numberOfOverlays=0;scope.$watch(function(){return overlayHelper.getNumberOfOverlays();},function(newValue){scope.numberOfOverlays=newValue;});}
var directive={restrict:'E',replace:true,template:'<div class="umb-overlay-backdrop animate umb-animated" ng-if="numberOfOverlays > 0"></div> ',link:link};return directive;}
angular.module('umbraco.directives').directive('umbOverlayBackdrop',OverlayBackdropDirective);}());'use strict';(function(){'use strict';angular.module('umbraco.directives').component('umbProperty',{template:'<div class="umb-property"> <ng-form name="propertyForm"> <div class="control-group umb-control-group" ng-class="{hidelabel:vm.property.hideLabel, \'umb-control-group__listview\': vm.property.alias === \'_umb_containerView\'}"> <val-property-msg></val-property-msg> <div class="umb-el-wrap"> <div class="control-header" ng-hide="vm.property.hideLabel === true"> <small ng-if="vm.showInherit" class="db" style="padding-top: 0; margin-bottom: 5px;"> <localize key="contentTypeEditor_inheritedFrom"></localize> {{vm.inheritsFrom}} </small> <label class="control-label" for="{{vm.property.alias}}" ng-attr-title="{{vm.controlLabelTitle}}"> {{vm.property.label}} <span ng-if="vm.property.validation.mandatory"> <strong class="umb-control-required">*</strong> </span> </label> <umb-property-actions actions="vm.propertyActions"></umb-property-actions> <small class="control-description" ng-if="vm.property.description" ng-bind-html="vm.property.description | preserveNewLineInHtml"></small> </div> <div class="controls" ng-transclude> </div> </div> </div> </ng-form> </div> ',controller:UmbPropertyController,controllerAs:'vm',transclude:true,require:{parentUmbProperty:'?^^umbProperty',parentForm:'?^^form'},bindings:{property:'=',elementKey:'@',propertyAlias:'@',showInherit:'<',inheritsFrom:'<'}});function UmbPropertyController($scope,userService,serverValidationManager,udiService,angularHelper){var vm=this;vm.$onInit=onInit;vm.setPropertyError=function(errorMsg){vm.property.propertyErrorMessage=errorMsg;};vm.propertyActions=[];vm.setPropertyActions=function(actions){vm.propertyActions=actions;};vm.getValidationPath=function(){var parentValidationPath=vm.parentUmbProperty?vm.parentUmbProperty.getValidationPath():null;var propAlias=vm.propertyAlias?vm.propertyAlias:vm.property.alias;var valPath=vm.elementKey?vm.elementKey+'/'+propAlias:propAlias;return serverValidationManager.createPropertyValidationKey(valPath,parentValidationPath);};function onInit(){vm.controlLabelTitle=null;if(Umbraco.Sys.ServerVariables.isDebuggingEnabled){userService.getCurrentUser().then(function(u){if(u.allowedSections.indexOf('settings')!==-1?true:false){vm.controlLabelTitle=vm.property.alias;}});}
if(!vm.parentUmbProperty){var found=angularHelper.traverseScopeChain($scope,function(s){return s&&s.vm&&s.vm.constructor.name==='UmbPropertyController';});vm.parentUmbProperty=found?found.vm:null;}}}}());'use strict';function umbPropEditor(umbPropEditorHelper){return{scope:{model:'=',isPreValue:'@',preview:'<'},require:['^^form','?^umbProperty'],restrict:'E',replace:true,template:'<div class="umb-property-editor db" ng-class="{\'umb-property-editor--preview\': preview}"> <div disable-tabindex="preview"> <div ng-include="propertyEditorView"></div> </div> </div> ',link:function link(scope,element,attrs,ctrl){scope[ctrl[0].$name]=ctrl[0];scope['umbProperty']=ctrl[1];if(!scope.model.alias){scope.model.alias=Math.random().toString(36).slice(2);}
var unbindWatcher=scope.$watch('model.view',function(){scope.propertyEditorView=umbPropEditorHelper.getViewPath(scope.model.view,scope.isPreValue);});scope.$on('$destroy',function(){unbindWatcher();});}};};angular.module('umbraco.directives').directive('umbPropertyEditor',umbPropEditor);'use strict';angular.module('umbraco.directives.html').directive('umbPropertyGroup',function(){return{transclude:true,restrict:'E',replace:true,template:''};});'use strict';(function(){'use strict';angular.module('umbraco.directives').component('umbTabContent',{transclude:true,template:'<div data-element="tab-content-{{vm.tab.alias}}"> <ng-transclude></ng-transclude> </div> ',controllerAs:'vm',bindings:{tab:'<'}});}());'use strict';(function(){'use strict';function TabsNavDirective($timeout,$window){function link(scope,element,attrs,ctrl){var tabNavItemsWidths=[];var container=element.parent().parent();$timeout(function(){element.find('li:not(umb-tab--expand)').each(function(){tabNavItemsWidths.push($(this).outerWidth());});calculateWidth();});function calculateWidth(){$timeout(function(){var containerWidth=container.width()-90;var tabsWidth=0;ctrl.overflowingSections=0;ctrl.needTray=false;ctrl.maxTabs=tabNavItemsWidths.length;for(var i=0;i<=tabNavItemsWidths.length;i++){var tabWidth=tabNavItemsWidths[i];tabsWidth+=tabWidth;if(tabsWidth>=containerWidth){ctrl.needTray=true;ctrl.maxTabs=i;ctrl.overflowingTabs=ctrl.maxTabs-ctrl.tabs.length;break;}}});}
$(window).on('resize.tabsNav',function(){calculateWidth();});scope.$on('$destroy',function(){$(window).off('resize.tabsNav');});}
function UmbTabsNavController(eventsService){var vm=this;vm.needTray=false;vm.showTray=false;vm.overflowingSections=0;vm.clickTab=clickTab;vm.toggleTray=toggleTray;vm.hideTray=hideTray;function clickTab($event,tab){if(vm.onTabChange){hideTray();var args={'tab':tab,'tabs':vm.tabs};eventsService.emit('app.tabChange',args);vm.onTabChange({'event':$event,'tab':tab});}}
function toggleTray(){vm.showTray=!vm.showTray;}
function hideTray(){vm.showTray=false;}}
var directive={restrict:'E',transclude:true,template:'<ul role="tablist" class="umb-tabs-nav"> <li class="umb-tab" ng-repeat="tab in vm.tabs | limitTo: vm.maxTabs" data-element="tab-{{tab.alias}}" ng-class="{\'umb-tab--active\': tab.active, \'umb-tab--error\': tabHasError}" val-tab> <button class="btn-reset umb-tab-button" ng-click="vm.clickTab($event, tab)" role="tab" aria-selected="{tab.active}" type="button">{{ tab.label }}</button> </li> <li data-element="tab-expand" class="umb-tab umb-tab--expand" ng-class="{ \'open\': vm.showTray }" ng-show="vm.needTray"> <button class="btn-reset umb-tab-button umb-tab-button--expand" ng-click="vm.toggleTray()" type="button"> <i></i><i></i><i></i> <span class="sr-only"><localize key="visuallyHiddenTexts_tabExpand">View more options</localize></span> </button> <umb-dropdown class="umb-tabs-tray" ng-if="vm.showTray" on-close="vm.hideTray()"> <umb-dropdown-item ng-repeat="tab in vm.tabs | limitTo: vm.overflowingTabs" ng-class="{\'umb-tabs-tray-item--active\': tab.active}"> <button class="btn-reset umb-tab-button" ng-click="vm.clickTab($event, tab)" role="tab" aria-selected="{tab.active}" type="button">{{ tab.label }}</button> </umb-dropdown-item> </umb-dropdown> </li> </ul> ',link:link,bindToController:true,controller:UmbTabsNavController,controllerAs:'vm',scope:{tabs:'<',onTabChange:'&'}};return directive;}
angular.module('umbraco.directives').directive('umbTabsNav',TabsNavDirective);}());'use strict';(function(){'use strict';angular.module('umbraco.directives').component('umbTagsEditor',{transclude:true,template:'<div> <ng-form name="vm.tagEditorForm"> <div ng-if="vm.isLoading"> <localize key="loading">Loading</localize>... </div> <div ng-if="!isLoading"> <input type="hidden" name="tagCount" ng-model="vm.viewModel.length" val-property-validator="vm.validateMandatory"> <span ng-repeat="tag in vm.viewModel track by $index" class="label label-primary tag" ng-keyup="vm.onKeyUpOnTag(tag, $event)" tabindex="0"> <span ng-bind-html="tag"></span> <i class="icon-trash" ng-click="vm.showPrompt($index, tag)" localize="title" title="@buttons_deleteTag"></i> <umb-confirm-action ng-if="vm.promptIsVisible === $index" direction="left" on-confirm="vm.removeTag(tag)" on-cancel="vm.hidePrompt()"> </umb-confirm-action> </span> <input type="text" id="{{vm.inputId}}" class="typeahead tags-{{vm.inputId}}" ng-model="vm.tagToAdd" ng-keydown="vm.addTagOnEnter($event)" ng-blur="vm.addTag()" localize="placeholder" placeholder="@placeholders_enterTags"> </div> </ng-form> </div> ',controller:umbTagsEditorController,controllerAs:'vm',bindings:{value:'<',config:'<',validation:'<',culture:'<?',inputId:'@?',onValueChanged:'&'}});function umbTagsEditorController($rootScope,assetsService,umbRequestHelper,angularHelper,$timeout,$element){var vm=this;var typeahead;var tagsHound;var initLoad=true;vm.$onInit=onInit;vm.$onChanges=onChanges;vm.$onDestroy=onDestroy;vm.validateMandatory=validateMandatory;vm.addTagOnEnter=addTagOnEnter;vm.addTag=addTag;vm.removeTag=removeTag;vm.showPrompt=showPrompt;vm.hidePrompt=hidePrompt;vm.onKeyUpOnTag=onKeyUpOnTag;vm.isLoading=true;vm.tagToAdd='';vm.promptIsVisible='-1';vm.viewModel=[];function onInit(){vm.inputId=vm.inputId||'t'+String.CreateGuid();assetsService.loadJs('lib/typeahead.js/typeahead.bundle.min.js').then(function(){vm.isLoading=false;configureViewModel(true);vm.promptIsVisible='-1';tagsHound=new Bloodhound({initialize:false,identify:function identify(obj){return obj.id;},datumTokenizer:Bloodhound.tokenizers.obj.whitespace('text'),queryTokenizer:Bloodhound.tokenizers.whitespace,prefetch:{url:umbRequestHelper.getApiUrl('tagsDataBaseUrl','GetTags',{tagGroup:vm.config.group,culture:vm.culture}),ttl:300000},remote:{url:umbRequestHelper.getApiUrl('tagsDataBaseUrl','GetTags',{tagGroup:vm.config.group,culture:vm.culture,query:'%QUERY'}),wildcard:'%QUERY'}});tagsHound.initialize().then(function(){var sources={name:vm.config.group+(vm.culture?vm.culture:''),display:'text',source:function source(query,syncCallback,asyncCallback){tagsHound.search(query,function(suggestions){syncCallback(removeCurrentTagsFromSuggestions(suggestions));},function(suggestions){asyncCallback(removeCurrentTagsFromSuggestions(suggestions));});}};var opts={hint:true,highlight:true,cacheKey:new Date(),minLength:1};typeahead=$element.find('.tags-'+vm.inputId).typeahead(opts,sources).bind('typeahead:selected',function(obj,datum,name){angularHelper.safeApply($rootScope,function(){addTagInternal(datum['text']);vm.tagToAdd='';typeahead.typeahead('val','');});}).bind('typeahead:autocompleted',function(obj,datum,name){angularHelper.safeApply($rootScope,function(){addTagInternal(datum['text']);vm.tagToAdd='';typeahead.typeahead('val','');});}).bind('typeahead:opened',function(obj){});});});}
function onChanges(changes){if(changes.value){if(!changes.value.isFirstChange()&&changes.value.currentValue!==changes.value.previousValue){configureViewModel();reValidate();}}}
function onDestroy(){if(tagsHound){tagsHound.clearPrefetchCache();tagsHound.clearRemoteCache();tagsHound=null;}
$element.find('.tags-'+vm.inputId).typeahead('destroy');}
function configureViewModel(isInitLoad){if(vm.value){if(Utilities.isString(vm.value)&&vm.value.length>0){if(vm.config.storageType==='Json'){vm.viewModel=JSON.parse(vm.value);if(!isInitLoad){updateModelValue(vm.viewModel);}}else{var tempArray=vm.value.split(',').map(function(v){return v.trim();});vm.viewModel=tempArray.filter(function(v,i,self){return self.indexOf(v)===i;});if(!isInitLoad){updateModelValue(vm.viewModel);}}}else if(Utilities.isArray(vm.value)){vm.viewModel=vm.value;}}}
function updateModelValue(val){val=val?val:[];vm.onValueChanged({value:val});reValidate();}
function validateMandatory(){return{isValid:!vm.validation.mandatory||vm.viewModel!=null&&vm.viewModel.length>0||vm.value!=null&&vm.value.length>0,errorMsg:'Value cannot be empty',errorKey:'required'};}
function addTagInternal(tagToAdd){if(tagToAdd!=null&&tagToAdd.length>0){if(vm.viewModel.indexOf(tagToAdd)<0){vm.viewModel.push(tagToAdd);updateModelValue(vm.viewModel);}}}
function addTagOnEnter(e){var code=e.keyCode||e.which;if(code==13){if($element.find('.tags-'+vm.inputId).parent().find('.tt-menu .tt-cursor').length===0){e.preventDefault();addTag();}}}
function addTag(){addTagInternal(vm.tagToAdd);vm.tagToAdd='';typeahead.typeahead('val','');}
function removeTag(tag){var i=vm.viewModel.indexOf(tag);if(i>=0){vm.promptIsVisible='-1';vm.viewModel.splice(i,1);updateModelValue(vm.viewModel);}}
function showPrompt(idx,tag){var i=vm.viewModel.indexOf(tag);if(i===idx){vm.promptIsVisible=i;}}
function hidePrompt(){vm.promptIsVisible='-1';}
function onKeyUpOnTag(tag,$event){if($event.keyCode===8||$event.keyCode===46){removeTag(tag);}}
function removeCurrentTagsFromSuggestions(suggestions){return $.grep(suggestions,function(suggestion){return $.inArray(suggestion.text,vm.viewModel)===-1;});}
function reValidate(){if(vm.tagEditorForm&&vm.tagEditorForm.tagCount){vm.tagEditorForm.tagCount.$setViewValue(vm.viewModel.length);}}}}());'use strict';(function(){'use strict';function UmbContextDialog(navigationService,keyboardService,localizationService,overlayService,backdropService){function link($scope){$scope.dialog={confirmDiscardChanges:false};$scope.outSideClick=function(){hide();};keyboardService.bind('esc',function(){hide();});$scope.$on('$destroy',function(){keyboardService.unbind('esc');});function hide(){if($scope.dialog.confirmDiscardChanges){localizationService.localizeMany(['prompt_unsavedChanges','prompt_unsavedChangesWarning','prompt_discardChanges','prompt_stay']).then(function(values){var overlay={'view':'default','title':values[0],'content':values[1],'disableBackdropClick':true,'disableEscKey':true,'submitButtonLabel':values[2],'closeButtonLabel':values[3],submit:function submit(){overlayService.close();navigationService.hideDialog();},close:function close(){overlayService.close();}};overlayService.open(overlay);});}else{navigationService.hideDialog();}}}
var directive={restrict:'E',transclude:true,template:'<div id="dialog" class="umb-modalcolumn fill shadow" on-outside-click="outSideClick()"> <div class="umb-modalcolumn-header"> <h1>{{dialogTitle}}</h1> </div> <div class="umb-modalcolumn-body" ng-include="view"></div> </div> ',scope:{dialogTitle:'<',currentNode:'<',view:'<'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbContextDialog',UmbContextDialog);}());'use strict';function umbTreeDirective($q,$rootScope,treeService,notificationsService,userService,backdropService){return{restrict:'E',replace:true,terminal:false,template:'<ul class="umb-tree" ng-class="{\'hide-options\': hideoptions === \'true\'}"> <li ng-if="!tree.root.containsGroups"> <div class="umb-tree-root" data-element="tree-root" ng-class="getNodeCssClass(tree.root)" ng-hide="hideheader === \'true\'" on-right-click="altSelect(tree.root, $event)"> <h5> <a ng-href="#/{{section}}" ng-click="select(tree.root, $event)" class="umb-tree-root-link umb-outline" data-element="tree-root-link"> <i ng-if="enablecheckboxes === \'true\'" ng-class="selectEnabledNodeClass(tree.root)"></i> {{tree.name}} </a> </h5> <button data-element="tree-item-options" class="umb-options btn-reset sr-only sr-only--focusable sr-only--hoverable" ng-hide="tree.root.isContainer || !tree.root.menuUrl" ng-click="options(tree.root, $event)" ng-swipe-right="options(tree.root, $event)"> <i></i><i></i><i></i> </button> </div> <umb-tree-item class="umb-animated" ng-repeat="child in tree.root.children" enablelistviewexpand="{{enablelistviewexpand}}" node="child" current-node="currentNode" tree="this" is-dialog="isdialog" section="{{section}}"> </umb-tree-item> </li>  <li ng-if="tree.root.containsGroups" ng-repeat="group in tree.root.children"> <div class="umb-tree-root" data-element="tree-root" ng-class="getNodeCssClass(group)" ng-hide="hideheader === \'true\'" on-right-click="altSelect(group, $event)"> <h5> <a ng-href="#/{{section}}" ng-click="select(group, $event)" class="umb-tree-root-link umb-outline" data-element="tree-root-link"> <i ng-if="enablecheckboxes === \'true\'" ng-class="selectEnabledNodeClass(group)"></i> {{group.name}} </a> </h5> <button data-element="tree-item-options" class="umb-options umb-outline btn-reset sr-only sr-only--focusable sr-only--hoverable" ng-hide="group.isContainer || !group.menuUrl" ng-click="options(group, $event)" ng-swipe-right="options(group, $event)"> <i></i><i></i><i></i> </button> </div> <umb-tree-item class="umb-animated" ng-repeat="child in group.children" enablelistviewexpand="{{enablelistviewexpand}}" node="child" current-node="currentNode" tree="this" is-dialog="isdialog" section="{{section}}"> </umb-tree-item> </li>  </ul> ',scope:{section:'@',treealias:'@',hideoptions:'@',hideheader:'@',cachekey:'@',isdialog:'@',onlyInitialized:'@',customtreeparams:'@',enablecheckboxes:'@',enablelistviewsearch:'@',enablelistviewexpand:'@',api:'=?',onInit:'&?'},controller:function controller($scope,$element){var vm=this;var registeredCallbacks={treeNodeExpanded:[],treeNodeSelect:[],treeLoaded:[],treeSynced:[],treeOptionsClick:[],treeNodeAltSelect:[]};vm.callbacks={treeNodeExpanded:function treeNodeExpanded(f){registeredCallbacks.treeNodeExpanded.push(f);},treeNodeSelect:function treeNodeSelect(f){registeredCallbacks.treeNodeSelect.push(f);},treeLoaded:function treeLoaded(f){registeredCallbacks.treeLoaded.push(f);},treeSynced:function treeSynced(f){registeredCallbacks.treeSynced.push(f);},treeOptionsClick:function treeOptionsClick(f){registeredCallbacks.treeOptionsClick.push(f);},treeNodeAltSelect:function treeNodeAltSelect(f){registeredCallbacks.treeNodeAltSelect.push(f);}};vm.emitEvent=emitEvent;vm.load=load;vm.reloadNode=reloadNode;vm.syncTree=syncTree;vm.loadChildren=loadChildren;vm.hasTree=hasTree;if($scope.api){$scope.api.callbacks=vm.callbacks;$scope.api.load=vm.load;$scope.api.reloadNode=vm.reloadNode;$scope.api.syncTree=vm.syncTree;$scope.api.hasTree=vm.hasTree;}
var lastSection='';function emitEvent(eventName,args){if(registeredCallbacks[eventName]&&Utilities.isArray(registeredCallbacks[eventName])){_.each(registeredCallbacks[eventName],function(c){c(args);});}}
function load(args){if(Utilities.isString(args)){$scope.section=args;}else if(args){if(args.section){$scope.section=args.section;}
if(args.customTreeParams){$scope.customtreeparams=args.customTreeParams;}
if(args.treeAlias){$scope.treealias=args.treeAlias;}
if(args.cacheKey){$scope.cachekey=args.cacheKey;}}
return loadTree();}
function reloadNode(node){if(!node){node=$scope.currentNode;}
if(node){return $scope.loadChildren(node,true);}
return $q.reject();}
function syncTree(args){if(!args){throw'args cannot be null';}
if(!args.path){throw'args.path cannot be null';}
if(Utilities.isString(args.path)){args.path=args.path.replace('"','').split(',');}
args.path=_.filter(args.path,function(item){return item!=='init'&&item!=='-1';});var treeNode=loadActiveTree(args.tree);return treeService.syncTree({node:treeNode,path:args.path,forceReload:args.forceReload}).then(function(data){if(args.activate===undefined||args.activate===true){$scope.currentNode=data;}
emitEvent('treeSynced',{node:data,activate:args.activate});return $q.when({node:data,activate:args.activate});},function(data){return $q.reject(data);},function(data){if(data.type==='treeNodeExpanded'){emitEvent('treeNodeExpanded',{tree:$scope.tree,node:data.node,children:data.children});}});}
function getTreeRootNodes(){var roots;if($scope.tree.root.containsGroups){roots=_.reduce(_.map($scope.tree.root.children,function(n){return n.children;}),function(m,p){return m.concat(p);});}else{roots=[$scope.tree.root].concat($scope.tree.root.children);}
return _.filter(roots,function(node){return node&&node.metaData&&node.metaData.treeAlias;});}
function hasTree(treeAlias){if(!$scope.tree){throw'Err in umbtree.directive.loadActiveTree, $scope.tree is null';}
if(!treeAlias){return false;}
var treeRoots=getTreeRootNodes();var foundTree=_.find(treeRoots,function(node){return node.metaData.treeAlias.toUpperCase()===treeAlias.toUpperCase();});return foundTree!==undefined;}
function loadActiveTree(treeAlias){if(!$scope.tree){throw'Err in umbtree.directive.loadActiveTree, $scope.tree is null';}
if(!treeAlias){if(!$scope.activeTree){throw'Err in umbtree.directive.loadActiveTree, $scope.activeTree is null';}
return $scope.activeTree;}
var treeRoots=getTreeRootNodes();$scope.activeTree=_.find(treeRoots,function(node){return node.metaData.treeAlias.toUpperCase()===treeAlias.toUpperCase();});if(!$scope.activeTree){throw'Could not find the tree '+treeAlias;}
emitEvent('activeTreeLoaded',{tree:$scope.activeTree});return $scope.activeTree;}
function loadTree(){if($scope.section){var args={section:$scope.section,tree:$scope.treealias,cacheKey:$scope.cachekey,isDialog:$scope.isdialog?$scope.isdialog:false};if($scope.customtreeparams){args['queryString']=$scope.customtreeparams;}
return treeService.getTree(args).then(function(data){if(data.alias!==$scope.section){return $q.reject();}
$scope.tree=data;$scope.activeTree=$scope.tree.root;emitEvent('treeLoaded',{tree:$scope.tree});emitEvent('treeNodeExpanded',{tree:$scope.tree,node:$scope.tree.root,children:$scope.tree.root.children});return $q.when(data);},function(reason){notificationsService.error('Tree Error',reason);return $q.reject(reason);});}else{return $q.reject();}}
function loadChildren(node,forceReload){emitEvent('treeNodeExpanding',{tree:$scope.tree,node:node});if(!node.children){node.children=[];}
if(forceReload||node.hasChildren&&node.children.length===0){return treeService.loadNodeChildren({node:node,section:$scope.section,isDialog:$scope.isdialog}).then(function(data){emitEvent('treeNodeExpanded',{tree:$scope.tree,node:node,children:data});return $q.when(data);});}else{emitEvent('treeNodeExpanded',{tree:$scope.tree,node:node,children:node.children});node.expanded=true;return $q.when(node.children);}}
function closeBackdrop(){var aboveClass='above-backdrop';var leftColumn=$('#leftcolumn');var isLeftColumnOnTop=leftColumn.hasClass(aboveClass);if(isLeftColumnOnTop){backdropService.close();leftColumn.removeClass(aboveClass);}}
$scope.getNodeCssClass=function(node){if(!node){return'';}
var css=[];if(node.cssClasses){_.each(node.cssClasses,function(c){css.push(c);});}
return css.join(' ');};$scope.selectEnabledNodeClass=function(node){return node?node.selected?'icon umb-tree-icon sprTree icon-check green temporary':'':'';};$scope.loadChildren=function(node,forceReload){return loadChildren(node,forceReload);};$scope.options=function(n,ev){emitEvent('treeOptionsClick',{element:$element,node:n,event:ev});};$scope.select=function(n,ev){closeBackdrop();if(n.metaData&&n.metaData.noAccess===true){ev.preventDefault();return;}
$scope.currentNode=null;emitEvent('treeNodeSelect',{element:$element,node:n,event:ev});};$scope.altSelect=function(n,ev){emitEvent('treeNodeAltSelect',{element:$element,tree:$scope.tree,node:n,event:ev});};$q.when($scope.onInit(),function(args){if(args){if(args.section){$scope.section=args.section;}
if(args.cacheKey){$scope.cachekey=args.cacheKey;}
if(args.customTreeParams){$scope.customtreeparams=args.customTreeParams;}}
loadTree().then(function(){if(args&&args.onLoaded&&angular.isFunction(args.onLoaded)){args.onLoaded();}});});}};}
angular.module('umbraco.directives').directive('umbTree',umbTreeDirective);'use strict';angular.module('umbraco.directives').directive('umbTreeItem',function(treeService,$timeout,localizationService,eventsService,appState,navigationService){return{restrict:'E',replace:true,require:'^umbTree',template:'<li class="umb-tree-item" data-element="tree-item-{{::node.dataElement}}" ng-class="getNodeCssClass(node)" on-right-click="altSelect(node, $event)"> <div class="umb-tree-item__inner" ng-swipe-right="options(node, $event)" ng-dblclick="load(node)" tabindex="-1"> <button data-element="tree-item-expand" class="umb-tree-item__arrow umb-outline btn-reset" ng-class="{\'icon-navigation-right\': !node.expanded || node.metaData.isContainer, \'icon-navigation-down\': node.expanded && !node.metaData.isContainer}" ng-style="{\'visibility\': (scope.enablelistviewexpand === \'true\' || node.hasChildren && (!node.metaData.isContainer || isDialog)) ? \'visible\' : \'hidden\'}" ng-click="load(node)">&nbsp;  <span class="sr-only">Expand child items for {{node.name}}</span> </button> <i class="icon umb-tree-icon sprTree" ng-class="::node.cssClass" title="{{::node.title}}" ng-click="select(node, $event)" ng-style="::node.style" tabindex="-1"></i> <span class="umb-tree-item__annotation"></span> <a class="umb-tree-item__label" ng-href="#/{{::node.routePath}}" ng-click="select(node, $event)" title="{{::node.title}}">{{node.name}}</a>  <button data-element="tree-item-options" class="umb-options btn-reset sr-only sr-only--focusable sr-only--hoverable" ng-click="options(node, $event)" ng-if="::node.menuUrl" aria-label="{{optionsText}} {{node.name}}"><i></i><i></i><i></i></button> <umb-loader ng-show="node.loading" position="bottom" class="umb-tree-item__loader"></umb-loader> </div> <ul ng-class="{collapsed: !node.expanded}"> <umb-tree-item class="umb-animated" ng-repeat="child in node.children track by child.id" enablelistviewexpand="{{enablelistviewexpand}}" tree="tree" current-node="currentNode" node="child" is-dialog="isDialog" section="{{section}}"></umb-tree-item> </ul> </li> ',scope:{section:'@',currentNode:'=',enablelistviewexpand:'@',node:'=',tree:'=',isDialog:'='},link:function link(scope,element,attrs,umbTreeCtrl){localizationService.localizeMany(['general_search','visuallyHiddenTexts_openContextMenu']).then(function(value){scope.searchAltText=value[0];scope.optionsText=value[1];});function setupNodeDom(node,tree){element.children(':first').css('padding-left',node.level*20+'px');if(!node.metaData.treeAlias){node.dataElement=node.name;}else{node.dataElement=node.metaData.treeAlias;}}
scope.getNodeCssClass=function(node){if(!node){return'';}
var actionNode=appState.getMenuState('currentNode');var css=[];if(node.cssClasses){_.each(node.cssClasses,function(c){css.push(c);});}
if(node.selected){css.push('umb-tree-node-checked');}
if(node==scope.currentNode){css.push('current');if(actionNode&&actionNode.id!==node.id){css.push('current-not-active');}}
if(node.hasChildren){css.push('has-children');}
if(node.deleteAnimations){css.push('umb-tree-item--deleted');}
if(actionNode&&actionNode.nodeType===node.nodeType){if(actionNode.id===node.id&&String(node.id)!=='-1'){css.push('active');}
if(String(node.id)==='-1'&&actionNode.metaData.treeAlias===node.metaData.treeAlias){css.push('active');}}
return css.join(' ');};scope.node.updateNodeData=function(newNode){_.extend(scope.node,newNode);setupNodeDom(scope.node,scope.tree);};scope.options=function(n,ev){umbTreeCtrl.emitEvent('treeOptionsClick',{element:element,tree:scope.tree,node:n,event:ev});};scope.select=function(n,ev){if(ev.ctrlKey||ev.shiftKey||ev.metaKey||ev.button&&ev.button===1){return;}
if(n.metaData&&n.metaData.noAccess===true){ev.preventDefault();return;}
umbTreeCtrl.emitEvent('treeNodeSelect',{element:element,tree:scope.tree,node:n,event:ev});ev.preventDefault();};scope.altSelect=function(n,ev){if(ev.altKey)
return false;umbTreeCtrl.emitEvent('treeNodeAltSelect',{element:element,tree:scope.tree,node:n,event:ev});};scope.load=function(node){if(node.expanded&&!node.metaData.isContainer){umbTreeCtrl.emitEvent('treeNodeCollapsing',{tree:scope.tree,node:node,element:element});node.expanded=false;}else{scope.loadChildren(node,false);}};scope.loadChildren=function(node,forceReload){return umbTreeCtrl.loadChildren(node,forceReload);};setupNodeDom(scope.node,scope.tree);if(scope.node.hasChildren&&scope.node.metaData.noAccess){scope.loadChildren(scope.node);}
var evts=[];evts.push(eventsService.on('appState.sectionState.changed',function(e,args){if(args.key==='currentSection'){scope.node.deleteAnimations=false;}}));function toggleDeleteAnimations(){var hide=!appState.getMenuState('showMenuDialog')&&!appState.getMenuState('showMenu');if(hide){scope.node.deleteAnimations=false;}else{var currentNode=appState.getMenuState('currentNode');if(currentNode&&currentNode.id==scope.node.id){scope.node.deleteAnimations=true;}else{scope.node.deleteAnimations=false;}}}
evts.push(eventsService.on('appState.menuState.changed',function(e,args){if(args.key==='showMenuDialog'||args.key=='showMenu'||args.key=='currentNode'){toggleDeleteAnimations();}}));scope.$on('$destroy',function(){for(var e in evts){eventsService.unsubscribe(evts[e]);}});}};});'use strict';function treeSearchBox(localizationService,searchService,$q){return{scope:{searchFromId:'@',searchFromName:'@',showSearch:'@',section:'@',datatypeKey:'@',hideSearchCallback:'=',searchCallback:'=',autoFocus:'='},restrict:'E',replace:true,template:'<div class="form-search"> <i class="icon icon-search" ng-if="showSearch == \'false\'"></i> <a class="icon icon-arrow-left" ng-if="showSearch == \'true\'" title="Back" ng-click="hideSearch()"></a> <input type="text" ng-model="term" class="umb-search-field search-query -full-width-input" placeholder="{{searchPlaceholderText}}" umb-auto-focus="{{autoFocus ? \'true\' : \'false\'}}"> <h4 ng-if="showSearch && searchFromName"> <small><localize key="general_search">Search</localize>:&nbsp;</small> {{searchFromName}} </h4> </div> ',link:function link(scope,element,attrs,ctrl){scope.term='';scope.hideSearch=function(){scope.term='';scope.hideSearchCallback();};localizationService.localize('general_typeToSearch').then(function(value){scope.searchPlaceholderText=value;});if(!scope.showSearch){scope.showSearch='false';}
var canceler=null;function performSearch(){if(scope.term){scope.results=[];if(canceler){canceler.resolve();canceler=$q.defer();}else{canceler=$q.defer();}
var searchArgs={term:scope.term,canceler:canceler};if(scope.searchFromId){searchArgs['searchFrom']=scope.searchFromId;}
if(scope.datatypeKey){searchArgs['dataTypeKey']=scope.datatypeKey;}
searcher(searchArgs).then(function(data){scope.searchCallback(data);canceler=null;});}else{scope.hideSearch();}}
scope.$watch('term',_.debounce(function(newVal,oldVal){scope.$apply(function(){if(newVal!==null&&newVal!==undefined&&newVal!==oldVal){performSearch();}});},200));var searcher=searchService.searchContent;if(scope.section==='member'){searcher=searchService.searchMembers;}else if(scope.section==='media'){searcher=searchService.searchMedia;}}};}
angular.module('umbraco.directives').directive('umbTreeSearchBox',treeSearchBox);'use strict';function treeSearchResults(){return{scope:{results:'=',selectResultCallback:'=',emptySearchResultPosition:'@'},restrict:'E',replace:true,template:'<div> <umb-empty-state ng-if="results.length === 0" position="{{emptySearchResultPosition}}"> <localize key="general_searchNoResult"></localize> </umb-empty-state> <ul class="umb-tree"> <li class="root"> <ul class="umb-search-group"> <li class="umb-search-group-item" ng-repeat="result in results"> <div ng-class="{\'umb-tree-node-checked\' : result.selected}"> <a class="umb-search-group-item-link" ng-class="{first:$first}" ng-click="selectResultCallback($event, result)"> <div class="umb-search-group-item-name"> <i class="icon umb-tree-icon sprTree {{result.icon}}"></i> {{result.name}} </div> <small class="search-subtitle" ng-if="result.subTitle">{{result.subTitle}}</small> </a> </div> </li> </ul> </li> </ul> </div> ',link:function link(scope,element,attrs,ctrl){scope.emptySearchResultPosition=scope.emptySearchResultPosition||'center';}};}
angular.module('umbraco.directives').directive('umbTreeSearchResults',treeSearchResults);'use strict';(function(){'use strict';function AceEditorDirective(umbAceEditorConfig,assetsService,angularHelper){var setOptions=function setOptions(acee,session,opts){if(Utilities.isDefined(opts.workerPath)){var config=window.ace.require('ace/config');config.set('workerPath',opts.workerPath);}
if(Utilities.isDefined(opts.require)){opts.require.forEach(function(n){window.ace.require(n);});}
if(Utilities.isDefined(opts.showGutter)){acee.renderer.setShowGutter(opts.showGutter);}
if(Utilities.isDefined(opts.useWrapMode)){session.setUseWrapMode(opts.useWrapMode);}
if(Utilities.isDefined(opts.showInvisibles)){acee.renderer.setShowInvisibles(opts.showInvisibles);}
if(Utilities.isDefined(opts.showIndentGuides)){acee.renderer.setDisplayIndentGuides(opts.showIndentGuides);}
if(Utilities.isDefined(opts.useSoftTabs)){session.setUseSoftTabs(opts.useSoftTabs);}
if(Utilities.isDefined(opts.showPrintMargin)){acee.setShowPrintMargin(opts.showPrintMargin);}
if(Utilities.isDefined(opts.disableSearch)&&opts.disableSearch){acee.commands.addCommands([{name:'unfind',bindKey:{win:'Ctrl-F',mac:'Command-F'},exec:function exec(){return false;},readOnly:true}]);}
if(Utilities.isString(opts.theme)){acee.setTheme('ace/theme/'+opts.theme);}
if(Utilities.isString(opts.mode)){session.setMode('ace/mode/'+opts.mode);}
if(Utilities.isDefined(opts.firstLineNumber)){if(Utilities.isNumber(opts.firstLineNumber)){session.setOption('firstLineNumber',opts.firstLineNumber);}else if(angular.isFunction(opts.firstLineNumber)){session.setOption('firstLineNumber',opts.firstLineNumber());}}
var key,obj;if(Utilities.isDefined(opts.advanced)){for(key in opts.advanced){obj={name:key,value:opts.advanced[key]};acee.setOption(obj.name,obj.value);}}
if(Utilities.isDefined(opts.rendererOptions)){for(key in opts.rendererOptions){obj={name:key,value:opts.rendererOptions[key]};acee.renderer.setOption(obj.name,obj.value);}}
angular.forEach(opts.callbacks,function(cb){if(angular.isFunction(cb)){cb(acee);}});};function link(scope,el,attr,ngModel){assetsService.load(['lib/ace-builds/src-min-noconflict/ace.js','lib/ace-builds/src-min-noconflict/ext-language_tools.js'],scope).then(function(){if(angular.isUndefined(window.ace)){throw new Error('ui-ace need ace to work... (o rly?)');}else{init();}});function init(){var options=umbAceEditorConfig.ace||{};var opts=angular.extend({},options,scope.umbAceEditor);var acee=window.ace.edit(el[0]);acee.$blockScrolling=Infinity;var session=acee.getSession();var onChangeListener;var onBlurListener;var executeUserCallback=function executeUserCallback(){var callback=arguments[0];var args=Array.prototype.slice.call(arguments,1);if(Utilities.isDefined(callback)){scope.$evalAsync(function(){if(angular.isFunction(callback)){callback(args);}else{throw new Error('ui-ace use a function as callback.');}});}};var listenerFactory={onChange:function onChange(callback){return function(e){var newValue=session.getValue();angularHelper.safeApply(scope,function(){scope.model=newValue;});executeUserCallback(callback,e,acee);};},onBlur:function onBlur(callback){return function(){executeUserCallback(callback,acee);};}};attr.$observe('readonly',function(value){acee.setReadOnly(!!value||value==='');});if(scope.model){session.setValue(scope.model);}
var updateOptions=function updateOptions(current,previous){if(current===previous){return;}
opts=angular.extend({},options,scope.umbAceEditor);opts.callbacks=[opts.onLoad];if(opts.onLoad!==options.onLoad){opts.callbacks.unshift(options.onLoad);}
if(opts.autoFocus===true){acee.focus();}
session.removeListener('change',onChangeListener);onChangeListener=listenerFactory.onChange(opts.onChange);session.on('change',onChangeListener);acee.removeListener('blur',onBlurListener);onBlurListener=listenerFactory.onBlur(opts.onBlur);acee.on('blur',onBlurListener);setOptions(acee,session,opts);};scope.$watch(scope.umbAceEditor,updateOptions,true);updateOptions(options);el.on('$destroy',function(){acee.session.$stopWorker();acee.destroy();});scope.$watch(function(){return[el[0].offsetWidth,el[0].offsetHeight];},function(){acee.resize();acee.renderer.updateFull();},true);}}
var directive={restrict:'EA',scope:{'umbAceEditor':'=','model':'='},link:link};return directive;}
angular.module('umbraco.directives').constant('umbAceEditorConfig',{}).directive('umbAceEditor',AceEditorDirective);}());'use strict';(function(){'use strict';function AvatarDirective(){function link(scope,element,attrs,ctrl){var eventBindings=[];scope.initials='';function onInit(){if(!scope.unknownChar){scope.unknownChar='?';}
scope.initials=getNameInitials(scope.name);}
function getNameInitials(name){if(name){var names=name.split(' '),initials=names[0].substring(0,1);if(names.length>1){initials+=names[names.length-1].substring(0,1);}
return initials.toUpperCase();}
return null;}
eventBindings.push(scope.$watch('name',function(newValue,oldValue){if(newValue===oldValue){return;}
if(oldValue===undefined||newValue===undefined){return;}
scope.initials=getNameInitials(newValue);}));onInit();}
var directive={restrict:'E',replace:true,template:'<div> <img class="umb-avatar umb-avatar--{{size}}" ng-if="imgSrc" ng-src="{{imgSrc}}" ng-srcset="{{imgSrcset}}"> <div class="umb-avatar umb-avatar--{{size}} umb-avatar--{{color}}" ng-if="!imgSrc"> <span ng-if="name">{{ initials }}</span> <span ng-if="!name">{{unknownChar}}</span> </div> </div>',scope:{size:'@',name:'@',color:'@',imgSrc:'@',imgSrcset:'@',unknownChar:'@'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbAvatar',AvatarDirective);}());'use strict';(function(){'use strict';function BadgeDirective(){var directive={restrict:'E',replace:true,transclude:true,template:'<span class="umb-badge umb-badge--{{color}} umb-badge--{{size}}" ng-transclude></span>',scope:{size:'@?',color:'@?'}};return directive;}
angular.module('umbraco.directives').directive('umbBadge',BadgeDirective);}());'use strict';(function(){'use strict';function CheckmarkDirective(){var directive={restrict:'E',replace:true,transclude:true,template:'<i class="icon-check umb-checkmark umb-checkmark--{{size}} umb-outline" ng-class="{\'umb-checkmark--checked\': checked, \'cursor-auto\': readonly}"></i> ',scope:{size:'@?',checked:'=',readonly:'@?'}};return directive;}
angular.module('umbraco.directives').directive('umbCheckmark',CheckmarkDirective);}());'use strict';(function(){'use strict';function ChildSelectorDirective(){function link(scope,el,attr,ctrl){var eventBindings=[];scope.dialogModel={};scope.showDialog=false;scope.removeChild=function(selectedChild,$index){if(scope.onRemove){scope.onRemove(selectedChild,$index);}};scope.addChild=function($event){if(scope.onAdd){scope.onAdd($event);}};function syncParentName(){angular.forEach(scope.availableChildren,function(availableChild){if(availableChild.id===scope.parentId){availableChild.name=scope.parentName;}});angular.forEach(scope.selectedChildren,function(selectedChild){if(selectedChild.id===scope.parentId){selectedChild.name=scope.parentName;}});}
function syncParentIcon(){angular.forEach(scope.availableChildren,function(availableChild){if(availableChild.id===scope.parentId){availableChild.icon=scope.parentIcon;}});angular.forEach(scope.selectedChildren,function(selectedChild){if(selectedChild.id===scope.parentId){selectedChild.icon=scope.parentIcon;}});}
eventBindings.push(scope.$watch('parentName',function(newValue,oldValue){if(newValue===oldValue){return;}
if(oldValue===undefined||newValue===undefined){return;}
syncParentName();}));eventBindings.push(scope.$watch('parentIcon',function(newValue,oldValue){if(newValue===oldValue){return;}
if(oldValue===undefined||newValue===undefined){return;}
syncParentIcon();}));scope.sortableOptions={axis:'y',cancel:'.unsortable',containment:'parent',distance:10,opacity:0.7,tolerance:'pointer',scroll:true,zIndex:6000,update:function update(e,ui){if(scope.onSort){scope.onSort();}}};scope.$on('$destroy',function(){for(var e in eventBindings){eventBindings[e]();}});}
var directive={restrict:'E',replace:true,template:'<div class="umb-child-selector"> <div class="umb-child-selector__child -parent"> <div class="umb-child-selector__child-description"> <div class="umb-child-selector__child-icon-holder"> <i class="umb-child-selector__child-icon {{ parentIcon }}"></i> </div> <span class="umb-child-selector__child-name"> <strong>{{ parentName }}</strong> </span> <small> (<localize key="general_current"></localize>) </small> </div> </div> <div class="umb-child-selector__children-container" ui-sortable="sortableOptions" ng-model="selectedChildren"> <div class="umb-child-selector__child" ng-repeat="selectedChild in selectedChildren"> <div class="umb-child-selector__child-description"> <div class="umb-child-selector__child-icon-holder"> <i class="umb-child-selector__child-icon {{selectedChild.icon}}" aria-hidden="true"></i> </div> <span class="umb-child-selector__child-name">{{selectedChild.name}}</span> </div> <div class="umb-child-selector__child-actions"> <button type="button" class="umb-child-selector__child-remove" ng-click="removeChild(selectedChild, $index)"> <i class="icon-trash" aria-hidden="true"></i> </button> </div> </div> <button type="button" class="umb-child-selector__child -placeholder unsortable" ng-click="addChild($event)" hotkey="alt+shift+c"> <div class="umb-child-selector__child-name -blue"><strong><localize key="shortcuts_addChild">Add Child</localize></strong></div> </button> </div> </div> ',scope:{selectedChildren:'=',availableChildren:'=',parentName:'=',parentIcon:'=',parentId:'=',onRemove:'=',onAdd:'=',onSort:'='},link:link};return directive;}
angular.module('umbraco.directives').directive('umbChildSelector',ChildSelectorDirective);}());'use strict';(function(){'use strict';function umbClipboardDirective($timeout,assetsService,$parse){function link(scope,element,attrs,ctrl){var clipboard;var target=element[0];assetsService.loadJs('lib/clipboard/clipboard.min.js',scope).then(function(){if(attrs.umbClipboardTarget){target.setAttribute('data-clipboard-target',attrs.umbClipboardTarget);}
if(attrs.umbClipboardAction){target.setAttribute('data-clipboard-action',attrs.umbClipboardAction);}
if(attrs.umbClipboardText){target.setAttribute('data-clipboard-text',attrs.umbClipboardText);}
clipboard=new ClipboardJS(target);var expressionHandlerSuccess=$parse(attrs.umbClipboardSuccess);clipboard.on('success',function(e){e.clearSelection();if(attrs.umbClipboardSuccess){expressionHandlerSuccess(scope,{msg:'success'});}});var expressionHandlerError=$parse(attrs.umbClipboardError);clipboard.on('error',function(e){if(attrs.umbClipboardError){expressionHandlerError(scope,{msg:'error'});}});});scope.$on('$destroy',function(){clipboard.destroy();});}
var directive={restrict:'A',link:link};return directive;}
angular.module('umbraco.directives').directive('umbClipboard',umbClipboardDirective);}());'use strict';(function(){'use strict';var umbCodeSnippet={template:' <div class="umb-code-snippet"> <div class="umb-code-snippet__header"> <span class="language" ng-if="vm.language">{{vm.language}}</span> <umb-button umb-clipboard umb-clipboard-success="vm.copySuccess()" umb-clipboard-error="vm.copyError()" umb-clipboard-target="#umbCodeSnippet_{{vm.guid}}" state="vm.page.copyCodeButtonState" icon="icon-documents" type="button" size="s" label="Copy" label-key="general_copy"> </umb-button> </div> <div class="umb-code-snippet__content"> <pre id="umbCodeSnippet_{{vm.guid}}">\r\n            <code ng-transclude></code>\r\n        </pre> </div> </div> ',controller:UmbCodeSnippetController,controllerAs:'vm',transclude:true,bindings:{language:'<'}};function UmbCodeSnippetController($timeout){var vm=this;vm.page={};vm.$onInit=onInit;vm.copySuccess=copySuccess;vm.copyError=copyError;function onInit(){vm.guid=String.CreateGuid();if(vm.language){switch(vm.language.toLowerCase()){case'csharp':case'c#':vm.language='C#';break;case'html':vm.language='HTML';break;case'css':vm.language='CSS';break;case'javascript':vm.language='JavaScript';break;}}}
function copySuccess(){if(vm.page.copyCodeButtonState!=='success'){$timeout(function(){vm.page.copyCodeButtonState='success';});$timeout(function(){resetClipboardButtonState();},1000);}}
function copyError(){if(vm.page.copyCodeButtonState!=='error'){$timeout(function(){vm.page.copyCodeButtonState='error';});$timeout(function(){resetClipboardButtonState();},1000);}}
function resetClipboardButtonState(){vm.page.copyCodeButtonState='init';}}
angular.module('umbraco.directives').component('umbCodeSnippet',umbCodeSnippet);}());'use strict';(function(){'use strict';function ColorSwatchesDirective(){function link(scope,el,attr,ctrl){if(angular.isUndefined(scope.useColorClass)){scope.useColorClass=false;}
if(angular.isUndefined(scope.colorClassNamePrefix)){scope.colorClassNamePrefix='btn';}
scope.setColor=function(color,$index,$event){if(scope.onSelect){if(scope.selectedColor!=null&&scope.selectedColor.value===color.value){color=null;}
scope.selectedColor=color;scope.onSelect({color:color,$index:$index,$event:$event});$event.stopPropagation();}};scope.isSelectedColor=function(color){return scope.selectedColor&&color.value===scope.selectedColor.value;};}
var directive={restrict:'E',replace:true,transclude:true,template:' <div class="umb-color-swatches" ng-class="{ \'with-labels\': useLabel }"> <button type="button" class="umb-color-box umb-color-box--{{size}} {{colorClassNamePrefix}}-{{color.value}}" ng-repeat="color in colors" title="{{useLabel || useColorClass ? (color.label || color.value) : (\'#\' + color.value)}}" hex-bg-inline="{{useColorClass === false}}" hex-bg-color="{{color.value}}" ng-class="{ \'active\': isSelectedColor(color) }" ng-click="setColor(color, $index, $event)"> <div class="umb-color-box-inner"> <div class="check_circle"> <i class="icon icon-check small" ng-show="isSelectedColor(color)"></i> </div> <div class="umb-color-box__label" ng-if="useLabel"> <div class="umb-color-box__name truncate">{{ color.label || color.value }}</div> <div class="umb-color-box__description">#{{ color.value }}</div> </div> </div> </button> </div> ',scope:{colors:'=?',size:'@',selectedColor:'=',onSelect:'&',useLabel:'=',useColorClass:'=?',colorClassNamePrefix:'@?'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbColorSwatches',ColorSwatchesDirective);}());'use strict';function confirmDirective(){return{restrict:'E',replace:true,template:'<div> <p ng-hide="!caption" class="umb-abstract">{{caption}}</p> <div class="umb-pane btn-toolbar umb-btn-toolbar"> <div class="control-group umb-control-group"> <umb-button ng-if="showCancel" type="button" action="onCancel()" button-style="link" disabled="confirmButtonState === \'busy\'" label-key="general_cancel"> </umb-button> <umb-button ng-if="showConfirm" type="button" action="confirm()" button-style="{{confirmButtonStyle || \'primary\'}}" state="confirmButtonState" disabled="confirmDisabled === true" label-key="{{confirmLabelKey || \'general_ok\'}}"> </umb-button> </div> </div> </div> ',scope:{onConfirm:'=',onCancel:'=',caption:'@',confirmButtonStyle:'@',confirmDisabled:'<?',confirmLabelKey:'@'},link:function link(scope,element,attr,ctrl){scope.showCancel=false;scope.showConfirm=false;scope.confirmButtonState='init';if(scope.onConfirm){scope.showConfirm=true;}
if(scope.onCancel){scope.showCancel=true;}
scope.confirm=function(){if(!scope.onConfirm){return;}
scope.confirmButtonState='busy';scope.onConfirm();};}};}
angular.module('umbraco.directives').directive('umbConfirm',confirmDirective);'use strict';(function(){'use strict';function ConfirmAction(){function link(scope,el,attr,ctrl){scope.clickConfirm=function(){if(scope.onConfirm){scope.onConfirm();}};scope.clickCancel=function(){if(scope.onCancel){scope.onCancel();}};}
var directive={restrict:'E',replace:true,template:'<div class="umb_confirm-action__overlay" ng-class="{ \'-top\': direction === \'top\', \'-right\': direction === \'right\', \'-bottom\': direction === \'bottom\', \'-left\': direction === \'left\'}" on-outside-click="clickCancel()"> <button class="umb_confirm-action__overlay-action -confirm btn-reset" ng-click="clickConfirm()" localize="title" title="@buttons_confirmActionConfirm" type="button"> <i class="icon-check" aria-hidden="true"></i> <span class="sr-only"> <localize key="buttons_confirmActionConfirm">Confirm</localize> </span> </button> <button class="umb_confirm-action__overlay-action -cancel btn-reset" ng-click="clickCancel()" localize="title" title="@buttons_confirmActionCancel" type="button"> <i class="icon-delete" aria-hidden="true"></i> <span class="sr-only"> <localize key="buttons_confirmActionCancel">Cancel</localize> </span> </button> </div> ',scope:{direction:'@',onConfirm:'&',onCancel:'&'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbConfirmAction',ConfirmAction);}());'use strict';(function(){'use strict';function ContentGridDirective(){function link(scope,el,attr,ctrl){scope.clickItem=function(item,$event,$index){if(scope.onClick){scope.onClick(item,$event,$index);}};scope.clickItemName=function(item,$event,$index){if(scope.onClickName&&!($event.metaKey||$event.ctrlKey)){scope.onClickName(item,$event,$index);$event.preventDefault();}
$event.stopPropagation();};}
var directive={restrict:'E',replace:true,template:'<div class="umb-content-grid"> <div class="umb-content-grid__item umb-outline umb-outline--surrounding" ng-repeat="item in content" ng-class="{\'-selected\': item.selected}" ng-click="clickItem(item, $event, $index)"> <div class="umb-content-grid__content"> <a class="umb-content-grid__item-name umb-outline" ng-href="{{\'#\' + item.editPath}}" ng-click="clickItemName(item, $event, $index)" ng-class="{\'-light\': !item.published && item.updater != null}"> <i class="umb-content-grid__icon {{ item.icon }}" aria-hidden="true"></i> <span>{{ item.name }}</span> </a> <ul class="umb-content-grid__details-list" ng-class="{\'-light\': !item.published && item.updater != null}"> <li class="umb-content-grid__details-item" ng-if="item.state"> <div class="umb-content-grid__details-label"><localize key="general_status"></localize>:</div> <div class="umb-content-grid__details-value"><umb-variant-state variant="item"></umb-variant-state></div> </li> <li class="umb-content-grid__details-item" ng-repeat="property in contentProperties"> <div class="umb-content-grid__details-label">{{ property.header }}:</div> <div class="umb-content-grid__details-value">{{ item[property.alias] }}</div> </li> </ul> </div> </div> <umb-empty-state ng-if="!content" position="center"> <localize key="content_noItemsToShow">There are no items to show</localize> </umb-empty-state> </div> ',scope:{content:'=',contentProperties:'=',onClick:'=',onClickName:'='},link:link};return directive;}
angular.module('umbraco.directives').directive('umbContentGrid',ContentGridDirective);}());'use strict';(function(){'use strict';var umbDateTimePicker={template:'<ng-transclude>'+'<input type="text" ng-if="!$ctrl.options.inline" ng-model="$ctrl.ngModel" placeholder="Select Date.."></input>'+'<div ng-if="$ctrl.options.inline"></div>'+'</ng-transclude>',controller:umbDateTimePickerCtrl,transclude:true,bindings:{ngModel:'<',options:'<',onSetup:'&?',onChange:'&?',onOpen:'&?',onClose:'&?',onMonthChange:'&?',onYearChange:'&?',onReady:'&?',onValueUpdate:'&?',onDayCreate:'&?'}};function umbDateTimePickerCtrl($element,$timeout,$scope,assetsService,userService){var ctrl=this;var userLocale=null;ctrl.$onInit=function(){assetsService.loadCss('lib/flatpickr/flatpickr.css',$scope).then(function(){userService.getCurrentUser().then(function(user){userLocale=user.locale;if(userLocale.indexOf('-')>-1){userLocale=userLocale.split('-')[0];}
grabElementAndRunFlatpickr();});});};function grabElementAndRunFlatpickr(){$timeout(function(){var transcludeEl=$element.find('ng-transclude')[0];var element=transcludeEl.children[0];setDatepicker(element);},0,true);}
function setDatepicker(element){var fpLib=flatpickr?flatpickr:FlatpickrInstance;if(!fpLib){return console.warn('Unable to find any flatpickr installation');}
var fpInstance;setUpCallbacks();if(!ctrl.options.locale){ctrl.options.locale=userLocale;}
ctrl.options.onKeyDown=function(selectedDates,dateStr,instance,event){var code=event.keyCode||event.which;if(code===13){fpInstance.close();}};fpInstance=new fpLib(element,ctrl.options);if(ctrl.onSetup){ctrl.onSetup({fpItem:fpInstance});}
if(ctrl.ngModel){fpInstance.setDate(ctrl.ngModel);}
$(element).on('$destroy',function(){fpInstance.destroy();});$scope.$applyAsync();}
function setUpCallbacks(){if(ctrl.options&&ctrl.onChange){ctrl.options.onChange=function(selectedDates,dateStr,instance){$timeout(function(){ctrl.onChange({selectedDates:selectedDates,dateStr:dateStr,instance:instance});});};}
if(ctrl.options&&ctrl.onOpen){ctrl.options.onOpen=function(selectedDates,dateStr,instance){$timeout(function(){ctrl.onOpen({selectedDates:selectedDates,dateStr:dateStr,instance:instance});});};}
if(ctrl.options&&ctrl.onClose){ctrl.options.onClose=function(selectedDates,dateStr,instance){$timeout(function(){ctrl.onClose({selectedDates:selectedDates,dateStr:dateStr,instance:instance});});};}
if(ctrl.options&&ctrl.onMonthChange){ctrl.options.onMonthChange=function(selectedDates,dateStr,instance){$timeout(function(){ctrl.onMonthChange({selectedDates:selectedDates,dateStr:dateStr,instance:instance});});};}
if(ctrl.options&&ctrl.onYearChange){ctrl.options.onYearChange=function(selectedDates,dateStr,instance){$timeout(function(){ctrl.onYearChange({selectedDates:selectedDates,dateStr:dateStr,instance:instance});});};}
if(ctrl.options&&ctrl.onReady){ctrl.options.onReady=function(selectedDates,dateStr,instance){$timeout(function(){ctrl.onReady({selectedDates:selectedDates,dateStr:dateStr,instance:instance});});};}
if(ctrl.onValueUpdate){ctrl.options.onValueUpdate=function(selectedDates,dateStr,instance){$timeout(function(){ctrl.onValueUpdate({selectedDates:selectedDates,dateStr:dateStr,instance:instance});});};}
if(ctrl.onDayCreate){ctrl.options.onDayCreate=function(selectedDates,dateStr,instance){$timeout(function(){ctrl.onDayCreate({selectedDates:selectedDates,dateStr:dateStr,instance:instance});});};}}}
angular.module('umbraco.directives').component('umbFlatpickr',umbDateTimePicker);angular.module('umbraco.directives').component('umbDateTimePicker',umbDateTimePicker);}());'use strict';(function(){'use strict';function UmbDisableFormValidation(){var directive={restrict:'A',require:'?form',link:function link(scope,elm,attrs,ctrl){ctrl.$setValidity=function(){};}};return directive;}
angular.module('umbraco.directives').directive('umbDisableFormValidation',UmbDisableFormValidation);}());'use strict';(function(){'use strict';function umbDropdown($document){function link(scope,element,attr,ctrl){scope.close=function(){if(scope.onClose){scope.onClose();}};function keydown(event){if(event.keyCode===27){scope.onClose();}}
function stopListening(){$document.off('keydown',keydown);}
$document.on('keydown',keydown);scope.$on('$destroy',stopListening);}
var directive={restrict:'E',replace:true,transclude:true,template:'<ul class="dropdown-menu" role="menu" on-outside-click="close()" ng-transclude></ul> ',scope:{onClose:'&'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbDropdown',umbDropdown);}());'use strict';(function(){'use strict';function umbDropdownItem(){var directive={restrict:'E',replace:true,transclude:true,template:'<li role="menuitem" ng-transclude></li> '};return directive;}
angular.module('umbraco.directives').directive('umbDropdownItem',umbDropdownItem);}());'use strict';(function(){'use strict';function EmptyStateDirective(){var directive={restrict:'E',replace:true,transclude:true,template:'<div class="umb-empty-state" ng-class="{ \'-small\': size === \'small\', \'-large\': size === \'large\', \'-center\': position === \'center\' }" ng-transclude> </div> ',scope:{size:'@',position:'@'}};return directive;}
angular.module('umbraco.directives').directive('umbEmptyState',EmptyStateDirective);}());'use strict';(function(){'use strict';function umbFileIconController(){var vm=this;if(!vm.icon){vm.icon='icon-document';}}
var component={template:'<span class="umb-file-icon umb-file-icon--{{vm.size}}"> <span class="file-icon"> <i class="icon {{vm.icon}}" aria-hidden="true"></i> <span ng-if="vm.extension">.{{vm.extension}}</span> </span> <small ng-if="vm.text">{{vm.text}}</small> </span> ',bindings:{extension:'@?',icon:'@?',size:'@?',text:'@?'},controllerAs:'vm',controller:umbFileIconController};angular.module('umbraco.directives').component('umbFileIcon',component);}());'use strict';(function(){'use strict';function FolderGridDirective(){function link(scope,el,attr,ctrl){scope.clickFolder=function(folder,$event,$index){if(scope.onClick){scope.onClick(folder,$event,$index);$event.stopPropagation();}};scope.clickFolderName=function(folder,$event,$index){if(scope.onClickName){scope.onClickName(folder,$event,$index);$event.stopPropagation();}};}
var directive={restrict:'E',replace:true,template:'<div class="umb-folder-grid"> <div class="umb-folder-grid__folder" ng-repeat="folder in folders" ng-class="{\'-selected\': folder.selected}" ng-click="clickFolder(folder, $event, $index)"> <div class="umb-folder-grid__folder-description"> <i class="umb-folder-grid__folder-icon {{ folder.icon }}"></i> <div ng-click="clickFolderName(folder, $event, $index)" class="umb-folder-grid__folder-name">{{ folder.name }}</div> </div>  </div> </div> ',scope:{folders:'=',onClick:'=',onClickName:'='},link:link};return directive;}
angular.module('umbraco.directives').directive('umbFolderGrid',FolderGridDirective);}());'use strict';angular.module('umbraco.directives').directive('umbGenerateAlias',function($timeout,entityResource,localizationService){return{restrict:'E',template:'<div> <span class="umb-locked-field__text cursor-not-allowed" ng-show="!enableLock">{{ alias }}</span> <div ng-show="enableLock"> <umb-locked-field locked="locked" ng-model="alias" placeholder-text="placeholderText" validation-position="validationPosition" server-validation-field="{{serverValidationField}}"> </umb-locked-field> </div> </div> ',replace:true,scope:{alias:'=',aliasFrom:'=',enableLock:'=?',validationPosition:'=?',serverValidationField:'@'},link:function link(scope,element,attrs,ctrl){var eventBindings=[];var bindWatcher=true;var generateAliasTimeout='';var updateAlias=false;scope.locked=true;scope.labels={idle:'Enter alias...',busy:'Generating alias...'};scope.placeholderText=scope.labels.idle;localizationService.localize('placeholders_enterAlias').then(function(value){scope.labels.idle=scope.placeholderText=value;});localizationService.localize('placeholders_generatingAlias').then(function(value){scope.labels.busy=value;});function generateAlias(value){if(generateAliasTimeout){$timeout.cancel(generateAliasTimeout);}
if(value!==undefined&&value!==''&&value!==null){scope.alias='';scope.placeholderText=scope.labels.busy;generateAliasTimeout=$timeout(function(){updateAlias=true;entityResource.getSafeAlias(value,true).then(function(safeAlias){if(updateAlias){scope.alias=safeAlias.alias;}
scope.placeholderText=scope.labels.idle;});},500);}else{updateAlias=true;scope.alias='';scope.placeholderText=scope.labels.idle;}}
eventBindings.push(scope.$watch('locked',function(newValue,oldValue){if(newValue===false){bindWatcher=false;}}));eventBindings.push(scope.$watch('alias',function(newValue,oldValue){if(scope.alias===''||scope.alias===null||scope.alias===undefined){if(bindWatcher===true){eventBindings.push(scope.$watch('aliasFrom',function(newValue,oldValue){if(bindWatcher){generateAlias(newValue);}}));}}}));scope.$on('$destroy',function(){for(var e in eventBindings){eventBindings[e]();}});}};});'use strict';(function(){'use strict';function GridSelector($location,overlayService,editorService){function link(scope,el,attr,ctrl){var eventBindings=[];scope.dialogModel={};scope.showDialog=false;scope.itemLabel='';if(!scope.itemName){scope.itemLabel='item';}else{scope.itemLabel=scope.itemName;}
scope.removeItem=function(selectedItem){var selectedItemIndex=scope.selectedItems.indexOf(selectedItem);scope.selectedItems.splice(selectedItemIndex,1);};scope.removeDefaultItem=function(){scope.selectedItems=[];scope.defaultItem=null;};scope.openItemPicker=function($event){var dialogModel={view:'itempicker',title:'Choose '+scope.itemLabel,availableItems:scope.availableItems,selectedItems:scope.selectedItems,position:'target',event:$event,submit:function submit(model){scope.selectedItems.push(model.selectedItem);if(scope.defaultItem===null){scope.setAsDefaultItem(model.selectedItem);}
overlayService.close();},close:function close(){overlayService.close();}};overlayService.open(dialogModel);};scope.openTemplate=function(selectedItem){var editor={id:selectedItem.id,submit:function submit(){editorService.close();},close:function close(){editorService.close();}};editorService.templateEditor(editor);};scope.setAsDefaultItem=function(selectedItem){scope.defaultItem={};scope.defaultItem=selectedItem;};function updatePlaceholders(){if(scope.defaultItem!==null&&scope.defaultItem.placeholder){scope.defaultItem.name=scope.name;if(scope.alias!==null&&scope.alias!==undefined){scope.defaultItem.alias=scope.alias;}}
angular.forEach(scope.selectedItems,function(selectedItem){if(selectedItem.placeholder){selectedItem.name=scope.name;if(scope.alias!==null&&scope.alias!==undefined){selectedItem.alias=scope.alias;}}});angular.forEach(scope.availableItems,function(availableItem){if(availableItem.placeholder){availableItem.name=scope.name;if(scope.alias!==null&&scope.alias!==undefined){availableItem.alias=scope.alias;}}});}
function activate(){if(scope.updatePlaceholder){eventBindings.push(scope.$watch('name',function(newValue,oldValue){updatePlaceholders();}));eventBindings.push(scope.$watch('alias',function(newValue,oldValue){updatePlaceholders();}));}}
activate();scope.$on('$destroy',function(){for(var e in eventBindings){eventBindings[e]();}});}
var directive={restrict:'E',replace:true,template:'<div class="umb-grid-selector"> <div class="umb-grid-selector__items"> <div class="umb-grid-selector__item -default" ng-if="defaultItem !== null"> <div class="umb-grid-selector__item-content"> <i class="umb-grid-selector__item-icon {{ defaultItem.icon }}" aria-hidden="true"></i> <div class="umb-grid-selector__item-label">{{ defaultItem.name }}</div> <div ng-show="defaultItem.id"><button class="umb-grid-selector__item-default-label btn-link -blue" ng-click="openTemplate(defaultItem)"><localize key="general_open">Open</localize></button></div> <span class="umb-grid-selector__item-default-label">(<localize key="general_default">Default</localize> {{itemLabel}})</span> </div> <i class="umb-grid-selector__item-remove icon-trash" ng-if="selectedItems.length === 1" ng-click="removeDefaultItem()" aria-role="button"> <span class="sr-only">Remove Template</span> </i> </div> <div class="umb-grid-selector__item" ng-repeat="selectedItem in selectedItems | filter: { alias:\'!\'+defaultItem.alias }:true"> <div class="umb-grid-selector__item-content"> <i class="umb-grid-selector__item-icon {{ selectedItem.icon }}" aria-hidden="true"></i> <div class="umb-grid-selector__item-label">{{ selectedItem.name }}</div> <div><button class="umb-grid-selector__item-default-label btn-link -blue" ng-click="openTemplate(selectedItem)"><localize key="general_open">Open</localize></button></div> <div><button class="umb-grid-selector__item-default-label btn-link -blue" ng-click="setAsDefaultItem(selectedItem)"><localize key="grid_setAsDefault">Set as default</localize></button></div> </div> <i class="umb-grid-selector__item-remove icon-trash" ng-click="removeItem(selectedItem)" aria-role="button"> <span class="sr-only">Remove Template</span> </i> </div> <button class="umb-grid-selector__item -placeholder" ng-if="(availableItems | compareArrays:selectedItems:\'alias\').length > 0" ng-click="openItemPicker($event)" hotkey="alt+shift+g"> <div class="umb-grid-selector__item-content"> <div class="umb-grid-selector__item-label -blue" ng-if="defaultItem !== null"><localize key="grid_chooseExtra">Choose extra</localize> {{ itemLabel }}</div> <div class="umb-grid-selector__item-label -blue" ng-if="defaultItem === null"><localize key="grid_chooseDefault">Choose default</localize> {{ itemLabel }}</div> </div> </button> </div> <div class="text-center" ng-if="(availableItems | compareArrays:selectedItems:\'alias\').length === 0"> <small><localize key="general_all">All</localize> {{itemLabel}}s <localize key="grid_areAdded">are added</localize></small> </div> </div> ',scope:{name:'=',alias:'=',selectedItems:'=',availableItems:'=',defaultItem:'=',itemName:'@',updatePlaceholder:'='},link:link};return directive;}
angular.module('umbraco.directives').directive('umbGridSelector',GridSelector);}());'use strict';(function(){'use strict';function GroupsBuilderDirective(contentTypeHelper,contentTypeResource,mediaTypeResource,dataTypeHelper,dataTypeResource,$filter,iconHelper,$q,$timeout,notificationsService,localizationService,editorService,eventsService,overlayService){function link(scope,el,attr,ctrl){var eventBindings=[];var validationTranslated='';var tabNoSortOrderTranslated='';scope.dataTypeHasChanged=false;scope.sortingMode=false;scope.toolbar=[];scope.sortableOptionsGroup={};scope.sortableOptionsProperty={};scope.sortingButtonKey='general_reorder';scope.compositionsButtonState='init';function activate(){setSortingOptions();if(scope.model.groups.length!==0){angular.forEach(scope.model.groups,function(group){addInitProperty(group);});}
addInitGroup(scope.model.groups);activateFirstGroup(scope.model.groups);localizationService.localize('validation_validation').then(function(value){validationTranslated=value;});localizationService.localize('contentTypeEditor_tabHasNoSortOrder').then(function(value){tabNoSortOrderTranslated=value;});}
function setSortingOptions(){scope.sortableOptionsGroup={axis:'y',distance:10,tolerance:'pointer',opacity:0.7,scroll:true,cursor:'move',placeholder:'umb-group-builder__group-sortable-placeholder',zIndex:6000,handle:'.umb-group-builder__group-handle',items:'.umb-group-builder__group-sortable',start:function start(e,ui){ui.placeholder.height(ui.item.height());},stop:function stop(e,ui){updateTabsSortOrder();}};scope.sortableOptionsProperty={axis:'y',distance:10,tolerance:'pointer',connectWith:'.umb-group-builder__properties',opacity:0.7,scroll:true,cursor:'move',placeholder:'umb-group-builder__property_sortable-placeholder',zIndex:6000,handle:'.umb-group-builder__property-handle',items:'.umb-group-builder__property-sortable',start:function start(e,ui){ui.placeholder.height(ui.item.height());},stop:function stop(e,ui){updatePropertiesSortOrder();}};}
function updateTabsSortOrder(){var first=true;var prevSortOrder=0;scope.model.groups.map(function(group){var index=scope.model.groups.indexOf(group);if(group.tabState!=='init'){if(!group.inherited&&first){if(prevSortOrder===0){group.sortOrder=0;}else{group.sortOrder=prevSortOrder+1;}
first=false;}else if(!group.inherited&&!first){var nextGroup=scope.model.groups[index+1];if(prevSortOrder===nextGroup.sortOrder){group.sortOrder=prevSortOrder;}else{group.sortOrder=prevSortOrder+1;}}
prevSortOrder=group.sortOrder;}});}
function filterAvailableCompositions(selectedContentType,selecting){var selectedContentTypeAliases=selecting?_.union(scope.compositionsDialogModel.compositeContentTypes,[selectedContentType.alias]):_.reject(scope.compositionsDialogModel.compositeContentTypes,function(i){return i===selectedContentType.alias;});var propAliasesExisting=_.filter(_.flatten(_.map(scope.model.groups,function(g){return _.map(g.properties,function(p){return p.alias;});})),function(f){return f!==null&&f!==undefined;});var resourceLookup=scope.contentType==='documentType'?contentTypeResource.getAvailableCompositeContentTypes:mediaTypeResource.getAvailableCompositeContentTypes;return resourceLookup(scope.model.id,selectedContentTypeAliases,propAliasesExisting).then(function(filteredAvailableCompositeTypes){_.each(scope.compositionsDialogModel.availableCompositeContentTypes,function(current){current.allowed=true;var found=_.find(filteredAvailableCompositeTypes,function(f){return current.contentType.alias===f.contentType.alias;});current.allowed=scope.model.lockedCompositeContentTypes.indexOf(current.contentType.alias)===-1&&selectedContentTypeAliases.indexOf(current.contentType.alias)!==-1||(found!==null&&found!==undefined?found.allowed:false);});});}
function updatePropertiesSortOrder(){angular.forEach(scope.model.groups,function(group){if(group.tabState!=='init'){group.properties=contentTypeHelper.updatePropertiesSortOrder(group.properties);}});}
function setupAvailableContentTypesModel(result){scope.compositionsDialogModel.availableCompositeContentTypes=result;_.each(scope.compositionsDialogModel.availableCompositeContentTypes,function(c){if(scope.compositionsDialogModel.compositeContentTypes.indexOf(c.contentType.alias)!==-1){c.allowed=true;}
c.inherited=false;if(scope.model.lockedCompositeContentTypes.indexOf(c.contentType.alias)>-1){c.inherited=true;}
iconHelper.formatContentTypeIcons([c.contentType]);});}
scope.togglePrompt=function(object){object.deletePrompt=!object.deletePrompt;};scope.hidePrompt=function(object){object.deletePrompt=false;};scope.toggleSortingMode=function(tool){if(scope.sortingMode===true){var sortOrderMissing=false;for(var i=0;i<scope.model.groups.length;i++){var group=scope.model.groups[i];if(group.tabState!=='init'&&group.sortOrder===undefined){sortOrderMissing=true;group.showSortOrderMissing=true;notificationsService.error(validationTranslated+': '+group.name+' '+tabNoSortOrderTranslated);}}
if(!sortOrderMissing){scope.sortingMode=false;scope.sortingButtonKey='general_reorder';}}else{scope.sortingMode=true;scope.sortingButtonKey='general_reorderDone';}};scope.openCompositionsDialog=function(){scope.compositionsDialogModel={contentType:scope.model,compositeContentTypes:scope.model.compositeContentTypes,view:'views/common/infiniteeditors/compositions/compositions.html',size:'small',submit:function submit(){if(scope.model.groups.length!==0){angular.forEach(scope.model.groups,function(group){addInitProperty(group);});}
editorService.close();},close:function close(oldModel){scope.model.groups=oldModel.contentType.groups;scope.model.compositeContentTypes=oldModel.contentType.compositeContentTypes;editorService.close();},selectCompositeContentType:function selectCompositeContentType(selectedContentType){var newSelection=scope.model.compositeContentTypes.indexOf(selectedContentType.alias)===-1;if(newSelection){var resourceLookup=scope.contentType==='documentType'?contentTypeResource.getById:mediaTypeResource.getById;resourceLookup(selectedContentType.id).then(function(composition){var overlappingAliases=contentTypeHelper.validateAddingComposition(scope.model,composition);if(overlappingAliases.length>0){scope.compositionsDialogModel.compositeContentTypes.splice(scope.compositionsDialogModel.compositeContentTypes.indexOf(composition.alias),1);selectedContentType.allowed=false;}else{contentTypeHelper.mergeCompositeContentType(scope.model,composition);}
filterAvailableCompositions(selectedContentType,newSelection).then(function(){});});}else{contentTypeHelper.splitCompositeContentType(scope.model,selectedContentType);filterAvailableCompositions(selectedContentType,newSelection).then(function(){});}}};var availableContentTypeResource=scope.contentType==='documentType'?contentTypeResource.getAvailableCompositeContentTypes:mediaTypeResource.getAvailableCompositeContentTypes;var whereUsedContentTypeResource=scope.contentType==='documentType'?contentTypeResource.getWhereCompositionIsUsedInContentTypes:mediaTypeResource.getWhereCompositionIsUsedInContentTypes;var countContentTypeResource=scope.contentType==='documentType'?contentTypeResource.getCount:mediaTypeResource.getCount;var propAliasesExisting=_.filter(_.flatten(_.map(scope.model.groups,function(g){return _.map(g.properties,function(p){return p.alias;});})),function(f){return f!==null&&f!==undefined;});scope.compositionsButtonState='busy';$q.all([availableContentTypeResource(scope.model.id,[],propAliasesExisting,scope.model.isElement).then(function(result){setupAvailableContentTypesModel(result);}),whereUsedContentTypeResource(scope.model.id).then(function(whereUsed){scope.compositionsDialogModel.section=scope.contentType;scope.compositionsDialogModel.whereCompositionUsed=whereUsed;}),countContentTypeResource().then(function(result){scope.compositionsDialogModel.totalContentTypes=parseInt(result,10);})]).then(function(){editorService.open(scope.compositionsDialogModel);scope.compositionsButtonState='init';});};scope.openDocumentType=function(documentTypeId){var editor={id:documentTypeId,submit:function submit(model){var args={node:scope.model};eventsService.emit('editors.documentType.reload',args);editorService.close();},close:function close(){editorService.close();}};editorService.documentTypeEditor(editor);};scope.addGroup=function(group){var index=scope.model.groups.indexOf(group);var prevGroup=scope.model.groups[index-1];if(index>0){group.sortOrder=prevGroup.sortOrder+1;}else{group.sortOrder=0;}
scope.activateGroup(group);addInitGroup(scope.model.groups);};scope.activateGroup=function(selectedGroup){angular.forEach(scope.model.groups,function(group){if(group.tabState!=='init'){group.tabState='inActive';}});selectedGroup.tabState='active';};scope.canRemoveGroup=function(group){return group.inherited!==true&&_.find(group.properties,function(property){return property.locked===true;})==null;};scope.removeGroup=function(groupIndex){scope.model.groups.splice(groupIndex,1);};scope.updateGroupTitle=function(group){if(group.properties.length===0){addInitProperty(group);}};scope.changeSortOrderValue=function(group){if(group.sortOrder!==undefined){group.showSortOrderMissing=false;}
scope.model.groups=$filter('orderBy')(scope.model.groups,'sortOrder');};function addInitGroup(groups){var addGroup=true;angular.forEach(groups,function(group){if(group.tabState==='init'){addGroup=false;}});if(addGroup){groups.push({properties:[],parentTabContentTypes:[],parentTabContentTypeNames:[],name:'',tabState:'init'});}
return groups;}
function activateFirstGroup(groups){if(groups&&groups.length>0){var firstGroup=groups[0];if(!firstGroup.tabState||firstGroup.tabState==='inActive'){firstGroup.tabState='active';}}}
scope.addPropertyToActiveGroup=function(){var group=_.find(scope.model.groups,function(group){return group.tabState==='active';});if(!group&&scope.model.groups.length){group=scope.model.groups[0];}
if(!group||!group.name){return;}
var property=_.find(group.properties,function(property){return property.propertyState==='init';});if(!property){return;}
scope.addProperty(property,group);};scope.addProperty=function(property,group){var index=group.properties.indexOf(property);var prevProperty=group.properties[index-1];if(index>0){property.sortOrder=prevProperty.sortOrder+1;}else{property.sortOrder=0;}
scope.editPropertyTypeSettings(property,group);};scope.editPropertyTypeSettings=function(property,group){if(!property.inherited){var oldPropertyModel=Utilities.copy(property);if(oldPropertyModel.allowCultureVariant===undefined){oldPropertyModel.allowCultureVariant=scope.model.allowCultureVariant;oldPropertyModel.alias='';}
var propertyModel=Utilities.copy(property);var propertySettings={title:'Property settings',property:propertyModel,contentType:scope.contentType,contentTypeName:scope.model.name,contentTypeAllowCultureVariant:scope.model.allowCultureVariant,contentTypeAllowSegmentVariant:scope.model.allowSegmentVariant,view:'views/common/infiniteeditors/propertysettings/propertysettings.html',size:'small',submit:function submit(model){property.inherited=false;property.dialogIsOpen=false;property.propertyState='active';property.label=propertyModel.label;property.alias=propertyModel.alias;property.description=propertyModel.description;property.config=propertyModel.config;property.editor=propertyModel.editor;property.view=propertyModel.view;property.dataTypeId=propertyModel.dataTypeId;property.dataTypeIcon=propertyModel.dataTypeIcon;property.dataTypeName=propertyModel.dataTypeName;property.validation.mandatory=propertyModel.validation.mandatory;property.validation.mandatoryMessage=propertyModel.validation.mandatoryMessage;property.validation.pattern=propertyModel.validation.pattern;property.validation.patternMessage=propertyModel.validation.patternMessage;property.showOnMemberProfile=propertyModel.showOnMemberProfile;property.memberCanEdit=propertyModel.memberCanEdit;property.isSensitiveData=propertyModel.isSensitiveData;property.isSensitiveValue=propertyModel.isSensitiveValue;property.allowCultureVariant=propertyModel.allowCultureVariant;property.allowSegmentVariant=propertyModel.allowSegmentVariant;if(model.updateSameDataTypes){updateSameDataTypes(property);}
editorService.close();addInitProperty(group);var numberOfProperties=group.properties.length;group.properties[numberOfProperties-1].focus=true;notifyChanged();},close:function close(){if(_.isEqual(oldPropertyModel,propertyModel)===false){localizationService.localizeMany(['general_confirm','contentTypeEditor_propertyHasChanges','general_cancel','general_ok']).then(function(data){var overlay={title:data[0],content:data[1],closeButtonLabel:data[2],submitButtonLabel:data[3],submitButtonStyle:'danger',close:function close(){overlayService.close();},submit:function submit(){overlayService.close();editorService.close();}};overlayService.open(overlay);});}else{editorService.close();}}};editorService.open(propertySettings);property.dialogIsOpen=true;}};scope.deleteProperty=function(tab,propertyIndex){tab.properties.splice(propertyIndex,1);notifyChanged();};function notifyChanged(){eventsService.emit('editors.groupsBuilder.changed');}
function addInitProperty(group){var addInitPropertyBool=true;var initProperty={label:null,alias:null,propertyState:'init',validation:{mandatory:false,mandatoryMessage:null,pattern:null,patternMessage:null}};angular.forEach(group.properties,function(property){if(property.propertyState==='init'){addInitPropertyBool=false;}});if(addInitPropertyBool){group.properties.push(initProperty);}
return group;}
function updateSameDataTypes(newProperty){angular.forEach(scope.model.groups,function(group){angular.forEach(group.properties,function(property){if(property.dataTypeId===newProperty.dataTypeId){property.config=newProperty.config;property.editor=newProperty.editor;property.view=newProperty.view;property.dataTypeId=newProperty.dataTypeId;property.dataTypeIcon=newProperty.dataTypeIcon;property.dataTypeName=newProperty.dataTypeName;}});});}
function hasPropertyOfDataTypeId(dataTypeId){var result=_.filter(scope.model.groups,function(group){return _.filter(group.properties,function(property){return property.dataTypeId===dataTypeId;});});return result.length>0;}
eventBindings.push(scope.$watch('model',function(newValue,oldValue){if(newValue!==undefined&&newValue.groups!==undefined){activate();}}));eventBindings.push(eventsService.on('editors.dataTypeSettings.saved',function(name,args){if(hasPropertyOfDataTypeId(args.dataType.id)){scope.dataTypeHasChanged=true;}}));eventBindings.push(scope.$on('$destroy',function(){for(var e in eventBindings){eventBindings[e]();}
if(scope.dataTypeHasChanged===true){var args={documentType:scope.model};eventsService.emit('editors.documentType.saved',args);}}));}
var directive={restrict:'E',replace:true,template:'<div data-element="groups-builder" class="clearfix"> <umb-editor-sub-header> <umb-editor-sub-header-content-right> <umb-button style="margin-right: 5px;" alias="compositions" ng-if="compositions !== false" type="button" button-style="outline" label-key="contentTypeEditor_compositions" icon="icon-merge" action="openCompositionsDialog()" size="xs" add-ellipsis="true" state="compositionsButtonState"> </umb-button> <umb-button alias="reorder" ng-if="sorting !== false" type="button" button-style="outline" label-key="{{sortingButtonKey}}" icon="icon-navigation" action="toggleSortingMode();" size="xs"> </umb-button> </umb-editor-sub-header-content-right> </umb-editor-sub-header> <div ng-if="sortingMode && model.groups.length <= 1" class="umb-group-builder__no-data-text"> <localize key="contentTypeEditor_noGroups"></localize> </div> <a ng-if="!sortingMode" hotkey="alt+shift+p" ng-click="addPropertyToActiveGroup()"></a> <ul class="umb-group-builder__groups" ui-sortable="sortableOptionsGroup" ng-model="model.groups"> <li ng-repeat="tab in model.groups" ng-class="{\'umb-group-builder__group-sortable\': sortingMode}" data-element="group-{{tab.name}}">  <button href class="umb-group-builder__group -placeholder" hotkey="alt+shift+g" ng-click="addGroup(tab)" ng-if="tab.tabState==\'init\' && !sortingMode" data-element="group-add"> <localize key="contentTypeEditor_addGroup"></localize> </button>  <div class="umb-group-builder__group" ng-if="tab.tabState !== \'init\'" ng-class="{\'-active\':tab.tabState==\'active\', \'-inherited\': tab.inherited, \'umb-group-builder__group-handle -sortable\': sortingMode && !tab.inherited}" tabindex="0" ng-focus="activateGroup(tab)"> <div class="umb-group-builder__group-title-wrapper"> <ng-form name="groupNameForm" data-element="group-name"> <div class="umb-group-builder__group-title control-group -no-margin" ng-class="{\'-active\':tab.tabState==\'active\', \'-inherited\': tab.inherited}"> <i class="umb-group-builder__group-title-icon icon-navigation" ng-if="sortingMode && !tab.inherited"></i> <input data-element="group-name-field" class="umb-group-builder__group-title-input" type="text" localize="placeholder" placeholder="@placeholders_entername" name="groupName" ng-model="tab.name" ng-class="{\'-placeholder\': tab.name == \'\'}" ng-change="updateGroupTitle(tab)" ng-disabled="tab.inherited" umb-auto-focus umb-auto-resize ng-focus="activateGroup(tab)" required val-server-field="{{\'Groups[\' + $index + \'].Name\'}}"> <div ng-messages="groupNameForm.groupName.$error" show-validation-on-submit> <div class="umb-validation-label -arrow-left" ng-message="valServerField">{{groupNameForm.groupName.errorMsg}}</div> <div class="umb-validation-label -arrow-left" ng-message="required"><localize key="required"></localize></div> </div> </div> </ng-form> <div class="umb-group-builder__group-inherited-label" ng-if="tab.inherited"> <i class="icon icon-merge"></i> <localize key="contentTypeEditor_inheritedFrom"></localize>: {{ tab.inheritedFromName }} <span ng-repeat="contentTypeName in tab.parentTabContentTypeNames"> <button type="button" class="btn-link btn-small p0" ng-click="openDocumentType(tab.parentTabContentTypes[$index])">{{ contentTypeName }}</button> <span ng-if="!$last">, </span> </span> </div> <ng-form name="groupSortOrderForm" class="umb-group-builder__group-sort-order"> <div ng-if="sortingMode"> <input name="groupSortOrder" type="number" class="umb-property-editor-tiny" style="margin-bottom: 0;" ng-model="tab.sortOrder" ng-disabled="tab.inherited" ng-blur="changeSortOrderValue(tab)" required>  <div class="umb-validation-label -arrow-left" ng-if="groupSortOrderForm.groupSortOrder.$error.required && tab.showSortOrderMissing"><localize key="required"></localize></div> <div ng-messages="groupSortOrderForm.groupSortOrder.$error" show-validation-on-submit> <div class="umb-validation-label -arrow-left" ng-message="required"><localize key="required"></localize></div> </div> </div> </ng-form> <div class="umb-group-builder__group-remove" ng-if="!sortingMode && canRemoveGroup(tab)"> <i class="icon-trash" ng-click="togglePrompt(tab)"></i> <umb-confirm-action ng-if="tab.deletePrompt" direction="left" on-confirm="removeGroup($index)" on-cancel="hidePrompt(tab)"> </umb-confirm-action> </div> </div> <ul class="umb-group-builder__properties" ui-sortable="sortableOptionsProperty" ng-model="tab.properties"> <li data-element="property-{{property.alias}}" ng-class="{\'umb-group-builder__property-sortable\': sortingMode && !property.inherited}" ng-repeat="property in tab.properties">  <button href data-element="property-add" class="umb-group-builder__group-add-property" ng-if="property.propertyState==\'init\' && !sortingMode" ng-click="addProperty(property, tab)" ng-focus="activateGroup(tab)" focus-when="{{property.focus}}"> <localize key="contentTypeEditor_addProperty"></localize> </button> <div class="umb-group-builder__property" ng-if="property.propertyState!==\'init\'" ng-class="{\'-active\': property.dialogIsOpen, \'-active\': property.propertyState==\'active\', \'-inherited\': property.inherited, \'-locked\': property.locked, \'umb-group-builder__property-handle -sortable\': sortingMode && !property.inherited, \'-sortable-locked\': sortingMode && property.inherited}">  <div class="umb-group-builder__property-meta" ng-class="{\'-full-width\': sortingMode}"> <ng-form name="propertyTypeForm"> <div class="control-group -no-margin" ng-if="!sortingMode"> <div class="umb-group-builder__property-meta-alias umb-locked-field__text cursor-not-allowed" style="padding-left: 1px" ng-if="property.inherited || property.locked">{{ property.alias }}</div> <umb-locked-field ng-if="!property.inherited && !property.locked" locked="locked" ng-model="property.alias" placeholder-text="\'Alias...\'" server-validation-field="{{\'Groups[\' + $parent.$parent.$parent.$parent.$index + \'].Properties[\' + $index + \'].Alias\'}}"> </umb-locked-field> <div class="umb-group-builder__property-meta-label"> <textarea localize="placeholder" placeholder="@placeholders_label" ng-model="property.label" ng-disabled="property.inherited || property.locked" name="groupName" umb-auto-resize required val-server-field="{{\'Groups[\' + $parent.$parent.$parent.$parent.$index + \'].Properties[\' + $index + \'].Label\'}}">\r\n                                            </textarea> <div ng-messages="propertyTypeForm.groupName.$error" show-validation-on-submit> <div class="umb-validation-label" ng-message="valServerField">{{propertyTypeForm.groupName.errorMsg}}</div> <div class="umb-validation-label" ng-message="required"><localize key="contentTypeEditor_requiredLabel"></localize></div> </div> </div> <div class="umb-group-builder__property-meta-description"> <textarea localize="placeholder" placeholder="@placeholders_enterDescription" ng-model="property.description" ng-disabled="property.inherited || property.locked" umb-auto-resize>\r\n                                            </textarea> </div> </div> </ng-form> <div ng-if="sortingMode" class="flex items-center"> <i class="icon icon-navigation" ng-if="!property.inherited" style="margin-right: 10px;"></i> <span class="umb-group-builder__property-meta-label">{{ property.label }}</span> <span class="umb-group-builder__property-meta-alias" style="margin-bottom: 0; margin-left: 5px; margin-top: 1px;">({{ property.alias }})</span> <input name="propertySortOrder" type="number" class="umb-group-builder__group-sort-value umb-property-editor-tiny" ng-model="property.sortOrder" ng-disabled="property.inherited"> </div> </div> <div tabindex="-1" class="umb-group-builder__property-preview" ng-if="!sortingMode" ng-class="{\'-not-clickable\': !sortingMode && (property.inherited || property.locked)}"> <div class="umb-group-builder__property-tags"> <span class="umb-group-builder__property-tag -white"> <span ng-if="property.dataTypeName !== undefined">{{property.dataTypeName}}</span> <span ng-if="property.dataTypeName == undefined"><localize key="general_preview"></localize></span> </span> <div class="umb-group-builder__property-tag -white" ng-if="property.validation.mandatory"> <i class="umb-group-builder__property-tag-icon">*</i> <localize key="general_mandatory"></localize> </div> <div class="umb-group-builder__property-tag -white" ng-if="property.showOnMemberProfile"> <i class="icon-eye umb-group-builder__property-tag-icon"></i> <localize key="contentTypeEditor_showOnMemberProfile"></localize> </div> <div class="umb-group-builder__property-tag -white" ng-if="property.memberCanEdit"> <i class="icon-edit umb-group-builder__property-tag-icon"></i> <localize key="contentTypeEditor_memberCanEdit"></localize> </div> <div class="umb-group-builder__property-tag -white" ng-if="property.isSensitiveData"> <i class="icon-lock umb-group-builder__property-tag-icon"></i> <localize key="contentTypeEditor_isSensitiveData"></localize> </div> <div class="umb-group-builder__property-tag -white" ng-if="property.allowCultureVariant"> <i class="icon-shuffle umb-group-builder__property-tag-icon"></i> <localize key="contentTypeEditor_cultureVariantLabel"></localize> </div> <div class="umb-group-builder__property-tag -white" ng-if="property.allowSegmentVariant"> <i class="icon-shuffle umb-group-builder__property-tag-icon"></i> <localize key="contentTypeEditor_segmentVariantLabel"></localize> </div> </div> <div class="umb-group-builder__property-tags -right"> <div class="umb-group-builder__property-tag" ng-if="property.inherited"> <i class="icon icon-merge"></i> <span style="margin-right: 3px"><localize key="contentTypeEditor_inheritedFrom"></localize></span> {{property.contentTypeName}} </div> <div class="umb-group-builder__property-tag" ng-if="property.locked"> <i class="icon icon-lock"></i> <localize key="general_locked"></localize> </div> </div> <ng-form inert class="umb-group-builder__property-preview-form" name="propertyEditorPreviewForm" umb-disable-form-validation ng-click="editPropertyTypeSettings(property, tab)" tabindex="-1"> <umb-property-editor ng-if="property.view !== undefined" model="property" preview="true"> </umb-property-editor> </ng-form> <button aria-label="Open settings" class="umb-group-builder__open-settings" ng-if="!property.inherited && !property.locked" ng-click="editPropertyTypeSettings(property, tab)"></button> </div>  <div class="umb-group-builder__property-actions" ng-if="!sortingMode"> <div ng-if="!property.inherited">  <div class="umb-group-builder__property-action"> <button aria-label="Open settings" class="icon icon-settings" ng-click="editPropertyTypeSettings(property, tab)"></button> </div>  <div ng-if="!property.locked" class="umb-group-builder__property-action"> <button aria-label="Delete property" class="icon-trash" ng-click="togglePrompt(property)"></button> <umb-confirm-action ng-if="property.deletePrompt" direction="left" on-confirm="deleteProperty(tab, $index)" on-cancel="hidePrompt(property)"> </umb-confirm-action> </div> </div> </div> </div> </li> </ul> </div> <br> </li> </ul> </div> ',scope:{model:'=',compositions:'=',sorting:'=',contentType:'@'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbGroupsBuilder',GroupsBuilderDirective);}());'use strict';(function(){'use strict';function ImageLazyLoadDirective(){var placeholder='assets/img/transparent.png';function link(scope,element,attrs){var observer=new IntersectionObserver(loadImg);var img=element[0];img.src=placeholder;observer.observe(img);function loadImg(changes){changes.forEach(function(change){if(change.intersectionRatio>0&&change.target.src.indexOf(placeholder)>0){change.target.src=attrs.umbImageLazyLoad;}});}
scope.$on('$destroy',function(){observer.disconnect();});}
var directive={restrict:'A',link:link};return directive;}
angular.module('umbraco.directives').directive('umbImageLazyLoad',ImageLazyLoadDirective);}());'use strict';(function(){'use strict';function KeyboardShortcutsOverviewDirective(platformService,overlayService){function link(scope,el,attr,ctrl){var eventBindings=[];var isMac=platformService.isMac();var overlay=null;scope.toggleShortcutsOverlay=function(){if(overlay){scope.close();}else{scope.open();}
if(scope.onToggle){scope.onToggle();}};scope.open=function(){if(!overlay){overlay={title:'Keyboard shortcuts',view:'keyboardshortcuts',hideSubmitButton:true,shortcuts:scope.model,close:function close(){scope.close();}};overlayService.open(overlay);}};scope.close=function(){if(overlay){overlayService.close();overlay=null;if(scope.onClose){scope.onClose();}}};function onInit(){Utilities.forEach(scope.model,function(shortcutGroup){Utilities.forEach(shortcutGroup.shortcuts,function(shortcut){shortcut.platformKeys=[];if(isMac&&shortcut.keys&&shortcut.keys.mac){shortcut.platformKeys=shortcut.keys.mac;}else if(!isMac&&shortcut.keys&&shortcut.keys.win){shortcut.platformKeys=shortcut.keys.win;}else if(shortcut.keys&&shortcut&&shortcut.keys.length>0){shortcut.platformKeys=shortcut.keys;}});});}
onInit();eventBindings.push(scope.$watch('model',function(newValue,oldValue){if(newValue!==oldValue){onInit();}}));eventBindings.push(scope.$watch('showOverlay',function(newValue,oldValue){if(newValue===oldValue){return;}
if(newValue===true){scope.open();}
if(newValue===false){scope.close();}}));scope.$on('$destroy',function(){for(var e in eventBindings){eventBindings[e]();}});}
var directive={restrict:'E',replace:true,template:'<div class="umb-keyboard-shortcuts-overview flex items-center" data-hotkey="alt+shift+k" ng-click="toggleShortcutsOverlay()"> <div class="umb-keyboard-shortcuts-overview__description"><localize key="shortcuts_showShortcuts">show shortcuts</localize></div> <div class="umb-keyboard-keys"> <div class="umb-keyboard-key-wrapper"> <div class="umb-keyboard-key">alt</div> <div>+</div> </div> <div class="umb-keyboard-key-wrapper"> <div class="umb-keyboard-key">shift</div> <div>+</div> </div> <div class="umb-keyboard-key-wrapper"> <div class="umb-keyboard-key">k</div> </div> </div> </div> ',link:link,scope:{model:'=',onToggle:'&',showOverlay:'=?',onClose:'&'}};return directive;}
angular.module('umbraco.directives').directive('umbKeyboardShortcutsOverview',KeyboardShortcutsOverviewDirective);}());'use strict';(function(){'use strict';angular.module('umbraco.directives').component('umbLayoutSelector',{template:'<div class="umb-layout-selector" ng-show="vm.showLayoutSelector"> <button type="button" aria-expanded="{{vm.layoutDropDownIsOpen}}" class="umb-layout-selector__active-layout umb-outline" ng-click="vm.toggleLayoutDropdown()" prevent-default> <i class="{{ vm.activeLayout.icon }}" aria-hidden="true"></i> <span class="sr-only"> <localize key="visuallyHiddenTexts_activeListLayout">Active layout:</localize>&nbsp; {{vm.activeLayout.name}} </span> </button> <div ng-if="vm.layoutDropDownIsOpen" class="umb-layout-selector__dropdown shadow-depth-3 animated -half-second fadeIn" on-outside-click="vm.closeLayoutDropdown()" deep-blur="vm.leaveLayoutDropdown()"> <button type="button" prevent-default ng-repeat="layout in vm.layouts | filter:{selected:true} track by $id(layout)" class="umb-layout-selector__dropdown-item" ng-click="vm.pickLayout(layout)" ng-class="{\'-active\': layout.active }" ng-attr-title="{{layout.name}}"> <i class="{{ layout.icon }} umb-layout-selector__dropdown-item-icon" aria-hidden="true"></i> <span class="sr-only">{{layout.name}}</span> </button> </div> </div> ',controller:LayoutSelectorController,controllerAs:'vm',bindings:{layouts:'<',activeLayout:'<',onLayoutSelect:'&'}});function LayoutSelectorController($scope,$element){var vm=this;vm.$onInit=onInit;vm.layoutDropDownIsOpen=false;vm.showLayoutSelector=true;vm.pickLayout=pickLayout;vm.toggleLayoutDropdown=toggleLayoutDropdown;vm.leaveLayoutDropdown=leaveLayoutDropdown;vm.closeLayoutDropdown=closeLayoutDropdown;function onInit(){activate();}
function closeLayoutDropdown(){vm.layoutDropDownIsOpen=false;}
function toggleLayoutDropdown(){vm.layoutDropDownIsOpen=!vm.layoutDropDownIsOpen;}
function leaveLayoutDropdown(){vm.layoutDropDownIsOpen=false;}
function pickLayout(selectedLayout){if(vm.onLayoutSelect){vm.onLayoutSelect({layout:selectedLayout});vm.layoutDropDownIsOpen=false;}}
function activate(){setVisibility();setActiveLayout(vm.layouts);}
function setVisibility(){var numberOfAllowedLayouts=getNumberOfAllowedLayouts(vm.layouts);if(numberOfAllowedLayouts===1){vm.showLayoutSelector=false;}}
function getNumberOfAllowedLayouts(layouts){var allowedLayouts=0;for(var i=0;layouts.length>i;i++){var layout=layouts[i];if(layout.selected===true){allowedLayouts++;}}
return allowedLayouts;}
function setActiveLayout(layouts){for(var i=0;layouts.length>i;i++){var layout=layouts[i];if(layout.path===vm.activeLayout.path){layout.active=true;}}}}}());'use strict';(function(){'use strict';function LightboxDirective(){function link(scope,el,attr,ctrl){function activate(){var eventBindings=[];el.appendTo('body');scope.$on('$destroy',function(){for(var e in eventBindings){eventBindings[e]();}});}
scope.next=function(){var nextItemIndex=scope.activeItemIndex+1;if(nextItemIndex<scope.items.length){scope.items[scope.activeItemIndex].active=false;scope.items[nextItemIndex].active=true;scope.activeItemIndex=nextItemIndex;}};scope.prev=function(){var prevItemIndex=scope.activeItemIndex-1;if(prevItemIndex>=0){scope.items[scope.activeItemIndex].active=false;scope.items[prevItemIndex].active=true;scope.activeItemIndex=prevItemIndex;}};scope.close=function(){if(scope.onClose){scope.onClose();}};activate();}
var directive={restrict:'E',replace:true,template:'<div class="umb-lightbox"> <div class="umb-lightbox__backdrop" ng-click="close()" hotkey="esc"></div> <button type="button" class="btn-reset umb-lightbox__close" localize="title" title="@general_close" ng-click="close()"> <i class="icon-delete umb-lightbox__control" aria-hidden="true"></i> <span class="sr-only"> <localize key="general_close">Close</localize> </span> </button> <div class="umb-lightbox__images"> <div class="umb-lightbox__image shadow-depth-2" ng-repeat="item in items" ng-show="$index === activeItemIndex"> <img ng-src="{{ item.source }}"> </div> </div> <button type="button" class="btn-reset umb-lightbox__control -prev" localize="title" title="@general_previous" ng-if="activeItemIndex > 0" ng-click="prev()" hotkey="left"> <i class="icon-previous umb-lightbox__control-icon" aria-hidden="true"></i> <span class="sr-only"> <localize key="general_previous">Previous</localize> </span> </button> <button type="button" class="btn-reset umb-lightbox__control -next" localize="title" title="general_next" ng-if="activeItemIndex + 1 < items.length" ng-click="next()" hotkey="right"> <i class="icon-next umb-lightbox__control-icon" aria-hidden="true"></i> <span class="sr-only"> <localize key="general_next">Next</localize> </span> </button> </div> ',scope:{items:'=',onClose:'=',activeItemIndex:'='},link:link};return directive;}
angular.module('umbraco.directives').directive('umbLightbox',LightboxDirective);}());'use strict';(function(){'use strict';function ListViewLayoutDirective(){function link(scope,el,attr,ctrl){scope.getContent=function(contentId){if(scope.onGetContent){scope.onGetContent({contentId:contentId});}};}
var directive={restrict:'E',replace:true,template:'<div> <div ng-include="options.layout.activeLayout.path"></div> </div> ',scope:{contentId:'<',folders:'<',items:'<',selection:'<',options:'<',entityType:'@',onGetContent:'&'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbListViewLayout',ListViewLayoutDirective);}());'use strict';(function(){'use strict';function ListViewSettingsDirective(dataTypeResource,dataTypeHelper,editorService,listViewPrevalueHelper){function link(scope){scope.dataType={};scope.customListViewCreated=false;var checkForCustomListView=function checkForCustomListView(){return scope.dataType.name==='List View - '+scope.modelAlias;};var setDataType=function setDataType(dataType){scope.dataType=dataType;listViewPrevalueHelper.setPrevalues(dataType.preValues);};var activate=function activate(){if(scope.enableListView){dataTypeResource.getByName(scope.listViewName).then(function(dataType){setDataType(dataType);scope.customListViewCreated=checkForCustomListView();});}else{scope.dataType={};}};var showSettingsOverlay=function showSettingsOverlay(){var overlay={view:'views/components/umb-list-view-settings-overlay.html',hideDescription:true,hideIcon:true,size:'medium',dataType:scope.dataType,title:'List view settings',submit:function submit(model){var preValues=dataTypeHelper.createPreValueProps(model.dataType.preValues);dataTypeResource.save(model.dataType,preValues,false).then(function(dataType){return scope.dataType=dataType;});editorService.close();},close:function close(){return editorService.close();}};editorService.open(overlay);};scope.createCustomListViewDataType=function(){scope.loading=true;dataTypeResource.createCustomListView(scope.modelAlias).then(function(dataType){setDataType(dataType);scope.listViewName=dataType.name;scope.customListViewCreated=true;showSettingsOverlay();scope.loading=false;});};scope.removeCustomListDataType=function(){scope.loading=true;dataTypeResource.deleteById(scope.dataType.id).then(function(dataType){scope.listViewName='List View - '.concat(scope.contentType==='documentType'?'Content':'Media');dataTypeResource.getByName(scope.listViewName).then(function(defaultDataType){setDataType(defaultDataType);scope.customListViewCreated=false;scope.loading=false;});});};scope.toggle=function(){return scope.enableListView=!scope.enableListView;};scope.showSettingsOverlay=function(){return showSettingsOverlay();};var unbindEnableListViewWatcher=scope.$watch('enableListView',function(newValue){if(newValue!==undefined){activate();}});scope.$on('$destroy',function(){return unbindEnableListViewWatcher();});}
var directive={restrict:'E',replace:true,template:'<div class="umb-list-view-settings"> <div class="umb-list-view-settings__trigger"> <umb-toggle checked="enableListView" on-click="toggle()" hotkey="alt+shift+l"> </umb-toggle> </div>  <div ng-if="enableListView" class="flex"> <div class="umb-list-view-settings__box"> <div class="flex"> <i class="umb-list-view-settings__list-view-icon icon-list"></i> <div> <div class="umb-list-view-settings__name"> {{ dataType.name }} <em ng-if="!customListViewCreated">(<localize key="general_default">default</localize>)</em> </div> <button type="button" class="btn-link umb-list-view-settings__create-new" ng-if="!customListViewCreated" ng-click="createCustomListViewDataType()"> <localize key="editcontenttype_createListView">Create custom list view</localize> </button> <button type="button" class="btn-link umb-list-view-settings__remove-new" ng-if="customListViewCreated" ng-click="removeCustomListDataType()"> <localize key="editcontenttype_removeListView">Remove custom list view</localize> </button> </div> </div> <umb-load-indicator ng-show="loading"></umb-load-indicator> </div> <div class="umb-group-builder__property-actions"> <div class="umb-group-builder__property-action"> <button class="btn-icon icon-settings" ng-click="showSettingsOverlay()" aria-label="Edit"></button> </div> </div> </div> </div> ',scope:{enableListView:'=',listViewName:'=',modelAlias:'=',contentType:'@'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbListViewSettings',ListViewSettingsDirective);}());'use strict';(function(){'use strict';function UmbLoaderDirective(){function link(scope,el,attr,ctrl){}
var directive={restrict:'E',replace:true,template:'<div class="umb-loader-wrapper" ng-class="{ \'-top\': position === \'top\', \'-bottom\': position === \'bottom\' }"> <div class="umb-loader"></div> </div> ',scope:{position:'@?'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbLoader',UmbLoaderDirective);}());'use strict';(function(){'use strict';function UmbLoadIndicatorDirective(){var directive={restrict:'E',replace:true,template:'<ul class="umb-load-indicator animated -half-second"> <li class="umb-load-indicator__bubble"></li> <li class="umb-load-indicator__bubble"></li> <li class="umb-load-indicator__bubble"></li> </ul> '};return directive;}
angular.module('umbraco.directives').directive('umbLoadIndicator',UmbLoadIndicatorDirective);}());'use strict';(function(){'use strict';function LockedFieldDirective($timeout,localizationService){function link(scope,el,attr,ngModelCtrl){function activate(){if(scope.locked===undefined||scope.locked===null){scope.locked=true;}
if(scope.regexValidation===undefined||scope.regexValidation===null){scope.regexValidation='^[a-zA-Z]\\w.*$';}
if(scope.serverValidationField===undefined||scope.serverValidationField===null){scope.serverValidationField='';}
if(scope.placeholderText===undefined||scope.placeholderText===null){scope.placeholderText='Enter value...';}
if(scope.validationPosition===undefined||scope.validationPosition===null){scope.validationPosition='left';}}
scope.lock=function(){scope.locked=true;};scope.unlock=function(){scope.locked=false;};activate();}
var directive={require:'ngModel',restrict:'E',replace:true,template:'<ng-form name="lockedFieldForm" class="umb-locked-field"> <div class="umb-locked-field__wrapper"> <button aria-label="Unlock" ng-if="locked" ng-click="unlock()" class="umb-locked-field__toggle"> <i class="umb-locked-field__lock-icon icon-lock" aria-hidden="true"></i> </button> <button aria-label="Lock" ng-if="!locked" ng-click="lock()" class="umb-locked-field__toggle"> <i class="umb-locked-field__lock-icon icon-unlocked -unlocked" aria-hidden="true"></i> </button> <input type="text" no-password-manager class="umb-locked-field__input" name="lockedField" ng-model="ngModel" ng-disabled="locked" ng-class="{\'-unlocked\': !locked}" placeholder="{{placeholderText}}" val-regex="{{regexValidation}}" umb-auto-resize required val-server-field="{{serverValidationField}}" title="{{ngModel}}" focus-when="{{!locked}}" umb-select-when="{{!locked}}" ng-blur="lock()"> </div> <div ng-messages="lockedFieldForm.lockedField.$error" show-validation-on-submit> <div class="umb-validation-label" ng-class="{ \'-left\': validationPosition === \'left\', \'-right\': validationPosition === \'right\' }" ng-message="required"> <localize key="general_required">Required</localize> <localize key="content_alias">alias</localize> </div> <div class="umb-validation-label" ng-class="{ \'-left\': validationPosition === \'left\', \'-right\': validationPosition === \'right\' }" ng-if="regexValidation.length > 0" ng-message="valRegex"> <localize key="general_invalid">Invalid</localize> <localize key="content_alias">alias</localize> </div> <div class="umb-validation-label" ng-class="{ \'-left\': validationPosition === \'left\', \'-right\': validationPosition === \'right\' }" ng-if="serverValidationField.length > 0" ng-message="valServerField">{{lockedFieldForm.lockedField.errorMsg}} </div> </div> </ng-form> ',scope:{ngModel:'=',locked:'=?',placeholderText:'=?',regexValidation:'=?',validationPosition:'=?',serverValidationField:'@'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbLockedField',LockedFieldDirective);}());'use strict';(function(){'use strict';function MediaGridDirective($filter,mediaHelper){function link(scope,el,attr,ctrl){var itemDefaultHeight=200;var itemDefaultWidth=200;var itemMaxWidth=200;var itemMaxHeight=200;var itemMinWidth=125;var itemMinHeight=125;function activate(){if(scope.itemMaxWidth){itemMaxWidth=scope.itemMaxWidth;}
if(scope.itemMaxHeight){itemMaxHeight=scope.itemMaxHeight;}
if(scope.itemMinWidth){itemMinWidth=scope.itemMinWidth;}
if(scope.itemMinHeight){itemMinHeight=scope.itemMinHeight;}
for(var i=0;scope.items.length>i;i++){var item=scope.items[i];setItemData(item);setOriginalSize(item,itemMaxHeight);item.selectable=getSelectableState(item);if(scope.onlyImages==='true'&&!item.isFolder&&!item.thumbnail){scope.items.splice(i,1);i--;}
if(scope.includeSubFolders!==undefined){if(scope.includeSubFolders!=='true'){if(item.parentId!==parseInt(scope.currentFolderId)){scope.items.splice(i,1);i--;}}}}
if(scope.items.length>0){setFlexValues(scope.items);}}
function setItemData(item){if(item.image){item.isFolder=false;}else{item.isFolder=!mediaHelper.hasFilePropertyType(item);}
if(!item.isFolder&&!item.thumbnail){if(item.image){item.thumbnail=mediaHelper.resolveFileFromEntity(item,true);item.extension=mediaHelper.getFileExtension(item.image);}else{item.thumbnail=mediaHelper.resolveFile(item,true);item.image=mediaHelper.resolveFile(item,false);var fileProp=_.find(item.properties,function(v){return v.alias==='umbracoFile';});if(fileProp&&fileProp.value){item.file=fileProp.value;}
var extensionProp=_.find(item.properties,function(v){return v.alias==='umbracoExtension';});if(extensionProp&&extensionProp.value){item.extension=extensionProp.value;}}}}
function getSelectableState(item){if(item.filtered){return false;}
if(item.isFolder===true){return scope.disableFolderSelect!=='true'&&scope.onlyImages!=='true';}else{return scope.onlyFolders!=='true';}
return false;}
function setOriginalSize(item,maxHeight){item.width=itemDefaultWidth;item.height=itemDefaultHeight;item.aspectRatio=1;var widthProp=_.find(item.properties,function(v){return v.alias==='umbracoWidth';});if(widthProp&&widthProp.value){item.width=parseInt(widthProp.value,10);if(isNaN(item.width)){item.width=itemDefaultWidth;}}
var heightProp=_.find(item.properties,function(v){return v.alias==='umbracoHeight';});if(heightProp&&heightProp.value){item.height=parseInt(heightProp.value,10);if(isNaN(item.height)){item.height=itemDefaultWidth;}}
item.aspectRatio=item.width/item.height;if(item.aspectRatio>=1){if(item.width>itemMaxWidth){item.width=itemMaxWidth;item.height=itemMaxWidth/item.aspectRatio;}}else{if(item.height>itemMaxHeight){item.height=itemMaxHeight;item.width=itemMaxHeight*item.aspectRatio;}}}
function setFlexValues(mediaItems){var flexSortArray=mediaItems;var smallestImageWidth=null;var widestImageAspectRatio=null;flexSortArray=$filter('orderBy')(flexSortArray,'width',true);widestImageAspectRatio=flexSortArray[0].aspectRatio;smallestImageWidth=flexSortArray[flexSortArray.length-1].width;for(var i=0;flexSortArray.length>i;i++){var mediaItem=flexSortArray[i];var flex=1/(widestImageAspectRatio/mediaItem.aspectRatio);if(flex===0){flex=1;}
var imageMinFlexWidth=smallestImageWidth*flex;var flexStyle={'flex':flex+' 1 '+imageMinFlexWidth+'px','max-width':mediaItem.width+'px','min-width':itemMinWidth+'px','min-height':itemMinHeight+'px'};mediaItem.flexStyle=flexStyle;}}
scope.clickItem=function(item,$event,$index){if(scope.onClick){scope.onClick(item,$event,$index);$event.stopPropagation();}};scope.clickItemName=function(item,$event,$index){if(scope.onClickName){scope.onClickName(item,$event,$index);$event.stopPropagation();}};scope.hoverItemDetails=function(item,$event,hover){if(scope.onDetailsHover){scope.onDetailsHover(item,$event,hover);}};var unbindItemsWatcher=scope.$watch('items',function(newValue,oldValue){if(Utilities.isArray(newValue)){activate();}});scope.$on('$destroy',function(){unbindItemsWatcher();});}
var directive={restrict:'E',replace:true,template:'<div data-element="media-grid" class="umb-media-grid"> <div data-element="media-grid-item-{{$index}}" class="umb-media-grid__item umb-outline umb-outline--surrounding" title="{{item.name}}" ng-click="clickItem(item, $event, $index)" ng-repeat="item in items | filter:filterBy" ng-style="item.flexStyle" ng-class="{\'-selected\': item.selected, \'-file\': !item.thumbnail, \'-folder\': item.isFolder, \'-svg\': item.extension == \'svg\', \'-selectable\': item.selectable, \'-unselectable\': !item.selectable}"> <div>  <div data-element="media-grid-item-edit" class="umb-media-grid__item-overlay umb-outline" ng-class="{\'-locked\': item.selected || !item.file || !item.thumbnail, \'-can-open\': (item.isFolder ? allowOpenFolder : allowOpenFile)}" ng-click="clickItemName(item, $event, $index)" tabindex="{{item.isFolder && item.selectable ? \'0\' : \'-1\'}}"> <i ng-if="onDetailsHover" class="icon-info umb-media-grid__info" ng-mouseover="hoverItemDetails(item, $event, true)" ng-mouseleave="hoverItemDetails(item, $event, false)"></i> <div class="umb-media-grid__item-name">{{item.name}}</div> </div>  <div class="umb-media-grid__image-background" ng-if="item.thumbnail || item.extension === \'svg\'"></div>  <img umb-image-lazy-load="{{item.thumbnail}}" class="umb-media-grid__item-image" width="{{item.width}}" height="{{item.height}}" ng-if="item.thumbnail" alt="{{item.name}}" draggable="false">  <img class="umb-media-grid__item-image" width="{{item.width}}" height="{{item.height}}" ng-if="!item.thumbnail && item.extension === \'svg\'" ng-src="{{item.image}}" alt="{{item.name}}" draggable="false">  <img class="umb-media-grid__item-image-placeholder" ng-if="!item.thumbnail && item.extension !== \'svg\'" src="assets/img/transparent.png" alt="{{item.name}}" draggable="false">  <umb-file-icon ng-if="!item.thumbnail && item.extension !== \'svg\'" class="umb-media-grid__item-file-icon" extension="{{item.extension}}" icon="{{item.icon}}" size="s"> </umb-file-icon> </div> </div> </div> ',scope:{items:'=',onDetailsHover:'=',onClick:'=',onClickName:'=',allowOpenFolder:'=',allowOpenFile:'=',filterBy:'=',itemMaxWidth:'@',itemMaxHeight:'@',itemMinWidth:'@',itemMinHeight:'@',disableFolderSelect:'@',onlyImages:'@',onlyFolders:'@',includeSubFolders:'@',currentFolderId:'@'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbMediaGrid',MediaGridDirective);}());'use strict';(function(){'use strict';function MiniListViewDirective(entityResource,iconHelper){function link(scope,el,attr,ctrl){scope.search='';scope.miniListViews=[];scope.breadcrumb=[];scope.listViewAnimation='';var miniListViewsHistory=[];function onInit(){open(scope.node);}
function open(node){if(node&&node.icon){node.icon=iconHelper.convertFromLegacyIcon(node.icon);}
var miniListView={node:node,loading:true,pagination:{pageSize:10,pageNumber:1,filter:'',orderDirection:'Ascending',orderBy:'SortOrder',orderBySystemField:true}};scope.miniListViews=[];scope.listViewAnimation='in';scope.miniListViews.push(miniListView);miniListViewsHistory.push(miniListView);getChildrenForMiniListView(miniListView);makeBreadcrumb();}
function getChildrenForMiniListView(miniListView){miniListView.loading=true;entityResource.getPagedChildren(miniListView.node.id,scope.entityType,miniListView.pagination).then(function(data){if(scope.onItemsLoaded){scope.onItemsLoaded({items:data.items});}
miniListView.children=data.items;_.each(miniListView.children,function(c){c.allowed=true;if(c.icon){c.icon=iconHelper.convertFromLegacyIcon(c.icon);}
if(c.metaData){c.hasChildren=c.metaData.hasChildren;if(scope.entityType==='Document'){c.published=c.metaData.IsPublished;}}
if(scope.entityTypeFilter&&scope.entityTypeFilter.filter&&!scope.entityTypeFilter.filterAdvanced){var a=scope.entityTypeFilter.filter.toLowerCase().replace(/\s/g,'').split(',');var found=a.indexOf(c.metaData.ContentTypeAlias.toLowerCase())>=0;if(!scope.entityTypeFilter.filterExclude&&!found||scope.entityTypeFilter.filterExclude&&found){c.allowed=false;}}});if(scope.entityTypeFilter&&scope.entityTypeFilter.filter&&scope.entityTypeFilter.filterAdvanced){var filtered=angular.isFunction(scope.entityTypeFilter.filter)?_.filter(miniListView.children,scope.entityTypeFilter.filter):_.where(miniListView.children,scope.entityTypeFilter.filter);_.each(filtered,function(node){return node.allowed=false;});}
miniListView.pagination.totalItems=data.totalItems;miniListView.pagination.totalPages=data.totalPages;miniListView.loading=false;});}
scope.openNode=function(event,node){open(node);event.stopPropagation();};scope.selectNode=function(node){if(scope.onSelect&&node.allowed){scope.onSelect({'node':node});}};scope.goToPage=function(pageNumber,miniListView){miniListView.pagination.pageNumber=pageNumber;getChildrenForMiniListView(miniListView);};scope.clickBreadcrumb=function(ancestor){var found=false;scope.listViewAnimation='out';angular.forEach(miniListViewsHistory,function(historyItem,index){if(historyItem.node.id.toString()===ancestor.id.toString()){scope.miniListViews=[];scope.miniListViews.push(historyItem);miniListViewsHistory.splice(index+1,miniListViewsHistory.length);found=true;}});if(!found){scope.exitMiniListView();}
makeBreadcrumb();};scope.showBackButton=function(){if(scope.node.metaData&&scope.node.metaData.IsContainer||scope.node.isContainer){return false;}else{return true;}};scope.exitMiniListView=function(){miniListViewsHistory=[];scope.miniListViews=[];if(scope.onClose){scope.onClose();}};function makeBreadcrumb(){scope.breadcrumb=[];angular.forEach(miniListViewsHistory,function(historyItem){scope.breadcrumb.push(historyItem.node);});}
scope.searchMiniListView=function(search,miniListView){miniListView.pagination.filter=search;miniListView.pagination.pageNumber=1;miniListView.loading=true;searchMiniListView(miniListView);};var searchMiniListView=_.debounce(function(miniListView){scope.$apply(function(){getChildrenForMiniListView(miniListView);});},500);onInit();}
var directive={restrict:'E',replace:true,template:'<div class="umb-minilistview"> <div class="umb-mini-list-view umb-animated" ng-class="{\'umb-mini-list-view--forward\': listViewAnimation === \'in\', \'umb-mini-list-view--backwards\': listViewAnimation === \'out\'}" ng-repeat="miniListView in miniListViews"> <div class="umb-mini-list-view__title"> <i class="umb-mini-list-view__title-icon {{ miniListView.node.icon }}" aria-hidden="true"></i> <h4 class="umb-mini-list-view__title-text">{{ miniListView.node.name }}</h4> </div> <div class="umb-mini-list-view__breadcrumb"> <a ng-if="showBackButton()" class="umb-mini-list-view__back" ng-click="exitMiniListView()"> <i class="icon-arrow-left umb-mini-list-view__back-icon" aria-hidden="true"></i> <span class="umb-mini-list-view__back-text"><localize key="general_back">Back</localize></span> / </a> <umb-breadcrumbs ng-if="breadcrumb && breadcrumb.length > 0" ancestors="breadcrumb" entity-type="content" on-open="clickBreadcrumb(ancestor)"> </umb-breadcrumbs> </div> <div class="umb-table umb-table--condensed">  <div class="umb-table-head"> <div class="umb-table-row"> <div class="umb-table-cell no-display"></div> <div class="umb-table-cell umb-table-cell-padding"> <form class="form-search -no-margin-bottom" novalidate> <div class="inner-addon left-addon"> <i class="icon icon-search" aria-hidden="true"></i> <input class="form-control search-input" type="text" localize="placeholder" placeholder="@general_typeToSearch" ng-model="search" ng-change="searchMiniListView(search, miniListView)" prevent-enter-submit umb-auto-focus no-dirty-check> </div> </form> </div> </div> </div>  <div class="umb-table-body">  <div class="umb-table__loading-overlay" ng-if="miniListView.loading && miniListView.children.length > 0"> <umb-load-indicator></umb-load-indicator> </div>  <div class="umb-table-row cursor-pointer umb-outline" ng-repeat="child in miniListView.children" ng-click="selectNode(child)" ng-class="{\'-selected\':child.selected, \'not-allowed\':!child.allowed}"> <div class="umb-table-cell umb-table-cell--auto-width" ng-class="{\'umb-table-cell--faded\':child.published === false}"> <div class="flex items-center"> <ins class="icon-navigation-right umb-table__row-expand" ng-click="openNode($event, child)" ng-class="{\'umb-table__row-expand--hidden\': child.metaData.hasChildren !== true}">&nbsp;</ins> <i class="umb-table-body__icon umb-table-body__fileicon {{child.icon}}" aria-hidden="true"></i> <i class="umb-table-body__icon umb-table-body__checkicon icon-check" aria-hidden="true"></i> </div> </div> <div class="umb-table-cell black" ng-class="{\'umb-table-cell--faded\':child.published === false}">{{ child.name }}</div> </div>  <div ng-if="!miniListView.loading && !miniListView.children" class="umb-table-row umb-table-row--empty"> <span ng-if="search === \'\'"><localize key="general_noItemsInList">No items have been added</localize></span> <span ng-if="search !== \'\'"><localize key="general_searchNoResult">Sorry, we can not find what you are looking for.</localize></span> </div>  <div ng-if="miniListView.loading && !miniListView.children" class="umb-table-row umb-table-row--empty"> <umb-load-indicator></umb-load-indicator> </div> </div> </div> <div class="flex justify-center"> <umb-pagination ng-if="miniListView.pagination.totalPages > 0 && !miniListView.loading" page-number="miniListView.pagination.pageNumber" total-pages="miniListView.pagination.totalPages" on-change="goToPage(pageNumber, miniListView)"> </umb-pagination> </div> </div> </div> ',scope:{node:'=',entityType:'@',startNodeId:'=',onSelect:'&',onClose:'&',onItemsLoaded:'&',entityTypeFilter:'='},link:link};return directive;}
angular.module('umbraco.directives').directive('umbMiniListView',MiniListViewDirective);}());'use strict';angular.module('umbraco.directives').directive('umbNestedContentEditor',[function(){var link=function link($scope){$scope.model=Utilities.copy($scope.ngModel);$scope.nodeContext=$scope.model;var selectedTab=$scope.model.variants[0].tabs[0];if($scope.tabAlias){angular.forEach($scope.model.variants[0].tabs,function(tab){if(tab.alias.toLowerCase()===$scope.tabAlias.toLowerCase()){selectedTab=tab;return;}});}
$scope.tab=selectedTab;var unsubscribe=$scope.$on('ncSyncVal',function(ev,args){if(args.key===$scope.model.key){$scope.$broadcast('formSubmitting',{scope:$scope});angular.forEach($scope.ngModel.variants[0].tabs,function(tab){if(tab.alias.toLowerCase()===selectedTab.alias.toLowerCase()){var localPropsMap=selectedTab.properties.reduce(function(map,obj){map[obj.alias]=obj;return map;},{});angular.forEach(tab.properties,function(prop){if(localPropsMap.hasOwnProperty(prop.alias)){prop.value=localPropsMap[prop.alias].value;}});}});}});$scope.$on('$destroy',function(){unsubscribe();});};return{restrict:'E',replace:true,templateUrl:Umbraco.Sys.ServerVariables.umbracoSettings.umbracoPath+'/views/propertyeditors/nestedcontent/nestedcontent.editor.html',scope:{ngModel:'=',tabAlias:'='},link:link};}]);'use strict';(function(){'use strict';function NodePreviewDirective(userService){function link(scope,el,attr,ctrl){if(!scope.editLabelKey){scope.editLabelKey='general_edit';}
scope.nodeNameTitle=null;if(Umbraco.Sys.ServerVariables.isDebuggingEnabled){userService.getCurrentUser().then(function(u){if(u.allowedSections.indexOf('settings')!==-1?true:false){scope.nodeNameTitle=scope.alias;}});}}
var directive={restrict:'E',replace:true,template:'<div class="umb-node-preview" ng-class="{\'umb-node-preview--sortable\': sortable, \'umb-node-preview--unpublished\': published === false }"> <div class="flex">  <i ng-if="icon" class="umb-node-preview__icon {{ icon }}" aria-hidden="true"></i> <div class="umb-node-preview__content"> <div class="umb-node-preview__name" ng-attr-title="{{nodeNameTitle}}">{{ name }}</div> <div class="umb-node-preview__description" ng-if="description">{{ description }}</div> <div class="umb-user-group-preview__permissions" ng-if="permissions"> <span> <span class="bold"><localize key="general_rights">Permissions</localize>:</span> <span ng-repeat="permission in permissions" class="umb-user-group-preview__permission">{{ permission.name }}</span> </span> </div> </div> </div> <div class="umb-node-preview__actions">  <a class="umb-node-preview__action" title="Edit {{name}}" ng-href="{{editUrl}}" ng-if="allowEdit && editUrl" ng-click="onEdit()"> <localize key="general_edit">Edit</localize> <span class="sr-only">{{name}}</span> </a> <button type="button" class="umb-node-preview__action" title="Edit {{name}}" ng-if="allowEdit && !editUrl" ng-click="onEdit()"> <localize key="general_edit">Edit</localize> <span class="sr-only">{{name}}...</span> </button>  <a class="umb-node-preview__action" title="Open {{name}}" ng-href="{{openUrl}}" ng-if="allowOpen && openUrl" ng-click="onOpen()"> <localize key="general_open">Open</localize> <span class="sr-only">{{name}}</span> </a> <button type="button" class="umb-node-preview__action" title="Open {{name}}" ng-if="allowOpen && !openUrl" ng-click="onOpen()"> <localize key="general_open">Open</localize> <span class="sr-only">{{name}}...</span> </button>  <a class="umb-node-preview__action umb-node-preview__action--red" title="Remove {{name}}" ng-href="{{removeUrl}}" ng-if="allowRemove && removeUrl" ng-click="onRemove()"> <localize key="general_remove">Remove</localize> <span class="sr-only">{{name}}</span> </a> <button type="button" class="umb-node-preview__action umb-node-preview__action--red" title="Remove {{name}}" ng-if="allowRemove && !removeUrl" ng-click="onRemove()"> <localize key="general_remove">Remove</localize> <span class="sr-only">{{name}}</span> </button> </div> </div> ',scope:{icon:'=?',name:'=',alias:'=?',description:'=?',permissions:'=?',published:'=?',sortable:'=?',allowOpen:'=?',allowRemove:'=?',allowEdit:'=?',onOpen:'&?',onRemove:'&?',onEdit:'&?',openUrl:'=?',editUrl:'=?',removeUrl:'=?'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbNodePreview',NodePreviewDirective);}());'use strict';(function(){'use strict';function PaginationDirective(localizationService){function link(scope,el,attr,ctrl){function activate(){if(scope.pageNumber){scope.pageNumber=parseInt(scope.pageNumber);}
var tempPagination=[];var i=0;if(scope.totalPages<=10){for(i=0;i<scope.totalPages;i++){tempPagination.push({val:i+1,isActive:scope.pageNumber===i+1});}}else{var maxIndex=scope.totalPages-10;var start=Math.max(scope.pageNumber-5,0);start=Math.min(maxIndex,start);for(i=start;i<10+start;i++){tempPagination.push({val:i+1,isActive:scope.pageNumber===i+1});}
if(start>0){localizationService.localize('general_first').then(function(value){var firstLabel=value;tempPagination.unshift({name:firstLabel,val:1,isActive:false},{val:'...',isActive:false});});}
if(start<maxIndex){localizationService.localize('general_last').then(function(value){var lastLabel=value;tempPagination.push({val:'...',isActive:false},{name:lastLabel,val:scope.totalPages,isActive:false});});}}
scope.pagination=tempPagination;}
scope.next=function(){if(scope.pageNumber<scope.totalPages){scope.pageNumber++;if(scope.onNext){scope.onNext(scope.pageNumber);}
if(scope.onChange){scope.onChange({'pageNumber':scope.pageNumber});}}};scope.prev=function(pageNumber){if(scope.pageNumber>1){scope.pageNumber--;if(scope.onPrev){scope.onPrev(scope.pageNumber);}
if(scope.onChange){scope.onChange({'pageNumber':scope.pageNumber});}}};scope.goToPage=function(pageNumber){scope.pageNumber=pageNumber+1;if(scope.onGoToPage){scope.onGoToPage(scope.pageNumber);}
if(scope.onChange){if(scope.onChange){scope.onChange({'pageNumber':scope.pageNumber});}}};var unbindPageNumberWatcher=scope.$watchCollection('[pageNumber, totalPages]',function(newValues,oldValues){activate();});scope.$on('$destroy',function(){unbindPageNumberWatcher();});activate();}
var directive={restrict:'E',replace:true,template:'<div class="umb-pagination pagination"> <div ng-show="pagination.length > 1"> <ul> <li ng-class="{disabled:pageNumber <= 1}"> <a href="#" ng-click="prev()" prevent-default> <localize key="general_previous">Previous</localize> </a> </li> <li ng-repeat="pgn in pagination track by $index" ng-class="{active:pgn.isActive}"> <a href="#" ng-click="goToPage(pgn.val - 1)" prevent-default ng-bind="pgn.name ? pgn.name : pgn.val" ng-if="pgn.val != \'...\'"></a> <span ng-bind="pgn.val" ng-if="pgn.val == \'...\'"></span> </li> <li ng-class="{disabled:pageNumber >= totalPages}"> <a href="#" ng-click="next()" prevent-default> <localize key="general_next">Next</localize> </a> </li> </ul> </div> </div> ',scope:{pageNumber:'=',totalPages:'=',onNext:'=',onPrev:'=',onGoToPage:'=',onChange:'&'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbPagination',PaginationDirective);}());'use strict';(function(){'use strict';function ProgressBarDirective(){var directive={restrict:'E',replace:true,template:'<span class="umb-progress-bar umb-progress-bar--{{size}}"> <span class="umb-progress-bar__progress" style="width: {{percentage}}%"></span> </span> ',scope:{percentage:'@',size:'@?'}};return directive;}
angular.module('umbraco.directives').directive('umbProgressBar',ProgressBarDirective);}());'use strict';(function(){'use strict';function ProgressCircleDirective($http,$timeout){function link(scope,element,$filter){function onInit(){var percent=scope.percentage;if(percent>100){percent=100;}else if(percent<0){percent=0;}
var circle=element.find('.umb-progress-circle__highlight');var r=circle.attr('r');var strokeDashArray=r*Math.PI*2;scope.strokeDashArray=strokeDashArray;var strokeDashOffsetDifference=percent/100*strokeDashArray;var strokeDashOffset=strokeDashArray-strokeDashOffsetDifference;scope.strokeDashOffset=strokeDashOffset;scope.percentageSize=scope.size*0.3+'px';}
onInit();}
var directive={restrict:'E',replace:true,template:'<div class="umb-progress-circle" ng-style="{\'width\': size, \'height\': size, \'line-height\': size + \'px\' }"> <svg class="umb-progress-circle__view-box" viewBox="0 0 100 100"> <circle class="umb-progress-circle__bg" cx="50" cy="50" r="47" fill="none" stroke-width="6"></circle> <circle class="umb-progress-circle__highlight umb-progress-circle__highlight--{{ color }}" cx="50" cy="50" r="47" fill="none" stroke-width="6" stroke-dasharray="{{ strokeDashArray }}" stroke-dashoffset="{{ strokeDashOffset }}"></circle> </svg> <div ng-style="{\'font-size\': percentageSize}" class="umb-progress-circle__percentage">{{ percentage }}%</div> </div>',scope:{size:'@?',percentage:'@',color:'@'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbProgressCircle',ProgressCircleDirective);}());'use strict';(function(){'use strict';var umbRangeSlider={template:'<div class="umb-range-slider"></div>',controller:UmbRangeSliderController,bindings:{ngModel:'<',options:'<',onSetup:'&?',onUpdate:'&?',onSlide:'&?',onSet:'&?',onChange:'&?',onStart:'&?',onEnd:'&?'}};function UmbRangeSliderController($element,$timeout,$scope,assetsService){var ctrl=this;var sliderInstance=null;ctrl.$onInit=function(){assetsService.loadCss('lib/nouislider/nouislider.min.css',$scope);assetsService.loadJs('lib/nouislider/nouislider.min.js',$scope).then(function(){grabElementAndRun();});};function grabElementAndRun(){$timeout(function(){var element=$element.find('.umb-range-slider')[0];setSlider(element);},0,true);}
function setSlider(element){sliderInstance=element;var defaultOptions={'start':[0],'step':1,'range':{'min':[0],'max':[100]}};var options=ctrl.options?ctrl.options:defaultOptions;noUiSlider.create(sliderInstance,options);mergeTooltips(sliderInstance,15,' - ');if(ctrl.onSetup){ctrl.onSetup({slider:sliderInstance});}
if(ctrl.ngModel){sliderInstance.noUiSlider.set(ctrl.ngModel);}
$(element).on('$destroy',function(){sliderInstance.noUiSlider.off();});setUpCallbacks();$scope.$applyAsync();}
function setUpCallbacks(){if(sliderInstance){if(ctrl.onUpdate){sliderInstance.noUiSlider.on('update',function(values,handle,unencoded,tap,positions){$timeout(function(){ctrl.onUpdate({values:values,handle:handle,unencoded:unencoded,tap:tap,positions:positions});});});}
if(ctrl.onSlide){sliderInstance.noUiSlider.on('slide',function(values,handle,unencoded,tap,positions){$timeout(function(){ctrl.onSlide({values:values,handle:handle,unencoded:unencoded,tap:tap,positions:positions});});});}
if(ctrl.onSet){sliderInstance.noUiSlider.on('set',function(values,handle,unencoded,tap,positions){$timeout(function(){ctrl.onSet({values:values,handle:handle,unencoded:unencoded,tap:tap,positions:positions});});});}
if(ctrl.onChange){sliderInstance.noUiSlider.on('change',function(values,handle,unencoded,tap,positions){$timeout(function(){ctrl.onChange({values:values,handle:handle,unencoded:unencoded,tap:tap,positions:positions});});});}
if(ctrl.onStart){sliderInstance.noUiSlider.on('start',function(values,handle,unencoded,tap,positions){$timeout(function(){ctrl.onStart({values:values,handle:handle,unencoded:unencoded,tap:tap,positions:positions});});});}
if(ctrl.onEnd){sliderInstance.noUiSlider.on('end',function(values,handle,unencoded,tap,positions){$timeout(function(){ctrl.onEnd({values:values,handle:handle,unencoded:unencoded,tap:tap,positions:positions});});});}}}
function mergeTooltips(slider,threshold,separator){var textIsRtl=getComputedStyle(slider).direction==='rtl';var isRtl=slider.noUiSlider.options.direction==='rtl';var isVertical=slider.noUiSlider.options.orientation==='vertical';var tooltips=slider.noUiSlider.getTooltips();var origins=slider.noUiSlider.getOrigins();tooltips.forEach(function(tooltip,index){if(tooltip){origins[index].appendChild(tooltip);}});slider.noUiSlider.on('update',function(values,handle,unencoded,tap,positions){var pools=[[]];var poolPositions=[[]];var poolValues=[[]];var atPool=0;if(tooltips[0]){pools[0][0]=0;poolPositions[0][0]=positions[0];poolValues[0][0]=values[0];}
for(var i=1;i<positions.length;i++){if(!tooltips[i]||positions[i]-positions[i-1]>threshold){atPool++;pools[atPool]=[];poolValues[atPool]=[];poolPositions[atPool]=[];}
if(tooltips[i]){pools[atPool].push(i);poolValues[atPool].push(values[i]);poolPositions[atPool].push(positions[i]);}}
pools.forEach(function(pool,poolIndex){var handlesInPool=pool.length;for(var j=0;j<handlesInPool;j++){var handleNumber=pool[j];if(j===handlesInPool-1){var offset=0;poolPositions[poolIndex].forEach(function(value){offset+=1000-10*value;});var direction=isVertical?'bottom':'right';var last=isRtl?0:handlesInPool-1;var lastOffset=1000-10*poolPositions[poolIndex][last];offset=(textIsRtl&&!isVertical?100:0)+offset/handlesInPool-lastOffset;var tooltipValues=poolValues[poolIndex].filter(function(v,i,a){return a.indexOf(v)===i;});tooltips[handleNumber].innerHTML=tooltipValues.join(separator);tooltips[handleNumber].style.display='block';tooltips[handleNumber].style[direction]=offset+'%';}else{tooltips[handleNumber].style.display='none';}}});});}}
angular.module('umbraco.directives').component('umbRangeSlider',umbRangeSlider);}());'use strict';(function(){'use strict';function StickyBarDirective(){var headerObserver;var setClass=function setClass(addClass,current){return current.classList.toggle('umb-sticky-bar--active',addClass);};var addSentinel=function addSentinel(current){var sentinel=document.createElement('div');sentinel.classList.add('umb-sticky-sentinel','-top');current.parentElement.prepend(sentinel);};var observeHeader=function observeHeader(current,container){headerObserver=new IntersectionObserver(function(records,observer){var _ref=[records[0].boundingClientRect,records[0].rootBounds],target=_ref[0],rootBounds=_ref[1];if(rootBounds&&target){if(target.bottom<rootBounds.top){setClass(true,current);}
if(target.bottom>=rootBounds.top&&target.bottom<rootBounds.bottom){setClass(false,current);}}},{threshold:[0],root:container});headerObserver.observe(current.parentElement.querySelector('.umb-sticky-sentinel.-top'));};function link(scope,el,attr,ctrl){var current=el[0];var container=current.closest('.umb-editor-container')||current.closest('.umb-dashboard');if(container){addSentinel(current);observeHeader(current,container);}
scope.$on('$destroy',function(){headerObserver.disconnect();});}
var directive={restrict:'A',link:link};return directive;}
angular.module('umbraco.directives').directive('umbStickyBar',StickyBarDirective);}());'use strict';(function(){'use strict';function TableController(iconHelper){var vm=this;vm.clickItem=function(item,$event){if(vm.onClick&&!($event.metaKey||$event.ctrlKey)){vm.onClick({item:item});$event.preventDefault();}
$event.stopPropagation();};vm.selectItem=function(item,$index,$event){if(vm.onSelect){vm.onSelect({item:item,$index:$index,$event:$event});$event.stopPropagation();}};vm.selectAll=function($event){if(vm.onSelectAll){vm.onSelectAll({$event:$event});}};vm.isSelectedAll=function(){if(vm.onSelectedAll&&vm.items&&vm.items.length>0){return vm.onSelectedAll();}};vm.isSortDirection=function(col,direction){if(vm.onSortingDirection){return vm.onSortingDirection({col:col,direction:direction});}};vm.sort=function(field,allow,isSystem){if(vm.onSort){vm.onSort({field:field,allow:allow,isSystem:isSystem});}};vm.getIcon=function(entry){return iconHelper.convertFromLegacyIcon(entry.icon);};}
angular.module('umbraco.directives').component('umbTable',{template:'<div> <div class="umb-table" ng-if="vm.items">  <div class="umb-table-head"> <div class="umb-table-row"> <div class="umb-table-cell"> <button type="button" class="umb-table__action" ng-show="vm.allowSelectAll" ng-click="vm.selectAll()"> <umb-checkmark checked="vm.isSelectedAll()" size="xs"></umb-checkmark> </button> </div> <div class="umb-table-cell umb-table__name"> <button type="button" class="umb-table-head__link sortable" ng-click="vm.sort(\'Name\', true, true)" prevent-default> <localize key="general_name">Name</localize> <i class="umb-table-head__icon icon" aria-hidden="true" ng-class="{\'icon-navigation-up\': vm.isSortDirection(\'Name\', \'asc\'), \'icon-navigation-down\': vm.isSortDirection(\'Name\', \'desc\')}"></i> </button> </div> <div class="umb-table-cell" ng-show="vm.items[0].state"> <localize key="general_status">Status</localize> </div> <div class="umb-table-cell" ng-repeat="column in vm.itemProperties track by column.alias"> <button type="button" class="umb-table-head__link" ng-click="vm.sort(column.alias, column.allowSorting, column.isSystem)" ng-class="{\'sortable\':column.allowSorting}" prevent-default> <span ng-bind="column.header"></span> <i class="umb-table-head__icon icon" aria-hidden="true" ng-class="{\'icon-navigation-up\': vm.isSortDirection(column.alias, \'asc\'), \'icon-navigation-down\': vm.isSortDirection(column.alias, \'desc\')}"></i> </button> </div> </div> </div>  <div class="umb-table-body"> <div class="umb-table-row -selectable umb-outline" ng-repeat="item in vm.items track by $index" ng-class="{\'-selected\':item.selected, \'-light\':!item.published && item.updater != null}" ng-click="vm.selectItem(item, $index, $event)"> <div class="umb-table-cell"> <i class="umb-table-body__icon umb-table-body__fileicon {{item.icon}}" aria-hidden="true" ng-class="vm.getIcon(item)"></i> <i class="umb-table-body__icon umb-table-body__checkicon icon-check" aria-hidden="true"></i> </div> <div class="umb-table-cell umb-table__name"> <a title="{{ item.name }}" class="umb-table-body__link" ng-href="{{\'#\' + item.editPath}}" ng-click="vm.clickItem(item, $event)" ng-bind="item.name"> </a> </div> <div class="umb-table-cell" ng-show="item.state"> <umb-variant-state variant="item"> </umb-variant-state> </div> <div class="umb-table-cell" ng-repeat="column in vm.itemProperties track by column.alias"> <span title="{{column.header}}: {{item[column.alias]}}"> <div ng-if="!column.isSensitive"> {{item[column.alias]}} </div> <em ng-show="column.isSensitive" class="muted"> <localize key="content_isSensitiveValue_short"></localize> </em> </span> </div> </div> </div> </div>  <umb-empty-state ng-hide="vm.items" position="center"> <localize key="content_listViewNoItems">There are no items show in the list.</localize> </umb-empty-state> </div> ',controller:TableController,controllerAs:'vm',bindings:{items:'<',itemProperties:'<',allowSelectAll:'<',onSelect:'&',onClick:'&',onSelectAll:'&',onSelectedAll:'&',onSortingDirection:'&',onSort:'&'}});}());'use strict';(function(){'use strict';function umbTextarea($document){function autogrow(scope,element,attributes){if(!element.hasClass('autogrow')){return;}
var minHeight=parseInt(window.getComputedStyle(element[0]).getPropertyValue('min-height'))||0;element.on('keydown',function(evt){if(evt.which===13){}});element.on('input',function(evt){element.css({height:'auto',minHeight:0});var contentHeight=this.scrollHeight;var borderHeight=1;var paddingHeight=4;element.css({minHeight:null,height:contentHeight+borderHeight+paddingHeight+'px'});});scope.$watch(attributes.ngModel,trigger);trigger();function trigger(){setTimeout(element.triggerHandler.bind(element,'input'),1);}}
var directive={restrict:'E',link:autogrow};return directive;}
angular.module('umbraco.directives').directive('textarea',umbTextarea);}());'use strict';(function(){'use strict';function TooltipDirective(){function link(scope,el,attr,ctrl){scope.tooltipStyles={};scope.tooltipStyles.left=0;scope.tooltipStyles.top=0;function setTooltipPosition(event){var container=$('#contentwrapper');var containerLeft=container[0].offsetLeft;var containerRight=containerLeft+container[0].offsetWidth;var containerTop=container[0].offsetTop;var containerBottom=containerTop+container[0].offsetHeight;var elementHeight=null;var elementWidth=null;var position={right:'inherit',left:'inherit',top:'inherit',bottom:'inherit'};elementHeight=el[0].clientHeight;elementWidth=el[0].clientWidth;position.left=event.pageX-elementWidth/2;position.top=event.pageY;if(position.left+elementWidth>containerRight){position.right=10;position.left='inherit';}
if(position.top+elementHeight>containerBottom){position.bottom=10;position.top='inherit';}
if(position.left<containerLeft){position.left=containerLeft+10;position.right='inherit';}
if(position.top<containerTop){position.top=10;position.bottom='inherit';}
scope.tooltipStyles=position;el.css(position);}
setTooltipPosition(scope.event);}
var directive={restrict:'E',transclude:true,replace:true,template:'<div class="umb-tooltip shadow-depth-2" ng-style="tooltipStyles" ng-transclude></div> ',scope:{event:'='},link:link};return directive;}
angular.module('umbraco.directives').directive('umbTooltip',TooltipDirective);}());'use strict';angular.module('umbraco.directives').directive('umbFileDropzone',function($timeout,Upload,localizationService,umbRequestHelper,overlayService){return{restrict:'E',replace:true,template:'<div data-element="dropzone" class="umb-file-dropzone"> <ng-form name="uploadForm" umb-isolate-form>  <div ngf-drop ng-hide="hideDropzone === \'true\'" ng-model="filesHolder" ngf-change="handleFiles($files, $event)" class="dropzone" ngf-drag-over-class="\'drag-over\'" ngf-multiple="true" ngf-allow-dir="true" ngf-pattern="{{ accept }}" ngf-max-size="{{ maxFileSize }}" ng-class="{\'is-small\': compact!==\'false\' || (done.length+queue.length) > 0 }"> <div class="content"> <p> <localize key="media_dragAndDropYourFilesIntoTheArea">Drag and drop your file(s) into the area</localize> </p>  <img class="illustration" src="assets/img/uploader/upload-illustration.svg" draggable="false">  <button type="button" prevent-default data-element="button-uploadMedia" class="file-select" ngf-select ng-model="filesHolder" ngf-change="handleFiles($newFiles, $event)" ngf-multiple="true" ngf-pattern="{{ accept }}" ngf-max-size="{{ maxFileSize }}"> -&nbsp;<localize key="media_orClickHereToUpload">or click here to choose files</localize> </button> </div> </div>  <ul class="file-list" ng-show="done.length > 0 || queue.length > 0 || rejected.length > 0 || filesHolder.length > 0">  <li class="file" ng-repeat="file in done">  <div class="file-description">{{ file.name }}</div>  <div class="file-icon" ng-if="file.uploadStatus == \'done\'"> <i class="icon icon-check color-green"></i> </div> </li> <li class="file" ng-if="currentFile">  <div class="file-name">{{ currentFile.name }}</div>  <div class="file-progress"> <span class="file-progress-indicator" ng-style="{\'width\': currentFile.uploadProgress + \'%\'}"></span> </div> </li>  <li class="file" ng-repeat="queued in queue">  <div class="file-name">{{ queued.name }}</div> </li> <li class="file" ng-repeat="file in rejected">  <div class="file-description"> <strong>{{ file.name }}</strong> <span class="file-error" ng-if="file.$error"> <span ng-if="file.$error === \'pattern\'" class="errorMessage color-red"><localize key="media_disallowedFileType"></localize></span> <span ng-if="file.$error === \'maxSize\'" class="errorMessage color-red"><localize key="media_maxFileSize"></localize> "{{maxFileSize}}"</span> </span> <span class="file-error" ng-if="file.serverErrorMessage"> <span class="errorMessage color-red">{{file.serverErrorMessage}}</span> </span> </div>  <div class="file-icon"> <i class="icon icon-delete color-red"></i> </div> </li> </ul> </ng-form> </div> ',scope:{parentId:'@',contentTypeAlias:'@',propertyAlias:'@',accept:'@',maxFileSize:'@',compact:'@',hideDropzone:'@',acceptedMediatypes:'=',filesQueued:'=',handleFile:'=',filesUploaded:'='},link:function link(scope,element,attrs){scope.queue=[];scope.done=[];scope.rejected=[];scope.currentFile=undefined;function _filterFile(file){var ignoreFileNames=['Thumbs.db'];var ignoreFileTypes=['directory'];if(ignoreFileNames.indexOf(file.name)===-1&&ignoreFileTypes.indexOf(file.type)===-1&&file.name.indexOf('.')!==0){return true;}else{return false;}}
function _filesQueued(files,event){angular.forEach(files,function(file){if(_filterFile(file)===true){if(file.$error){scope.rejected.push(file);}else{scope.queue.push(file);}}});if(!scope.working){if(!scope.acceptedMediatypes||!scope.acceptedMediatypes.length){files.map(function(file){file.uploadStatus='error';file.serverErrorMessage='File type is not allowed here';scope.rejected.push(file);});scope.queue=[];}
if(scope.acceptedMediatypes&&scope.acceptedMediatypes.length===1){if(scope.acceptedMediatypes[0].alias==='Image'){scope.contentTypeAlias='umbracoAutoSelect';}else{scope.contentTypeAlias=scope.acceptedMediatypes[0].alias;}
_processQueueItem();}
if(scope.acceptedMediatypes&&scope.acceptedMediatypes.length>1){_chooseMediaType();}}}
function _processQueueItem(){if(scope.queue.length>0){scope.currentFile=scope.queue.shift();_upload(scope.currentFile);}else if(scope.done.length>0){if(scope.filesUploaded){scope.filesUploaded(scope.done);}
var currentLength=scope.done.length;$timeout(function(){scope.done.splice(0,currentLength);},3000);}}
function _upload(file){scope.propertyAlias=scope.propertyAlias?scope.propertyAlias:'umbracoFile';scope.contentTypeAlias=scope.contentTypeAlias?scope.contentTypeAlias:'Image';Upload.upload({url:umbRequestHelper.getApiUrl('mediaApiBaseUrl','PostAddFile'),fields:{'currentFolder':scope.parentId,'contentTypeAlias':scope.contentTypeAlias,'propertyAlias':scope.propertyAlias,'path':file.path},file:file}).progress(function(evt){if(file.uploadStat!=='done'&&file.uploadStat!=='error'){var progressPercentage=parseInt(100*evt.loaded/evt.total,10);file.uploadProgress=progressPercentage;file.uploadStatus='uploading';}}).success(function(data,status,headers,config){if(data.notifications&&data.notifications.length>0){file.uploadStatus='error';file.serverErrorMessage=data.notifications[0].message;scope.rejected.push(file);}else{file.uploadStatus='done';file.uploadProgress=100;file.doneDate=new Date();scope.done.push(file);}
scope.currentFile=undefined;_processQueueItem();}).error(function(evt,status,headers,config){file.uploadStatus='error';if(evt.InnerException){file.serverErrorMessage=evt.InnerException.ExceptionMessage;if(evt.InnerException.StackTrace&&evt.InnerException.StackTrace.indexOf('ValidateRequestEntityLength')>0){file.serverErrorMessage='File too large to upload';}}else if(evt.Message){file.serverErrorMessage=evt.Message;}
if(status===404){file.serverErrorMessage='File not found';}
scope.rejected.push(file);scope.currentFile=undefined;_processQueueItem();});}
function _chooseMediaType(){var dialog={view:'itempicker',filter:scope.acceptedMediatypes.length>15,availableItems:scope.acceptedMediatypes,submit:function submit(model){scope.contentTypeAlias=model.selectedItem.alias;_processQueueItem();overlayService.close();},close:function close(){scope.queue.map(function(file){file.uploadStatus='error';file.serverErrorMessage='Cannot upload this file, no mediatype selected';scope.rejected.push(file);});scope.queue=[];overlayService.close();}};localizationService.localize('defaultdialogs_selectMediaType').then(function(value){dialog.title=value;overlayService.open(dialog);});}
scope.handleFiles=function(files,event){if(scope.filesQueued){scope.filesQueued(files,event);}
_filesQueued(files,event);};}};});'use strict';function umbFileUpload(){return{restrict:'A',scope:true,link:function link(scope,el,attrs){el.on('change',function(event){var files=event.target.files;scope.$emit('filesSelected',{files:files});el.val('');});}};}
angular.module('umbraco.directives').directive('umbFileUpload',umbFileUpload);'use strict';(function(){'use strict';function umbPropertyFileUploadController($scope,$q,fileManager,mediaHelper,angularHelper){var vm=this;vm.$onInit=onInit;vm.$onChanges=onChanges;vm.$postLink=postLink;vm.clear=clearFiles;function clearFiles(){fileManager.setFiles({propertyAlias:vm.propertyAlias,culture:vm.culture,segment:vm.segment,files:[]});vm.files=[];notifyFilesSelected(null);notifyFilesChanged(null);}
function notifyFilesSelected(val,files){if(!val){val=null;}
if(!files){files=null;}
vm.onFilesSelected({value:val,files:files});vm.fileUploadForm.$setDirty();}
function notifyFilesChanged(files){if(!files){files=null;}
vm.onFilesChanged({files:files});}
function notifyInit(val,files){if(!val){val=null;}
if(!files){files=null;}
if(vm.onInit){vm.onInit({value:val,files:files});}}
function onInit(){$scope.$on('filesSelected',onFilesSelected);initialize();}
function postLink(){}
function initialize(){if(!vm.culture){vm.culture=null;}
if(!vm.segment){vm.segment=null;}
var existingClientFiles=checkPendingClientFiles();if(existingClientFiles.length>0){updateModelFromSelectedFiles(existingClientFiles).then(function(newVal){notifyInit(newVal,vm.files);});}else if(vm.value){var files=vm.value.split(',');vm.files=_.map(files,function(file){var f={fileName:file,isImage:mediaHelper.detectIfImageByExtension(file),extension:getExtension(file)};f.fileSrc=getThumbnail(f);return f;});notifyInit();}else{vm.files=[];notifyInit();}}
function checkPendingClientFiles(){if(!vm.culture){vm.culture=null;}
if(!vm.segment){vm.segment=null;}
var existingClientFiles=_.map(_.filter(fileManager.getFiles(),function(f){return f.alias===vm.propertyAlias&&f.culture===vm.culture&&f.segment===vm.segment;}),function(f){return f.file;});return existingClientFiles;}
function onChanges(changes){if(changes.value&&!changes.value.isFirstChange()&&changes.value.currentValue!==changes.value.previousValue){if(!changes.value.currentValue&&changes.value.previousValue){vm.files=[];}else if(changes.value.currentValue&&!changes.value.previousValue&&vm.files.length===0){var existingClientFiles=checkPendingClientFiles();if(existingClientFiles.length>0){updateModelFromSelectedFiles(existingClientFiles).then(function(){notifyFilesChanged(vm.files);});}}}}
function getThumbnail(file){if(file.extension==='svg'){return file.fileName;}
if(!file.isImage){return null;}
var thumbnailUrl=mediaHelper.getThumbnailFromPath(file.fileName);return thumbnailUrl;}
function getExtension(fileName){var extension=fileName.substring(fileName.lastIndexOf('.')+1,fileName.length);return extension.toLowerCase();}
function updateModelFromSelectedFiles(files){var promises=[];vm.files=[];var newVal='';var reader=new FileReader();var fileCount=files.length;for(var i=0;i<fileCount;i++){var index=i;var isImage=mediaHelper.detectIfImageByExtension(files[i].name);vm.files.push({isImage:isImage,extension:getExtension(files[i].name),fileName:files[i].name,isClientSide:true});newVal+=files[i].name.split(',').join('-')+',';if(isImage){var deferred=$q.defer();reader.onload=function(e){vm.files[index].fileSrc=e.target.result;deferred.resolve(newVal);};promises.push(deferred.promise);reader.readAsDataURL(files[i]);}else{promises.push($q.when(newVal));}}
return $q.all(promises).then(function(p){return $q.when(p[p.length-1]);});}
function onFilesSelected(event,args){if(args.files&&args.files.length>0){fileManager.setFiles({propertyAlias:vm.propertyAlias,files:args.files,culture:vm.culture,segment:vm.segment});updateModelFromSelectedFiles(args.files).then(function(newVal){angularHelper.safeApply($scope,function(){notifyFilesSelected(newVal,vm.files);notifyFilesChanged(vm.files);});});}else{angularHelper.safeApply($scope);}}};var umbPropertyFileUploadComponent={template:' <div class="umb-property-file-upload"> <ng-form name="vm.fileUploadForm"> <input type="hidden" ng-model="mandatoryValidator" ng-required="vm.required && !vm.files.length"> <div class="fileinput-button umb-upload-button-big" style="margin-bottom: 5px;" ng-hide="vm.files.length > 0"> <i class="icon icon-page-up"></i> <p><localize key="media_clickToUpload">Click to upload</localize></p> <umb-single-file-upload></umb-single-file-upload> </div> <div ng-if="vm.files.length > 0"> <div ng-if="!vm.hideSelection"> <div class="umb-fileupload clearfix" ng-repeat="file in vm.files"> <div ng-if="file.isImage || file.extension === \'svg\'"> <div class="gravity-container"> <div class="viewport"> <img ng-if="file.isClientSide" ng-src="{{file.fileSrc}}" style="max-width: 100%; max-height: 100%" alt="{{file.fileName}}"> <a ng-if="!file.isClientSide" href="{{file.fileSrc}}" target="_blank"> <img ng-src="{{file.fileSrc}}" style="max-width: 100%; max-height: 100%" alt="{{file.fileName}}"> </a> </div> </div> </div> <div ng-if="!file.isImage && file.extension !== \'svg\'"> <a class="span6 thumbnail tc" ng-show="!file.isClientSide" ng-href="{{file.fileName}}" target="_blank"> <umb-file-icon extension="{{file.extension}}" size="m"> </umb-file-icon> <div class="mt2">{{file.fileName}}</div> </a> <div class="span6 thumbnail tc" ng-show="file.isClientSide"> <umb-file-icon extension="{{file.extension}}" size="m"> </umb-file-icon> <div class="mt2">{{file.fileName}}</div> </div> </div> </div> <div> <button class="btn btn-link btn-crop-delete" aria-hidden="true" ng-click="vm.clear()"><i class="icon-delete red"></i> <localize key="content_uploadClear">Remove file</localize></button> <button class="sr-only" ng-if="file.isImage" ng-click="vm.clear()"><localize key="content_uploadClearImageContext">Click here to remove the image from the media item</localize></button> <button class="sr-only" ng-if="!file.isImage" ng-click="vm.clear()"><localize key="content_uploadClearFileContext">Click here to remove the file from the media item</localize></button> </div> </div> <div ng-if="vm.hideSelection"> <div ng-transclude></div> </div> </div> </ng-form> </div> ',bindings:{culture:'@?',segment:'@?',propertyAlias:'@',value:'<',hideSelection:'<',onFilesSelected:'&',onFilesChanged:'&',onInit:'&',required:'='},transclude:true,controllerAs:'vm',controller:umbPropertyFileUploadController};angular.module('umbraco.directives').component('umbPropertyFileUpload',umbPropertyFileUploadComponent);}());'use strict';function umbSingleFileUpload($compile){return{restrict:'E',scope:{rebuild:'='},replace:true,template:'<div><input type=\'file\' umb-file-upload /></div>',link:function link(scope,el,attrs){scope.$watch('rebuild',function(newVal,oldVal){if(newVal&&newVal!==oldVal){el.html('<input type=\'file\' umb-file-upload />');$compile(el.contents())(scope);}});}};}
angular.module('umbraco.directives').directive('umbSingleFileUpload',umbSingleFileUpload);'use strict';(function(){'use strict';function ChangePasswordController($scope){var vm=this;vm.$onInit=onInit;vm.$onDestroy=onDestroy;vm.doChange=doChange;vm.cancelChange=cancelChange;vm.showOldPass=showOldPass;vm.showCancelBtn=showCancelBtn;var unsubscribe=[];function resetModel(isNew){if(vm.config.disableToggle===undefined){vm.config.disableToggle=false;}
if(vm.config.hasPassword===undefined){vm.config.hasPassword=false;}
if(vm.config.minPasswordLength===undefined){vm.config.minPasswordLength=0;}
if(!Utilities.isObject(vm.passwordValues)){vm.passwordValues={newPassword:null,oldPassword:null};}else{if(!isNew){vm.passwordValues.newPassword=null;vm.passwordValues.oldPassword=null;}}
if(!isNew){vm.passwordValues.confirm='';}else if(vm.passwordValues.newPassword&&vm.passwordValues.newPassword.length>0){vm.passwordValues.confirm=vm.passwordValues.newPassword;}}
function onDestroy(){for(var u in unsubscribe){unsubscribe[u]();}}
function onInit(){unsubscribe.push($scope.$on('formSubmitted',function(){if(vm.config.disableToggle===false){vm.changing=false;}}));unsubscribe.push($scope.$on('formSubmitting',function(){if(!vm.changing){vm.passwordValues=null;}}));resetModel(vm.isNew);vm.changing=vm.config.disableToggle===true||!vm.config.hasPassword;if(!vm.changing){vm.passwordValues=null;}}
function doChange(){resetModel();vm.changing=true;vm.passwordValues.confirm=null;};function cancelChange(){vm.changing=false;vm.passwordValues=null;};function showOldPass(){return vm.config.hasPassword&&!vm.config.allowManuallyChangingPassword;};function showCancelBtn(){return vm.config.disableToggle!==true&&vm.config.hasPassword;};}
var component={template:'<div> <div ng-switch="vm.changing"> <div ng-switch-when="false"> <button type="button" ng-click="vm.doChange()" class="btn umb-button__button btn-action umb-outline umb-outline--thin"> <localize key="general_changePassword">Change password</localize> </button> </div> <div ng-switch-when="true"> <ng-form name="changePasswordForm">  <umb-control-group alias="oldPassword" label="@user_oldPassword" ng-if="vm.showOldPass()" required="true"> <input type="password" name="oldPassword" id="oldPassword" ng-model="vm.passwordValues.oldPassword" class="input-block-level umb-textstring textstring" required val-server-field="oldPassword" no-dirty-check> <span ng-messages="changePasswordForm.oldPassword.$error" show-validation-on-submit> <span class="help-inline" ng-message="required">Required</span> <span class="help-inline" ng-message="valServerField">{{changePasswordForm.oldPassword.errorMsg}}</span> </span> </umb-control-group> <umb-control-group alias="password" label="@user_newPassword" required="true"> <input type="password" name="password" id="password" ng-model="vm.passwordValues.newPassword" class="input-block-level umb-textstring textstring" required val-server-field="password" ng-minlength="{{vm.config.minPasswordLength}}" no-dirty-check> <span ng-messages="changePasswordForm.password.$error" show-validation-on-submit> <span class="help-inline" ng-message="required">Required</span> <span class="help-inline" ng-message="minlength">Minimum {{vm.config.minPasswordLength}} characters</span> <span class="help-inline" ng-message="valServerField">{{changePasswordForm.password.errorMsg}}</span> </span> </umb-control-group> <umb-control-group alias="confirmPassword" label="@user_confirmNewPassword" required="true"> <input type="password" name="confirmPassword" id="confirmPassword" ng-model="vm.passwordValues.confirm" class="input-block-level umb-textstring textstring" val-compare="password" no-dirty-check> <span ng-messages="changePasswordForm.confirmPassword.$error" show-validation-on-submit> <span class="help-inline" ng-message="valCompare"><localize key="user_passwordMismatch">The confirmed password doesn\'t match the new password!</localize></span> </span> </umb-control-group> <button ng-click="vm.cancelChange()" ng-show="vm.showCancelBtn()" class="btn umb-button__button btn-cancel umb-button-- umb-outline umb-outline--thin"> <localize key="general_cancel">Cancel</localize> </button> </ng-form> </div> </div> </div> ',controller:ChangePasswordController,controllerAs:'vm',bindings:{isNew:'<',passwordValues:'=',config:'='}};angular.module('umbraco.directives').component('changePassword',component);}());'use strict';(function(){'use strict';function UserGroupPreviewDirective(){function link(scope,el,attr,ctrl){}
var directive={restrict:'E',replace:true,template:'<div class="umb-user-group-preview"> <i ng-if="icon" class="umb-user-group-preview__icon {{ icon }}"></i> <div class="umb-user-group-preview__content"> <div class="umb-user-group-preview__name">{{ name }}</div> <div class="umb-user-group-preview__permissions" ng-if="sections"> <span> <span class="bold"><localize key="main_sections">Sections</localize>:</span> <span ng-repeat="section in sections" class="umb-user-group-preview__permission">{{ section.name }}</span> <span ng-if="sections.length === 0">All sections</span> </span> </div> <div class="umb-user-group-preview__permissions" ng-if="!hideContentStartNode"> <span> <span class="bold"><localize key="user_startnode">Content start node</localize>:</span> <span ng-if="!contentStartNode"><localize key="user_noStartNode">No start node selected</localize></span> <span ng-if="contentStartNode">{{ contentStartNode.name }}</span> </span> </div> <div class="umb-user-group-preview__permissions" ng-if="!hideMediaStartNode"> <span> <span class="bold"><localize key="user_mediastartnode">Media start node</localize>:</span> <span ng-if="!mediaStartNode"><localize key="user_noStartNode">No start node selected</localize></span> <span ng-if="mediaStartNode">{{ mediaStartNode.name }}</span> </span> </div> <div class="umb-user-group-preview__permissions" ng-if="permissions"> <span> <span class="bold"><localize key="general_rights">Permissions</localize>:</span> <span ng-repeat="permission in permissions" class="umb-user-group-preview__permission">{{ permission.name }}</span> </span> </div> </div> <div class="umb-user-group-preview__actions"> <button class="btn-link umb-user-group-preview__action" title="Edit" ng-if="allowEdit" ng-click="onEdit()"><localize key="general_edit">Edit</localize></button> <button class="btn-link umb-user-group-preview__action umb-user-group-preview__action--red" title="Remove" ng-if="allowRemove" ng-click="onRemove()"><localize key="general_remove">Remove</localize></button> </div> </div> ',scope:{icon:'=?',name:'=',sections:'=?',contentStartNode:'=?',hideContentStartNode:'@?',mediaStartNode:'=?',hideMediaStartNode:'@?',permissions:'=?',allowRemove:'=?',allowEdit:'=?',onRemove:'&?',onEdit:'&?'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbUserGroupPreview',UserGroupPreviewDirective);}());'use strict';(function(){'use strict';function UserPreviewDirective(){function link(scope,el,attr,ctrl){}
var directive={restrict:'E',replace:true,template:'<div class="umb-user-preview"> <div class="umb-user-preview__avatar"> <umb-avatar size="xxs" color="secondary" name="{{name}}" img-src="{{avatars[0]}}" img-srcset="{{avatars[1]}} 2x, {{avatars[2]}} 3x"> </umb-avatar> </div> <div class="umb-user-preview__content"> <div class="umb-user-preview__name">{{ name }}</div> </div> <div class="umb-user-preview__actions"> <button type="button" class="umb-user-preview__action umb-user-preview__action--red btn-link" title="Remove" ng-if="allowRemove" ng-click="onRemove()"><localize key="general_remove">Remove</localize></button> </div> </div> ',scope:{avatars:'=?',name:'=',allowRemove:'=?',onRemove:'&?'},link:link};return directive;}
angular.module('umbraco.directives').directive('umbUserPreview',UserPreviewDirective);}());'use strict';angular.module('umbraco.directives').directive('autoScale',function($window,$timeout,windowResizeListener){return function(scope,el,attrs){var totalOffset=0;var offsety=parseInt(attrs.autoScale,10);var window=$($window);if(offsety!==undefined){totalOffset+=offsety;}
$timeout(function(){setElementSize();});function setElementSize(){el.height(window.height()-(el.offset().top+totalOffset));}
var resizeCallback=function resizeCallback(){setElementSize();};windowResizeListener.register(resizeCallback);scope.$on('$destroy',function(){windowResizeListener.unregister(resizeCallback);});};});'use strict';angular.module('umbraco.directives').directive('disableTabindex',function(tabbableService){return{restrict:'A',scope:{'disableTabindex':'<'},link:function link(scope,element,attrs){if(scope.disableTabindex){var domChange=function domChange(mutationsList,observer){var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=mutationsList[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var mutation=_step.value;if(mutation.type=='childList'){var childInputs=tabbableService.tabbable(mutation.target);angular.forEach(childInputs,function(element){$(element).attr('tabindex','-1');});}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}};var targetNode=element[0];var observer=new MutationObserver(domChange);var config={attributes:true,childList:true,subtree:true};observer.observe(targetNode,config);}}};});'use strict';angular.module('umbraco.directives').directive('retriveDomElement',function(){var directiveDefinitionObject={restrict:'A',selector:'[retriveDomElement]',scope:{'retriveDomElement':'&'},link:{post:function post(scope,iElement,iAttrs,controller){scope.retriveDomElement({element:iElement,attributes:iAttrs});}}};return directiveDefinitionObject;});'use strict';angular.module('umbraco.directives').directive('noPasswordManager',function(){return{restrict:'A',link:function link(scope,element,attrs){element.attr('data-lpignore','true');}};});'use strict';angular.module('umbraco.directives').directive('umbIsolateForm',function(){return{restrict:'A',require:['form','^form'],link:function link(scope,element,attrs,forms){forms[1].$removeControl(forms[0]);}};});'use strict';angular.module('umbraco.directives').directive('umbKeyboardList',['$document','$timeout',function($document,$timeout){return{restrict:'A',link:function link(scope,element,attr){var listItems=[];var currentIndex=0;var focusSet=false;$timeout(function(){listItems=element.find('li :tabbable');});function keydown(event){$timeout(function(){checkFocus();if(event.keyCode===40){arrowDown();}
if(event.keyCode===38){arrowUp();}});}
function checkFocus(){var found=false;angular.forEach(listItems,function(item,index){if($(item).is(':focus')){currentIndex=index;focusSet=true;found=true;}});if(!found){currentIndex=0;focusSet=false;}}
function arrowDown(){if(currentIndex<listItems.length-1){if(focusSet){currentIndex++;}
listItems[currentIndex].trigger('focus');focusSet=true;}}
function arrowUp(){if(currentIndex>0){currentIndex--;listItems[currentIndex].trigger('focus');}}
function stopListening(){$document.off('keydown',keydown);}
$document.on('keydown',keydown);scope.$on('$destroy',stopListening);}};}]);'use strict';function noDirtyCheck(){return{restrict:'A',require:'ngModel',link:function link(scope,elm,attrs,ctrl){var alwaysFalse={get:function get(){return false;},set:function set(){}};Object.defineProperty(ctrl,'$pristine',alwaysFalse);Object.defineProperty(ctrl,'$dirty',alwaysFalse);}};}
angular.module('umbraco.directives.validation').directive('noDirtyCheck',noDirtyCheck);'use strict';(function(){'use strict';function showValidationOnSubmit(serverValidationManager){return{require:['ngMessages','^^?valFormManager'],restrict:'A',scope:{form:'=?'},link:function link(scope,element,attr,ctrl){var formMgr=ctrl.length>1?ctrl[1]:null;var submitted=element.closest('.show-validation').length>0||formMgr&&formMgr.showValidation;if(!submitted){element.hide();}
var unsubscribe=[];unsubscribe.push(scope.$on('formSubmitting',function(ev,args){element.show();}));unsubscribe.push(scope.$on('formSubmitted',function(ev,args){element.hide();}));element.on('$destroy',function(){for(var u in unsubscribe){unsubscribe[u]();}});}};}
angular.module('umbraco.directives.validation').directive('showValidationOnSubmit',showValidationOnSubmit);}());'use strict';(function(){'use strict';function SetDirtyOnChange(){function link(scope,el,attr,ctrls){var formCtrl=ctrls[0];if(ctrls.length>1&&ctrls[1]){var modelCtrl=ctrls[1];var oldRender=modelCtrl.$render;modelCtrl.$render=function(){formCtrl.$setDirty();if(oldRender){oldRender();}};}else{var initValue=attr.umbSetDirtyOnChange;attr.$observe('umbSetDirtyOnChange',function(newValue){if(newValue!==initValue){formCtrl.$setDirty();}});}}
var directive={require:['^^form','?ngModel'],restrict:'A',link:link};return directive;}
angular.module('umbraco.directives').directive('umbSetDirtyOnChange',SetDirtyOnChange);}());'use strict';angular.module('umbraco.directives.validation').directive('valCompare',function(){return{require:['ngModel','^^form'],link:function link(scope,elem,attrs,ctrls){var ctrl=ctrls[0];var formCtrl=ctrls[1];var otherInput=formCtrl[attrs.valCompare];ctrl.$validators.valCompare=function(modelValue,viewValue){return viewValue===otherInput.$viewValue;};otherInput.$parsers.push(function(value){ctrl.$setValidity('valCompare',value===ctrl.$viewValue);return value;});}};});'use strict';function valEmail(valEmailExpression){return{require:'ngModel',restrict:'A',link:function link(scope,elm,attrs,ctrl){function patternValidator(viewValue){if(!viewValue||valEmailExpression.EMAIL_REGEXP.test(viewValue)){ctrl.errorMsg='';return true;}else{ctrl.errorMsg='Invalid email';return false;}};if(attrs.type==='email'){ctrl.$validators={};}
ctrl.$validators.valEmail=function(modelValue,viewValue){return patternValidator(viewValue);};}};}
angular.module('umbraco.directives.validation').directive('valEmail',valEmail).factory('valEmailExpression',function(){var emailRegex=/^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;return{EMAIL_REGEXP:emailRegex};});'use strict';function valFormManager(serverValidationManager,$rootScope,$timeout,$location,overlayService,eventsService,$routeParams,navigationService,editorService,localizationService,angularHelper){var SHOW_VALIDATION_CLASS_NAME='show-validation';var SAVING_EVENT_NAME='formSubmitting';var SAVED_EVENT_NAME='formSubmitted';function notify(scope){scope.$broadcast('valStatusChanged',{form:scope.formCtrl});}
function ValFormManagerController($scope){$scope.valFormManager=this;var unsubscribe=[];var self=this;this.onValidationStatusChanged=function(cb){unsubscribe.push($scope.$on('valStatusChanged',function(evt,args){cb.apply(self,[evt,args]);}));};this.isShowingValidation=function(){return $scope.showValidation===true;};this.notify=function(){notify($scope);};this.isValid=function(){return!$scope.formCtrl.$invalid;};$scope.$on('$destroy',function(){for(var u in unsubscribe){unsubscribe[u]();}});}
function getAncestorValFormManager(scope,ctrls,index){var found=ctrls[index];if(found){return found;}
var found=angularHelper.traverseScopeChain(scope,function(s){return s&&s.valFormManager&&s.valFormManager.constructor.name==='ValFormManagerController';});return found?found.valFormManager:null;}
return{require:['form','^^?valFormManager','^^?valSubView'],restrict:'A',controller:ValFormManagerController,link:function link(scope,element,attr,ctrls){function notifySubView(){if(subView){subView.valStatusChanged({form:formCtrl,showValidation:scope.showValidation});}}
var formCtrl=scope.formCtrl=ctrls[0];var parentFormMgr=scope.parentFormMgr=getAncestorValFormManager(scope,ctrls,1);var subView=ctrls.length>1?ctrls[2]:null;var labels={};var labelKeys=['prompt_unsavedChanges','prompt_unsavedChangesWarning','prompt_discardChanges','prompt_stay'];localizationService.localizeMany(labelKeys).then(function(values){labels.unsavedChangesTitle=values[0];labels.unsavedChangesContent=values[1];labels.discardChangesButton=values[2];labels.stayButton=values[3];});scope.$watch(function(){return angularHelper.countAllFormErrors(formCtrl);},function(e){notify(scope);notifySubView();var inError=element.find('.control-group .ng-invalid').closest('.control-group');inError.addClass('error');var noInError=element.find('.control-group .ng-valid').closest('.control-group').not(inError);noInError.removeClass('error');});var isSavingNewItem=false;if(serverValidationManager.items.length>0||parentFormMgr&&parentFormMgr.isShowingValidation()){element.addClass(SHOW_VALIDATION_CLASS_NAME);scope.showValidation=true;notifySubView();}
var unsubscribe=[];unsubscribe.push(scope.$on(SAVING_EVENT_NAME,function(ev,args){element.addClass(SHOW_VALIDATION_CLASS_NAME);scope.showValidation=true;notifySubView();isSavingNewItem=$routeParams.create;}));unsubscribe.push(scope.$on(SAVED_EVENT_NAME,function(ev,args){element.removeClass(SHOW_VALIDATION_CLASS_NAME);scope.showValidation=false;notifySubView();formCtrl.$setPristine();}));var confirmed=false;var locationEvent=$rootScope.$on('$locationChangeStart',function(event,nextLocation,currentLocation){var infiniteEditors=editorService.getEditors();if(!formCtrl.$dirty&&infiniteEditors.length===0||isSavingNewItem&&infiniteEditors.length===0){return;}
var nextPath=nextLocation.split('#')[1];if(nextPath&&!confirmed){if(navigationService.isRouteChangingNavigation(currentLocation,nextLocation)){if(nextPath.indexOf('%253')||nextPath.indexOf('%252')){nextPath=decodeURIComponent(nextPath);}
var overlay={'view':'default','title':labels.unsavedChangesTitle,'content':labels.unsavedChangesContent,'disableBackdropClick':true,'disableEscKey':true,'submitButtonLabel':labels.stayButton,'closeButtonLabel':labels.discardChangesButton,submit:function submit(){overlayService.close();},close:function close(){editorService.closeAll();navigationService.clearSearch();var parts=nextPath.split('?');var query={};if(parts.length>1){_.each(parts[1].split('&'),function(q){var keyVal=q.split('=');query[keyVal[0]]=keyVal[1];});}
$location.path(parts[0]).search(query);overlayService.close();confirmed=true;}};overlayService.open(overlay);event.preventDefault();eventsService.emit('valFormManager.pendingChanges',true);}}});unsubscribe.push(locationEvent);scope.$on('$destroy',function(){for(var u in unsubscribe){unsubscribe[u]();}});$timeout(function(){formCtrl.$setPristine();},1000);}};}
angular.module('umbraco.directives.validation').directive('valFormManager',valFormManager);'use strict';function valHighlight($timeout){return{restrict:'A',link:function link(scope,element,attrs,ctrl){attrs.$observe('valHighlight',function(newVal){if(newVal==='true'){element.addClass('highlight-error');$timeout(function(){scope[attrs.valHighlight]=false;},1000);}else{element.removeClass('highlight-error');}});}};}
angular.module('umbraco.directives.validation').directive('valHighlight',valHighlight);'use strict';(function(){function multi($parse,$rootScope){return{restrict:'A',require:'ngModel',link:function link(scope,elem,attrs,ngModelCtrl){var validate=$parse(attrs.multi)(scope);ngModelCtrl.$viewChangeListeners.push(function(){$rootScope.$broadcast('multi:valueChanged');});var deregisterListener=scope.$on('multi:valueChanged',function(event){ngModelCtrl.$setValidity('multi',validate());});scope.$on('$destroy',deregisterListener);}};}
angular.module('umbraco.directives.validation').directive('multi',['$parse','$rootScope',multi]);}());'use strict';function valPropertyMsg(serverValidationManager,localizationService,angularHelper){return{require:['^^form','^^valFormManager','^^umbProperty','?^^umbVariantContent','?^^valPropertyMsg'],replace:true,restrict:'E',template:'<div ng-show="errorMsg != \'\'" class=\'alert alert-error property-error\' >{{errorMsg}}</div>',scope:{},link:function link(scope,element,attrs,ctrl){var unsubscribe=[];var watcher=null;var hasError=false;scope.errorMsg='';var formCtrl=ctrl[0];var valFormManager=ctrl[1];var umbPropCtrl=ctrl[2];var umbVariantCtrl=ctrl[3];var currentProperty=umbPropCtrl.property;scope.currentProperty=currentProperty;var currentCulture=currentProperty.culture;var currentSegment=currentProperty.segment;var isMandatory=currentProperty.validation?currentProperty.validation.mandatory:undefined;var labels={};var showValidation=false;if(umbVariantCtrl){var currentVariant=umbVariantCtrl.editor.content;if(umbVariantCtrl.content.variants.length>1&&(!currentVariant.language||!currentVariant.language.isDefault)&&!currentCulture&&!currentSegment&&!currentProperty.unlockInvariantValue){return;}}
currentCulture=currentCulture||'invariant';function getErrorMsg(){if(scope.currentProperty){var err=serverValidationManager.getPropertyError(umbPropCtrl.getValidationPath(),null,'',null);if(err&&err.errorMsg){return err.errorMsg;}else{return scope.currentProperty.propertyErrorMessage?scope.currentProperty.propertyErrorMessage:labels.propertyHasErrors;}}
return labels.propertyHasErrors;}
function checkAndClearError(){var errCount=angularHelper.countAllFormErrors(formCtrl);if(errCount===0){return true;}
if(errCount>2){return false;}
var hasValServer=Utilities.isArray(formCtrl.$error.valServer);if(errCount===1&&hasValServer){return true;}
var hasOwnErr=hasExplicitError();if(errCount===1&&hasOwnErr||errCount===2&&hasOwnErr&&hasValServer){var propertyValidationPath=umbPropCtrl.getValidationPath();if(isLastServerError(propertyValidationPath)){serverValidationManager.removePropertyError(propertyValidationPath,currentCulture,'',currentSegment);return true;}
return false;}
return false;}
function hasExplicitError(){return Utilities.isArray(formCtrl.$error.valPropertyMsg);}
function isLastServerError(propertyValidationPath){var nestedErrs=serverValidationManager.getPropertyErrorsByValidationPath(propertyValidationPath,currentCulture,currentSegment,{matchType:'prefix'});if(nestedErrs.length===0||nestedErrs.length===1&&nestedErrs[0].propertyAlias===propertyValidationPath){return true;}
return false;}
function resetServerValidityValidator(fieldController){var storedFieldController=fieldController;return function(modelValue,viewValue){if(storedFieldController.$dirty){if(checkAndClearError()){resetError();}}
return true;};}
function collectAllNgModelControllersRecursively(controls,ngModels){controls.forEach(function(ctrl){if(angularHelper.isForm(ctrl)){if(ctrl.$name!==formCtrl.$name){collectAllNgModelControllersRecursively(ctrl.$getControls(),ngModels);}}else if(ctrl.hasOwnProperty('$modelValue')&&Utilities.isObject(ctrl.$validators)){ngModels.push(ctrl);}});}
function startWatch(){if(!watcher){watcher=scope.$watchCollection(function(){return formCtrl;},function(updatedFormController){var ngModels=[];collectAllNgModelControllersRecursively(updatedFormController.$getControls(),ngModels);ngModels.forEach(function(x){if(!x.$validators.serverValidityResetter){x.$validators.serverValidityResetter=resetServerValidityValidator(x);}});});}}
function stopWatch(){if(watcher){watcher();watcher=null;}}
function resetError(){stopWatch();hasError=false;formCtrl.$setValidity('valPropertyMsg',true);scope.errorMsg='';}
function checkValidationStatus(){if(formCtrl.$invalid){if(formCtrl.$error.valPropertyMsg&&formCtrl.$error.valPropertyMsg.length>0){return;}
else if(_.without(_.keys(formCtrl.$error),'valPropertyMsg').length>0){if(isMandatory!==undefined&&isMandatory===false&&!currentProperty.value){resetError();var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=formCtrl.$getControls()[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var control=_step.value;control.$setValidity();}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}
return;}
hasError=true;if(showValidation&&scope.errorMsg===''){scope.errorMsg=getErrorMsg();}}else{resetError();}}else{resetError();}}
function onInit(){localizationService.localize('errors_propertyHasErrors').then(function(data){labels.propertyHasErrors=data;showValidation=serverValidationManager.items.length>0;if(!showValidation){showValidation=element.closest('.show-validation').length>0;}
valFormManager.onValidationStatusChanged(function(evt,args){checkValidationStatus();});unsubscribe.push(scope.$on('formSubmitting',function(ev,args){showValidation=true;if(hasError&&scope.errorMsg===''){scope.errorMsg=getErrorMsg();startWatch();}else if(!hasError){resetError();}}));unsubscribe.push(scope.$on('formSubmitted',function(ev,args){showValidation=false;resetError();}));if(scope.currentProperty){var serverValidationManagerCallback=function serverValidationManagerCallback(isValid,propertyErrors,allErrors){var hadError=hasError;hasError=!isValid;if(hasError){scope.errorMsg=propertyErrors.length>1?labels.propertyHasErrors:propertyErrors[0].errorMsg||labels.propertyHasErrors;formCtrl.$setValidity('valPropertyMsg',false);startWatch();if(propertyErrors.length===1&&hadError&&!formCtrl.$pristine){var propertyValidationPath=umbPropCtrl.getValidationPath();serverValidationManager.removePropertyError(propertyValidationPath,currentCulture,'',currentSegment);resetError();}}else{resetError();}};unsubscribe.push(serverValidationManager.subscribe(umbPropCtrl.getValidationPath(),currentCulture,'',serverValidationManagerCallback,currentSegment,{matchType:'prefix'}));}});}
scope.$on('$destroy',function(){stopWatch();unsubscribe.forEach(function(u){return u();});});onInit();}};}
angular.module('umbraco.directives.validation').directive('valPropertyMsg',valPropertyMsg);'use strict';function valPropertyValidator(serverValidationManager){return{scope:{valPropertyValidator:'='},require:['ngModel','?^umbProperty'],restrict:'A',link:function link(scope,element,attrs,ctrls){var modelCtrl=ctrls[0];var propCtrl=ctrls.length>1?ctrls[1]:null;if(!scope.valPropertyValidator||!angular.isFunction(scope.valPropertyValidator)){throw new Error('val-property-validator directive must specify a function to call');}
function validate(viewValue){var result=scope.valPropertyValidator();if(!result.errorKey||result.isValid===undefined||!result.errorMsg){throw'The result object from valPropertyValidator does not contain required properties: isValid, errorKey, errorMsg';}
if(result.isValid===true){modelCtrl.$setValidity(result.errorKey,true);if(propCtrl){propCtrl.setPropertyError(null);}}else{modelCtrl.$setValidity(result.errorKey,false);if(propCtrl){propCtrl.setPropertyError(result.errorMsg);}}
return result.isValid?viewValue:undefined;};modelCtrl.$parsers.push(validate);validate();}};}
angular.module('umbraco.directives.validation').directive('valPropertyValidator',valPropertyValidator);'use strict';function valRegex(){return{require:'ngModel',restrict:'A',link:function link(scope,elm,attrs,ctrl){var flags='';var regex;attrs.$observe('valRegexFlags',function(newVal){if(newVal){flags=newVal;}});attrs.$observe('valRegex',function(newVal){if(newVal){try{var resolved=newVal;if(resolved){regex=new RegExp(resolved,flags);}else{regex=new RegExp(attrs.valRegex,flags);}}catch(e){regex=new RegExp(attrs.valRegex,flags);}}});var oldRender=ctrl.$render;ctrl.$render=function(){patternValidator(ctrl.$viewValue);if(oldRender){oldRender();}};var patternValidator=function patternValidator(viewValue){if(regex){if(!viewValue||regex.test(viewValue.toString())){ctrl.$setValidity('valRegex',true);ctrl.errorMsg='';return viewValue;}else{ctrl.$setValidity('valRegex',false);ctrl.errorMsg='Value is invalid, it does not match the correct pattern';return undefined;}}};}};}
angular.module('umbraco.directives.validation').directive('valRegex',valRegex);'use strict';(function(){'use strict';function valRequireComponentDirective(){function link(scope,el,attr,ngModel){var unbindModelWatcher=scope.$watch(function(){return ngModel.$modelValue;},function(newValue){if(newValue===undefined||newValue===null||newValue===''){ngModel.$setValidity('valRequiredComponent',false);}else{ngModel.$setValidity('valRequiredComponent',true);}});scope.$on('$destroy',function(){unbindModelWatcher();});}
var directive={require:'ngModel',restrict:'A',link:link};return directive;}
angular.module('umbraco.directives').directive('valRequireComponent',valRequireComponentDirective);}());'use strict';function valServer(serverValidationManager){return{require:['ngModel','?^^umbProperty','?^^umbVariantContent'],restrict:'A',scope:{},link:function link(scope,element,attr,ctrls){var modelCtrl=ctrls[0];var umbPropCtrl=ctrls[1];if(!umbPropCtrl){return;}
var umbVariantCtrl=ctrls[2];var currentProperty=umbPropCtrl.property;var currentCulture=currentProperty.culture;var currentSegment=currentProperty.segment;if(umbVariantCtrl){var currentVariant=umbVariantCtrl.editor.content;if(umbVariantCtrl.content.variants.length>1&&(!currentVariant.language||!currentVariant.language.isDefault)&&!currentCulture&&!currentSegment&&!currentProperty.unlockInvariantValue){return;}}
currentCulture=currentCulture||'invariant';var watcher=null;var unsubscribe=[];var fieldName='value';if(attr.valServer){fieldName=scope.$eval(attr.valServer);if(!fieldName){fieldName=attr.valServer;}}
var propertyValidationPath=umbPropCtrl?umbPropCtrl.getValidationPath():currentProperty.alias;function startWatch(){if(!watcher){watcher=scope.$watch(function(){return modelCtrl.$modelValue;},function(newValue,oldValue){if(!newValue||angular.equals(newValue,oldValue)){return;}
if(modelCtrl.$invalid){modelCtrl.$setValidity('valServer',true);serverValidationManager.removePropertyError(propertyValidationPath,currentCulture,fieldName,currentSegment);stopWatch();}},true);}}
function stopWatch(){if(watcher){watcher();watcher=null;}}
function serverValidationManagerCallback(isValid,propertyErrors,allErrors){if(!isValid){modelCtrl.$setValidity('valServer',false);modelCtrl.errorMsg=propertyErrors[0].errorMsg;startWatch();}else{modelCtrl.$setValidity('valServer',true);modelCtrl.errorMsg='';stopWatch();}}
unsubscribe.push(serverValidationManager.subscribe(propertyValidationPath,currentCulture,fieldName,serverValidationManagerCallback,currentSegment));scope.$on('$destroy',function(){stopWatch();unsubscribe.forEach(function(u){return u();});});}};}
angular.module('umbraco.directives.validation').directive('valServer',valServer);'use strict';function valServerField(serverValidationManager){return{require:'ngModel',restrict:'A',scope:{},link:function link(scope,element,attr,ngModel){var fieldName=null;var unsubscribe=[];attr.$observe('valServerField',function(newVal){if(newVal&&fieldName===null){fieldName=newVal;unsubscribe.push(scope.$watch(function(){return ngModel.$modelValue;},function(newValue){if(ngModel.$invalid){ngModel.$setValidity('valServerField',true);}}));unsubscribe.push(serverValidationManager.subscribe(null,null,fieldName,function(isValid,fieldErrors,allErrors){if(!isValid){ngModel.$setValidity('valServerField',false);ngModel.errorMsg=fieldErrors[0].errorMsg;}else{ngModel.$setValidity('valServerField',true);ngModel.errorMsg='';}}));}});scope.$on('$destroy',function(){for(var e in unsubscribe){unsubscribe[e]();}});}};}
angular.module('umbraco.directives.validation').directive('valServerField',valServerField);'use strict';function valServerMatch(serverValidationManager){return{require:['form','^^umbProperty','?^^umbVariantContent'],restrict:'A',scope:{valServerMatch:'='},link:function link(scope,element,attr,ctrls){var formCtrl=ctrls[0];var umbPropCtrl=ctrls[1];if(!umbPropCtrl){return;}
var umbVariantCtrl=ctrls[2];var currentProperty=umbPropCtrl.property;var currentCulture=currentProperty.culture;var currentSegment=currentProperty.segment;if(umbVariantCtrl){var currentVariant=umbVariantCtrl.editor.content;if(umbVariantCtrl.content.variants.length>1&&(!currentVariant.language||!currentVariant.language.isDefault)&&!currentCulture&&!currentSegment&&!currentProperty.unlockInvariantValue){return;}}
currentCulture=currentCulture||'invariant';var unsubscribe=[];function bindCallback(validationKey,matchVal,matchType){if(Utilities.isString(matchVal)){matchVal=[matchVal];}
matchVal.forEach(function(m){unsubscribe.push(serverValidationManager.subscribe(m,currentCulture,'',function(isValid,propertyErrors,allErrors){if(!isValid){formCtrl.$setValidity(validationKey,false);}else{formCtrl.$setValidity(validationKey,true);}},currentSegment,matchType?{matchType:matchType}:null));});}
if(Utilities.isObject(scope.valServerMatch)){var allowedKeys=['contains','prefix','suffix'];Object.keys(scope.valServerMatch).forEach(function(matchType){if(allowedKeys.indexOf(matchType)===-1){throw'valServerMatch dictionary keys must be one of '+allowedKeys.join();}
var matchVal=scope.valServerMatch[matchType];if(Utilities.isObject(matchVal)){Object.keys(matchVal).forEach(function(valKey){bindCallback(valKey,matchVal[valKey],matchType);});}else{bindCallback('valServerMatch',matchVal,matchType);}});}else if(Utilities.isString(scope.valServerMatch)){bindCallback('valServerMatch',scope.valServerMatch,null);}else{throw'valServerMatch value must be a string or a dictionary';}
scope.$on('$destroy',function(){unsubscribe.forEach(function(u){return u();});});}};}
angular.module('umbraco.directives.validation').directive('valServerMatch',valServerMatch);'use strict';(function(){'use strict';function valSubViewDirective(){function controller($scope,$element,$attrs){var model=$scope.model;if($attrs&&$attrs.valSubView){model=$scope[$attrs.valSubView];}
return{valStatusChanged:function valStatusChanged(args){if(model){if(!args.form.$valid){var subViewContent=$element.find('.ng-invalid');if(subViewContent.length>0){model.hasError=true;model.errorClass=args.showValidation?'show-validation':null;}else{model.hasError=false;model.errorClass=null;}}else{model.hasError=false;model.errorClass=null;}}}};}
function link(scope,el,attr,ctrl){if(!ctrl[1]){return;}
var model=scope.model;if(attr&&attr.valSubView){model=scope[attr.valSubView];}
var valFormManager=ctrl[1];model.hasError=false;valFormManager.onValidationStatusChanged(function(evt,args){if(!args.form.$valid){var subViewContent=el.find('.ng-invalid');if(subViewContent.length>0){model.hasError=true;}else{model.hasError=false;}}else{model.hasError=false;}});}
var directive={require:['?^^form','?^^valFormManager'],restrict:'A',link:link,controller:controller};return directive;}
angular.module('umbraco.directives').directive('valSubView',valSubViewDirective);}());'use strict';function valTab(){return{require:['^^form','^^valFormManager'],restrict:'A',link:function link(scope,element,attr,ctrs){var valFormManager=ctrs[1];var tabAlias=scope.tab.alias;scope.tabHasError=false;valFormManager.onValidationStatusChanged(function(evt,args){if(!args.form.$valid){var tabContent=element.closest('.umb-editor').find('[data-element=\'tab-content-'+tabAlias+'\']');if(tabContent.find('.ng-invalid').length>0){scope.tabHasError=true;}else{scope.tabHasError=false;}}else{scope.tabHasError=false;}});}};}
angular.module('umbraco.directives.validation').directive('valTab',valTab);'use strict';angular.module('umbraco.directives.validation').directive('valTriggerChange',function($sniffer){return{link:function link(scope,elem,attrs){elem.on('click',function(){$(attrs.valTriggerChange).trigger($sniffer.hasEvent('input')?'input':'change');});},priority:1};});'use strict';(function(){'use strict';angular.module('umbraco').component('umbBlockCard',{template:' <div class="__showcase" ng-style="{\'background-color\':vm.blockConfigModel.backgroundColor, \'background-image\': vm.blockConfigModel.thumbnail ? \'url(\'+vm.blockConfigModel.thumbnail+\'?upscale=false&width=400)\' : \'transparent\'}"> <i ng-if="vm.blockConfigModel.thumbnail == null && vm.elementTypeModel.icon" class="__icon {{ vm.elementTypeModel.icon }}" ng-style="{\'color\':vm.blockConfigModel.iconColor}" aria-hidden="true"></i> </div> <div class="__info"> <div class="__name" ng-bind="vm.elementTypeModel.name"></div> <div class="__subname" ng-if="vm.elementTypeModel.description" ng-bind="vm.elementTypeModel.description"></div> </div> <ng-transclude></ng-transclude> ',controller:BlockCardController,controllerAs:'vm',transclude:true,bindings:{blockConfigModel:'<',elementTypeModel:'<'}});function BlockCardController(){var vm=this;}}());'use strict';(function(){'use strict';angular.module('umbraco.directives').component('umbElementEditorContent',{template:'<div class="form-horizontal"> <ng-form name="elementTypeContentForm"> <div class="umb-group-panel" data-element="group-{{group.alias}}" ng-repeat="group in vm.model.variants[0].tabs track by group.label"> <div class="umb-group-panel__header"> <div id="group-{{group.id}}">{{ group.label }}</div> </div> <div class="umb-group-panel__content"> <umb-property data-element="property-{{property.alias}}" ng-repeat="property in group.properties track by property.alias" property="property" element-key="{{vm.model.key}}" show-inherit="vm.model.variants.length > 1 && !property.culture && !activeVariant.language.isDefault" inherits-from="defaultVariant.language.name"> <div ng-class="{\'o-40 cursor-not-allowed\': vm.model.variants.length > 1 && !activeVariant.language.isDefault && !property.culture && !property.unlockInvariantValue}"> <umb-property-editor model="property" preview="vm.model.variants.length > 1 && !activeVariant.language.isDefault && !property.culture && !property.unlockInvariantValue"> </umb-property-editor> </div> </umb-property> </div> </div> <umb-empty-state ng-if="vm.model.tabs.length === 0" position="center"> <localize key="content_noProperties"></localize> </umb-empty-state> </ng-form> </div> ',controller:ElementEditorContentComponentController,controllerAs:'vm',bindings:{model:'='}});function ElementEditorContentComponentController($scope){var vm=this;vm.getScope=getScope;function getScope(){return $scope;}}}());'use strict';(function(){'use strict';function umbPropertyActionsController(keyboardService){var vm=this;vm.isOpen=false;function initDropDown(){keyboardService.bind('esc',vm.close);}
function destroyDropDown(){keyboardService.unbind('esc');}
vm.toggle=function(){if(vm.isOpen===true){vm.close();}else{vm.open();}};vm.open=function(){vm.isOpen=true;initDropDown();};vm.close=function(){vm.isOpen=false;destroyDropDown();};vm.executeAction=function(action){action.method();vm.close();};vm.$onDestroy=function(){if(vm.isOpen===true){destroyDropDown();}};}
var umbPropertyActionsComponent={template:'<div class="umb-property-actions" ng-if="vm.actions.length > 0"> <button type="button" class="btn-reset umb-outline umb-property-actions__toggle" ng-click="vm.toggle()" localize="title" title="propertyActions_tooltipForPropertyActionsMenu"><i></i><i></i><i></i></button> <div class="umb-property-actions__menu" role="menu" ng-if="vm.isOpen" on-outside-click="vm.close()" on-close="vm.close()" deep-blur="vm.close()"> <button class="umb-property-actions__menu-open-toggle" ng-click="vm.close()" tabindex="-1"><i></i><i></i><i></i></button> <ul class="umb-contextmenu"> <li ng-repeat="action in vm.actions" role="menuitem" class="umb-contextmenu-item" ng-class="{\'-opens-dialog\': action.opensDialog}"> <button type="button" class="btn-reset umb-outline" ng-click="vm.executeAction(action)" ng-disabled="action.isDisabled === true"> <i class="icon icon-{{action.icon}}" aria-hidden="true"></i> <span class="menu-label"><localize key="{{::action.labelKey}}" tokens="action.labelTokens"></localize></span> </button> </li> </ul> </div> </div> ',bindings:{actions:'<'},controllerAs:'vm',controller:umbPropertyActionsController};angular.module('umbraco.directives').component('umbPropertyActions',umbPropertyActionsComponent);}());'use strict';(function(){'use strict';angular.module('umbraco').component('umbMiniSearch',{template:'<ng-form class="umb-mini-search" ng-class="{\'--has-value\': vm.model !== null && vm.model !== \'\'}" novalidate> <i class="icon icon-search" aria-hidden="true"></i> <input class="form-control search-input" type="text" localize="placeholder,label" label="@general_typeToSearch" placeholder="@general_typeToSearch" ng-model="vm.model" ng-change="vm.onChange()" ng-keydown="vm.onKeyDown($event)" ng-blur="vm.onBlur($event)" prevent-enter-submit no-dirty-check> </ng-form> ',controller:UmbMiniSearchController,controllerAs:'vm',bindings:{model:'=',onStartTyping:'&?',onSearch:'&?',onBlur:'&?'}});function UmbMiniSearchController($scope){var vm=this;var searchDelay=_.debounce(function(){$scope.$apply(function(){if(vm.onSearch){vm.onSearch();}});},500);vm.onKeyDown=function(ev){switch(ev.keyCode){case 13:if(vm.onSearch){vm.onSearch();}
break;}};vm.onChange=function(){if(vm.onStartTyping){vm.onStartTyping();}
searchDelay();};}}());'use strict';(function(){'use strict';angular.module('umbraco').component('umbBlockListBlock',{controller:BlockListBlockController,controllerAs:'model',bindings:{stylesheet:'@',view:'@',block:'=',api:'<',index:'<',parentForm:'<'},require:{valFormManager:'^^valFormManager'}});function BlockListBlockController($scope,$compile,$element){var model=this;model.$onInit=function(){$scope.block=model.block;$scope.api=model.api;$scope.index=model.index;$scope.parentForm=model.parentForm;$scope.valFormManager=model.valFormManager;if(model.stylesheet){model.stylesheet='/'+model.stylesheet;var shadowRoot=$element[0].attachShadow({mode:'open'});shadowRoot.innerHTML='\n                    <style>\n                    @import "'.concat(model.stylesheet,'"\n                    </style>\n                    <div ng-include="\'').concat(model.view,'\'"></div>\n                ');$compile(shadowRoot)($scope);}else{$element.append($compile('<div ng-include="model.view"></div>')($scope));}};model.$onChanges=function(changes){if(changes.index){$scope.index=changes.index.currentValue;}};}}());'use strict';function _typeof(obj){if(typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj;};}
return _typeof(obj);}
(function(){'use strict';angular.module('umbraco').component('umbBlockListPropertyEditor',{template:'<div class="umb-block-list"> <umb-load-indicator ng-if="vm.loading"></umb-load-indicator> <div class="umb-block-list__wrapper" ng-style="vm.listWrapperStyles"> <div ui-sortable="vm.sortableOptions" ng-model="vm.layout" ng-if="vm.loading !== true"> <div ng-repeat="layout in vm.layout track by layout.$block.key"> <button type="button" class="btn-reset umb-block-list__block--create-button" ng-click="vm.showCreateDialog($index, $event)" ng-controller="Umbraco.PropertyEditors.BlockListPropertyEditor.CreateButtonController as inlineCreateButtonCtrl" ng-mousemove="inlineCreateButtonCtrl.onMouseMove($event)"> <div class="__plus" ng-style="{\'left\':inlineCreateButtonCtrl.plusPosX}">+</div> </button> <umb-block-list-row block-editor-api="vm.blockEditorApi" layout="layout" index="$index"> </umb-block-list-row> </div> </div> <button ng-if="vm.loading !== true" id="{{vm.model.alias}}" type="button" class="btn-reset umb-block-list__create-button umb-outline" ng-class="{ \'--disabled\': vm.availableBlockTypes.length === 0 }" ng-click="vm.showCreateDialog(vm.layout.length, $event)"> <localize key="grid_addElement"></localize> </button> <input type="hidden" name="minCount" ng-model="vm.layout" val-server="minCount"> <input type="hidden" name="maxCount" ng-model="vm.layout" val-server="maxCount"> <div ng-messages="vm.propertyForm.minCount.$error" show-validation-on-submit> <div class="help text-error" ng-message="minCount"> <localize key="validation_entriesShort" tokens="[vm.validationLimit.min, vm.validationLimit.min - vm.layout.length]" watch-tokens="true">Minimum %0% entries, needs <strong>%1%</strong> more.</localize> </div> <span class="help-inline" ng-message="valServer" ng-bind-html="vm.propertyForm.minCount.errorMsg">></span> </div> <div ng-messages="vm.propertyForm.maxCount.$error" show-validation-on-submit> <div class="help text-error" ng-message="maxCount"> <localize key="validation_entriesExceed" tokens="[vm.validationLimit.max, vm.layout.length - vm.validationLimit.max]" watch-tokens="true">Maximum %0% entries, <strong>%1%</strong> too many.</localize> </div> <span class="help-inline" ng-message="valServer" ng-bind-html="vm.propertyForm.maxCount.errorMsg"></span> </div> </div> <umb-overlay ng-if="vm.blockTypePicker.show" position="target" size="vm.blockTypePicker.size" view="vm.blockTypePicker.view" model="vm.blockTypePicker"> </umb-overlay> </div> ',controller:BlockListController,controllerAs:'vm',bindings:{model:'='},require:{propertyForm:'^form',umbProperty:'?^umbProperty',umbVariantContent:'?^^umbVariantContent',umbVariantContentEditors:'?^^umbVariantContentEditors',umbElementEditorContent:'?^^umbElementEditorContent'}});function BlockListController($scope,editorService,clipboardService,localizationService,overlayService,blockEditorService,udiService,serverValidationManager,angularHelper){var unsubscribe=[];var modelObject;var copyAllBlocksAction;var deleteAllBlocksAction;var inlineEditing=false;var liveEditing=true;var vm=this;vm.loading=true;vm.currentBlockInFocus=null;vm.setBlockFocus=function(block){if(vm.currentBlockInFocus!==null){vm.currentBlockInFocus.focus=false;}
vm.currentBlockInFocus=block;block.focus=true;};vm.supportCopy=clipboardService.isSupported();vm.layout=[];vm.availableBlockTypes=[];var labels={};vm.labels=labels;localizationService.localizeMany(['grid_addElement','content_createEmpty']).then(function(data){labels.grid_addElement=data[0];labels.content_createEmpty=data[1];});vm.$onInit=function(){if(!vm.umbVariantContent){var found=angularHelper.traverseScopeChain($scope,function(s){return s&&s.vm&&s.vm.constructor.name==='umbVariantContentController';});vm.umbVariantContent=found?found.vm:null;if(!vm.umbVariantContent){throw'Could not find umbVariantContent in the $scope chain';}}
vm.model.onValueChanged=onServerValueChanged;inlineEditing=vm.model.config.useInlineEditingAsDefault;liveEditing=vm.model.config.useLiveEditing;vm.validationLimit=vm.model.config.validationLimit;vm.listWrapperStyles={};if(vm.model.config.maxPropertyWidth){vm.listWrapperStyles['max-width']=vm.model.config.maxPropertyWidth;}
if(_typeof(vm.model.value)!=='object'||vm.model.value===null){vm.model.value={};}
var scopeOfExistence=$scope;if(vm.umbVariantContentEditors&&vm.umbVariantContentEditors.getScope){scopeOfExistence=vm.umbVariantContentEditors.getScope();}else if(vm.umbElementEditorContent&&vm.umbElementEditorContent.getScope){scopeOfExistence=vm.umbElementEditorContent.getScope();}
modelObject=blockEditorService.createModelObject(vm.model.value,vm.model.editor,vm.model.config.blocks,scopeOfExistence,$scope);modelObject.load().then(onLoaded);copyAllBlocksAction={labelKey:'clipboard_labelForCopyAllEntries',labelTokens:[vm.model.label],icon:'documents',method:requestCopyAllBlocks,isDisabled:true};deleteAllBlocksAction={labelKey:'clipboard_labelForRemoveAllEntries',labelTokens:[],icon:'trash',method:requestDeleteAllBlocks,isDisabled:true};var propertyActions=[copyAllBlocksAction,deleteAllBlocksAction];if(vm.umbProperty){vm.umbProperty.setPropertyActions(propertyActions);}};function onServerValueChanged(newVal,oldVal){if(_typeof(newVal)!=='object'||newVal===null){newVal={};}
modelObject.update(newVal,$scope);onLoaded();}
function setDirty(){if(vm.propertyForm){vm.propertyForm.$setDirty();}}
function onLoaded(){vm.layout=modelObject.getLayout([]);var invalidLayoutItems=[];vm.layout.forEach(function(entry){if(entry.$block===undefined||entry.$block===null||entry.$block.data===undefined){var block=getBlockObject(entry);if(block!==null){entry.$block=block;}else{invalidLayoutItems.push(entry);}}});invalidLayoutItems.forEach(function(entry){var index=vm.layout.findIndex(function(x){return x===entry;});if(index>=0){vm.layout.splice(index,1);}});vm.availableContentTypesAliases=modelObject.getAvailableAliasesForBlockContent();vm.availableBlockTypes=modelObject.getAvailableBlocksForBlockPicker();vm.loading=false;$scope.$evalAsync();}
function getDefaultViewForBlock(block){if(block.config.unsupported===true)
return'views/propertyeditors/blocklist/blocklistentryeditors/unsupportedblock/unsupportedblock.editor.html';if(inlineEditing===true)
return'views/propertyeditors/blocklist/blocklistentryeditors/inlineblock/inlineblock.editor.html';return'views/propertyeditors/blocklist/blocklistentryeditors/labelblock/labelblock.editor.html';}
function getBlockObject(entry){var block=modelObject.getBlockObject(entry);if(block===null)
return null;if(vm.umbVariantContent.editor.content.language){block.content.language=vm.umbVariantContent.editor.content.language;block.content.variants[0].tabs.forEach(function(tab){tab.properties.forEach(function(prop){prop.culture=vm.umbVariantContent.editor.content.language.culture;});});}
block.view=block.config.view?'/'+block.config.view:getDefaultViewForBlock(block);block.hideContentInOverlay=block.config.forceHideContentEditorInOverlay===true||inlineEditing===true;block.showSettings=block.config.settingsElementTypeKey!=null;block.showCopy=vm.supportCopy&&block.config.contentTypeKey!=null;return block;}
function addNewBlock(index,contentTypeKey){var layoutEntry=modelObject.create(contentTypeKey);if(layoutEntry===null){return false;}
var blockObject=getBlockObject(layoutEntry);if(blockObject===null){return false;}
layoutEntry.$block=blockObject;vm.layout.splice(index,0,layoutEntry);vm.setBlockFocus(blockObject);return true;}
function deleteBlock(block){var layoutIndex=vm.layout.findIndex(function(entry){return entry.contentUdi===block.content.udi;});if(layoutIndex===-1){throw new Error('Could not find layout entry of block with udi: '+block.content.udi);}
setDirty();var removed=vm.layout.splice(layoutIndex,1);removed.forEach(function(x){var guid=udiService.getKey(x.contentUdi);serverValidationManager.removePropertyError(guid,vm.umbProperty.property.culture,vm.umbProperty.property.segment,'',{matchType:'contains'});});modelObject.removeDataAndDestroyModel(block);}
function deleteAllBlocks(){vm.layout.forEach(function(entry){deleteBlock(entry.$block);});}
function activateBlock(blockObject){blockObject.active=true;}
function editBlock(blockObject,openSettings,blockIndex,parentForm){if(blockIndex===undefined){throw'blockIndex was not specified on call to editBlock';}
var wasNotActiveBefore=blockObject.active!==true;if(openSettings!==true&&blockObject.hideContentInOverlay===true){return;}
if(openSettings===true&&!blockObject.config.settingsElementTypeKey){return;}
activateBlock(blockObject);var blockContentClone=Utilities.copy(blockObject.content);var blockSettingsClone=null;if(blockObject.config.settingsElementTypeKey){blockSettingsClone=Utilities.copy(blockObject.settings);}
var blockEditorModel={$parentScope:$scope,$parentForm:parentForm||vm.propertyForm,hideContent:blockObject.hideContentInOverlay,openSettings:openSettings===true,liveEditing:liveEditing,title:blockObject.label,index:blockIndex,view:'views/common/infiniteeditors/blockeditor/blockeditor.html',size:blockObject.config.editorSize||'medium',submit:function submit(blockEditorModel){if(liveEditing===false){blockObject.retrieveValuesFrom(blockEditorModel.content,blockEditorModel.settings);}
blockObject.active=false;editorService.close();},close:function close(){if(liveEditing===true){blockObject.retrieveValuesFrom(blockContentClone,blockSettingsClone);}
if(wasNotActiveBefore===true){blockObject.active=false;}
editorService.close();}};if(liveEditing===true){blockEditorModel.content=blockObject.content;blockEditorModel.settings=blockObject.settings;}else{blockEditorModel.content=blockContentClone;blockEditorModel.settings=blockSettingsClone;}
editorService.open(blockEditorModel);}
vm.showCreateDialog=showCreateDialog;function showCreateDialog(createIndex,$event){if(vm.blockTypePicker){return;}
if(vm.availableBlockTypes.length===0){return;}
var amountOfAvailableTypes=vm.availableBlockTypes.length;var blockPickerModel={$parentScope:$scope,$parentForm:vm.propertyForm,availableItems:vm.availableBlockTypes,title:vm.labels.grid_addElement,orderBy:'$index',view:'views/common/infiniteeditors/blockpicker/blockpicker.html',size:amountOfAvailableTypes>8?'medium':'small',filter:amountOfAvailableTypes>8,clickPasteItem:function clickPasteItem(item,mouseEvent){if(item.type==='elementTypeArray'){var indexIncrementor=0;item.pasteData.forEach(function(entry){if(requestPasteFromClipboard(createIndex+indexIncrementor,entry)){indexIncrementor++;}});}else{requestPasteFromClipboard(createIndex,item.pasteData);}
if(!(mouseEvent.ctrlKey||mouseEvent.metaKey)){blockPickerModel.close();}},submit:function submit(blockPickerModel,mouseEvent){var added=false;if(blockPickerModel&&blockPickerModel.selectedItem){added=addNewBlock(createIndex,blockPickerModel.selectedItem.blockConfigModel.contentTypeKey);}
if(!(mouseEvent.ctrlKey||mouseEvent.metaKey)){editorService.close();if(added&&vm.layout.length>createIndex){if(inlineEditing===true){activateBlock(vm.layout[createIndex].$block);}else if(inlineEditing===false&&vm.layout[createIndex].$block.hideContentInOverlay!==true){editBlock(vm.layout[createIndex].$block,false,createIndex,blockPickerModel.$parentForm);}}}},close:function close(){if(createIndex<vm.layout.length){vm.setBlockFocus(vm.layout[Math.max(createIndex-1,0)].$block);}
editorService.close();}};blockPickerModel.clickClearClipboard=function($event){clipboardService.clearEntriesOfType('elementType',vm.availableContentTypesAliases);clipboardService.clearEntriesOfType('elementTypeArray',vm.availableContentTypesAliases);};blockPickerModel.clipboardItems=[];var singleEntriesForPaste=clipboardService.retriveEntriesOfType('elementType',vm.availableContentTypesAliases);singleEntriesForPaste.forEach(function(entry){blockPickerModel.clipboardItems.push({type:'elementType',pasteData:entry.data,blockConfigModel:modelObject.getScaffoldFromAlias(entry.alias),elementTypeModel:{name:entry.label,icon:entry.icon}});});var arrayEntriesForPaste=clipboardService.retriveEntriesOfType('elementTypeArray',vm.availableContentTypesAliases);arrayEntriesForPaste.forEach(function(entry){blockPickerModel.clipboardItems.push({type:'elementTypeArray',pasteData:entry.data,blockConfigModel:{},elementTypeModel:{name:entry.label,icon:entry.icon}});});editorService.open(blockPickerModel);};var requestCopyAllBlocks=function requestCopyAllBlocks(){var elementTypesToCopy=vm.layout.filter(function(entry){return entry.$block.config.unsupported!==true;}).map(function(entry){return entry.$block.content;});var aliases=elementTypesToCopy.map(function(content){return content.contentTypeAlias;});aliases=aliases.filter(function(item,index){return aliases.indexOf(item)===index;});var contentNodeName='';if(vm.umbVariantContent){contentNodeName=vm.umbVariantContent.editor.content.name;}else if(vm.umbElementEditorContent){contentNodeName=vm.umbElementEditorContent.model.documentType.name;}
localizationService.localize('clipboard_labelForArrayOfItemsFrom',[vm.model.label,contentNodeName]).then(function(localizedLabel){clipboardService.copyArray('elementTypeArray',aliases,elementTypesToCopy,localizedLabel,'icon-thumbnail-list',vm.model.id);});};function copyBlock(block){clipboardService.copy('elementType',block.content.contentTypeAlias,block.content,block.label);}
function requestPasteFromClipboard(index,pasteEntry){if(pasteEntry===undefined){return false;}
var layoutEntry=modelObject.createFromElementType(pasteEntry);if(layoutEntry===null){return false;}
var blockObject=getBlockObject(layoutEntry);if(blockObject===null){return false;}
layoutEntry.$block=blockObject;vm.layout.splice(index,0,layoutEntry);vm.currentBlockInFocus=blockObject;return true;}
function requestDeleteBlock(block){localizationService.localizeMany(['general_delete','blockEditor_confirmDeleteBlockMessage','contentTypeEditor_yesDelete']).then(function(data){var overlay={title:data[0],content:localizationService.tokenReplace(data[1],[block.label]),submitButtonLabel:data[2],close:function close(){overlayService.close();},submit:function submit(){deleteBlock(block);overlayService.close();}};overlayService.confirmDelete(overlay);});}
function requestDeleteAllBlocks(){localizationService.localizeMany(['content_nestedContentDeleteAllItems','general_delete']).then(function(data){overlayService.confirmDelete({title:data[1],content:data[0],close:function close(){overlayService.close();},submit:function submit(){deleteAllBlocks();overlayService.close();}});});}
function openSettingsForBlock(block,blockIndex,parentForm){editBlock(block,true,blockIndex,parentForm);}
vm.blockEditorApi={activateBlock:activateBlock,editBlock:editBlock,copyBlock:copyBlock,requestDeleteBlock:requestDeleteBlock,deleteBlock:deleteBlock,openSettingsForBlock:openSettingsForBlock};vm.sortableOptions={axis:'y',cursor:'grabbing',handle:'.blockelement__draggable-element',cancel:'input,textarea,select,option',classes:'.blockelement--dragging',distance:5,tolerance:'pointer',scroll:true,update:function update(ev,ui){setDirty();}};function onAmountOfBlocksChanged(){copyAllBlocksAction.isDisabled=vm.layout.length===0;deleteAllBlocksAction.isDisabled=vm.layout.length===0;if(vm.propertyForm){var isMinRequirementGood=vm.validationLimit.min===null||vm.layout.length>=vm.validationLimit.min;vm.propertyForm.minCount.$setValidity('minCount',isMinRequirementGood);var isMaxRequirementGood=vm.validationLimit.max===null||vm.layout.length<=vm.validationLimit.max;vm.propertyForm.maxCount.$setValidity('maxCount',isMaxRequirementGood);}}
unsubscribe.push($scope.$watch(function(){return vm.layout.length;},onAmountOfBlocksChanged));$scope.$on('$destroy',function(){var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=unsubscribe[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var subscription=_step.value;subscription();}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}});}}());'use strict';(function(){'use strict';angular.module('umbraco').component('umbBlockListRow',{template:'<ng-form name="vm.blockRowForm" val-server-match="{ \'contains\' : { \'valServerMatchContent\': vm.layout.$block.content.key, \'valServerMatchSettings\': vm.layout.$block.settings.key } }"> <div class="umb-block-list__block" ng-class="{\'--active\':vm.layout.$block.active}"> <umb-block-list-block stylesheet="{{::vm.layout.$block.config.stylesheet}}" class="umb-block-list__block--content" view="{{vm.layout.$block.view}}" api="vm.blockEditorApi" block="vm.layout.$block" index="vm.index" parent-form="vm.blockRowForm"> </umb-block-list-block> <div class="umb-block-list__block--actions"> <button type="button" class="btn-reset umb-outline action --settings" localize="title" title="actions_editSettings" ng-click="vm.blockEditorApi.openSettingsForBlock(vm.layout.$block, vm.index, vm.blockRowForm);" ng-class="{ \'--error\': vm.blockRowForm.$error.valServerMatchSettings && vm.valFormManager.isShowingValidation() }" ng-if="vm.layout.$block.showSettings === true"> <i class="icon icon-settings" aria-hidden="true"></i> <span class="sr-only"> <localize key="general_settings">Settings</localize> </span> </button> <button type="button" class="btn-reset umb-outline action --copy" localize="title" title="actions_copy" ng-click="vm.blockEditorApi.copyBlock(vm.layout.$block);" ng-if="vm.layout.$block.showCopy === true"> <i class="icon icon-documents" aria-hidden="true"></i> <span class="sr-only"> <localize key="general_copy">Copy</localize> </span> </button> <button type="button" class="btn-reset umb-outline action --delete" localize="title" title="actions_delete" ng-click="vm.blockEditorApi.requestDeleteBlock(vm.layout.$block);"> <i class="icon icon-trash" aria-hidden="true"></i> <span class="sr-only"> <localize key="general_delete">Delete</localize> </span> </button> </div> </div> </ng-form> ',controller:BlockListRowController,controllerAs:'vm',bindings:{blockEditorApi:'<',layout:'<',index:'<'},require:{valFormManager:'^^valFormManager'}});function BlockListRowController($scope){var vm=this;vm.$onInit=function(){};}}());}());;